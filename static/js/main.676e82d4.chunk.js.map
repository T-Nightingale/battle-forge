{"version":3,"sources":["utils/files.js","utils/misc.js","hooks/use-modal.jsx","hooks/index.js","components/footer/index.js","assets/battleforged_anvil.png","components/dropdown/index.jsx","utils/colors.js","routes/modals/index.jsx","components/MainNav/index.jsx","components/CustomCircularProgress/index.tsx","utils/format.js","utils/math.js","utils/data.js","routes/faction/focus.js","components/styled-table/index.tsx","routes/faction/organization.js","routes/faction/overview.js","components/roster/power-card.jsx","routes/faction/powers.js","components/roster/rule-list.jsx","components/roster/weapon-list.jsx","components/roster/relic-card.jsx","routes/faction/relics.js","routes/faction/rules.js","components/roster/strategy-card.jsx","routes/faction/strategies.js","components/roster/modals/index.jsx","components/roster/option-list.jsx","components/roster/unit-stats.jsx","components/roster/unit-card.jsx","routes/faction/units.js","routes/faction/weapons.js","routes/faction/index.js","routes/factions/factions.js","routes/factions/mission_generator.js","routes/factions/overview.js","utils/markdown.jsx","routes/factions/rules.js","routes/factions/index.js","hooks/use-query-params.jsx","routes/games/index.js","components/bootstrap/index.jsx","components/print/weapon-list.jsx","components/print/index.jsx","routes/factions/modals/index.jsx","utils/constants.js","routes/Lists/modals/index.jsx","routes/Lists/index.js","styles/style.js","routes/PageNotFound.js","routes/Privacy.jsx","routes/rosters/modals/index.jsx","routes/rosters/index.js","routes/Rules.jsx","assets/battle_forged_wide.png","components/gallery/index.jsx","routes/Splash.jsx","utils/images.js","routes/Updates.jsx","App.tsx","hooks/use-data-fetcher.jsx","serviceWorker.js","index.js"],"names":["downloadFile","exportObj","type","exportName","dataStr","encodeURIComponent","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","readFileContent","file","reader","FileReader","Promise","resolve","reject","onload","event","target","result","onerror","error","readAsText","customMerge","object","sources","mergeWith","objValue","srcValue","insert","arr","index","newItem","slice","Wrapper","styled","div","invariantViolation","Error","ModalContext","React","createContext","showModal","hideModal","displayName","ModalProvider","container","rootComponent","children","HTMLElement","useState","modals","setModals","useCallback","key","modal","extraProps","newModals","contextValue","useMemo","Provider","value","Fragment","ModalRoot","component","ModalRenderer","memo","props","rest","RootComponent","undefined","mountNode","setMountNode","useEffect","createPortal","Object","keys","map","generateModalKey","count","isFunctionalComponent","Component","prototype","isReactComponent","useModal","context","useContext","setExtraProps","isShown","setShown","getWindowDimensions","window","width","innerWidth","height","innerHeight","DataContext","breadCrumbDefaults","factions","rules","games","missions","quickstart","updates","privacy","lists","Footer","dimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","Container","Box","display","sx","mt","mb","flexGrow","Link","href","className","Date","getFullYear","Dropdown","as","isOpen","setIsOpen","anchorElement","setAnchorElement","onClick","open","handleClose","handleOpen","currentTarget","getTextColor","rgb","Math","round","parseInt","r","g","b","hexToRgb","hex","exec","colors","red","id","name","import","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","getColor","colorId","camelCase","THEMES","label","UserPreferences","userPrefs","setUserPrefs","localUserPrefs","setLocalUserPrefs","colorOptions","values","color","MenuItem","primaryColor","Dialog","fullWidth","maxWidth","onClose","DialogTitle","DialogContent","FormGroup","FormControl","FormLabel","RadioGroup","row","theme","onChange","FormControlLabel","control","Radio","my","InputLabel","Select","size","labelId","Checkbox","showBeta","checked","developerMode","DialogActions","Button","Search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","SearchIconWrapper","padding","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","breakpoints","up","MainNav","searchMode","setSearchMode","nope","data","appState","setAppState","contextActions","navigate","useNavigate","gameTypesRaw","get","gamesUnsorted","filter","game","version","Number","gameTypes","gameType","length","navItems","icon","Home","to","gameTypeKey","toAbs","showUserPreferences","hideUserPreferences","useTheme","setOpen","fullScreen","useMediaQuery","numActionsToShow","enableSearch","renderMenuItem","item","Divider","ListItemButton","ListItemIcon","ListItemText","primary","Typography","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","pl","ListItem","button","AppBar","zIndex","drawer","Toolbar","style","IconButton","edge","mr","startIcon","src","IGR","alt","noWrap","fontSize","fontWeight","textTransform","flex","action","title","paddingRight","anchorOrigin","vertical","horizontal","transformOrigin","anchorEl","MenuListProps","dense","searchText","autoFocus","placeholder","inputProps","SwipeableDrawer","onOpen","Drawer","variant","flexShrink","boxSizing","CustomCircularProgress","CircularProgress","disableShrink","mode","animationDuration","left","circularProgressClasses","circle","strokeLinecap","thickness","formatModel","model","unit","faction","options","weaponOrderer","weapon","getWeapon","ruleOrderer","rule","getRule","hideCount","equipString","weapons","orderBy","formatWeapon","join","rulesString","formatRule","modelCount","min","ruleId","ruleData","inputs","input","weaponData","weaponCount","weaponMount","mount","wepName","wepMount","LEVEL_TO_NAME","formatLevel","level","round5","x","getRandomItem","floor","random","getRandomItems","numItems","sort","DataAPI","root","factionList","globalWeapons","globalUnits","units","globalRules","globalPowers","powers","globalStrategies","strategies","globalPerks","perks","globalSetbacks","setbacks","globalRelics","relics","globalModels","models","globalTerrain","terrain","globalPowerCategories","powerCategories","rootWeapons","rootRules","rootPhases","phases","rootStrategies","rootPerks","rootSetbacks","rootGameTypes","rootTerrain","rootMissions","rootPowerCategories","CONSTANTS","baseStats","movement","shoot","fight","courage","reflexes","wounds","defense","baseCost","woundsCost","courageCost","defenseCost","apCost","damageCost","movementCost","dummyTarget","agility","max","getGameType","getRawCategories","categories","getNameLists","nameLists","sortBy","getNameList","listId","getRandomName","list","firstNames","uniq","middleNames","lastNames","getRandomMaleName","getRandomFemaleName","getRawPhases","getPhase","categoryId","getOrganizations","organizations","getRawOrganizations","getOrganizationSlotsRaw","organization","getOrganizationCategory","category","getCategories","getRawPowerCategories","getPowerCategories","getPowerCategory","getTerrain","getCategory","ruleName","weaponName","weaponId","getModel","modelName","modelId","getModelList","modelList","getPower","powerName","powerId","description","getStrategy","strategyName","strategyId","getRawAlliances","alliances","getAlliance","allianceName","getAlliances","getFactions","getRawFaction","factionName","getSubfactionNameList","subfactionList","subfactions","Set","has","subfactionKey","subfaction","hasSubfactions","thing","getFaction","mapValues","strat","source","getSubfaction","subfactionName","getFactionWithSubfaction","subfactionData","subfactionFilter","subfactionset","restricted","pickBy","getAllKeywords","keywords","getUnits","forEach","keyword","add","Array","from","getPowers","getStrategies","getPerks","getSetbacks","getSetback","setbackId","getPerk","perkId","getRelics","getRelic","relicId","getRelicCost","relic","console","log","getUnit","unitId","getModels","modelMap","push","option","replaceModel","castArray","addedModel","theModel","modelData","addModel","getAllModels","intersection","reduce","currModels","concat","getAddTerm","addLimit","addTerm","getModelAddTerm","modelLimit","limitSplit","split","getAddLimitTermUnit","getAddTermUnit","getAdditionalModelsList","upgrades","modelIndex","upgradeCount","modelPoints","trunc","getModelTotalPoints","modelStats","addList","text","points","modelIds","limit","choiceLimit","getOptionsList","unitData","selectedModels","selectedModelsRaw","unitTotalModels","sum","modelAddTerm","isEach","addedList","totalCost","addedWeaponList","addedListString","addedMod","mod","numThisModel","numThisModelRaw","totalOldCost","replaceLimit","modelReplaceLimit","replaceTerm","modelReplaceTerm","moddedModel","replaceTarget","replacedWith","replacedWithList","replaceList","newModModel","totalCostDiff","toNumber","all","replacedModel","replaceWeapon","replaceTermCount","replaceThingList","replacedWeapon","getWeaponCostForModel","withWeapon","replaceWith","cost","replaceRule","replace","getRuleCostForModel","withRule","replaceWithId","shortDescription","description_short","ruleInputs","ruleDescription","addWeapon","added","newCost","addRule","addedThing","removeRule","replaceWeaponList","avgCost","mean","getPowerCharge","power","dummyShooter","psychicCost","effects","effect","pts","charge","clamp","getUnitPoints","modelWithUnitRules","modelPts","resolveVariable","variableName","variables","combinedVars","constants","val","isNil","isNumber","resolvePointsRecurse","pointsArray","isArray","total","arrItem","multiply","subtract","divide","resolvePoints","getModelPoints","weaponPoints","getModelWeaponPoints","rulePoints","getModelRulePoints","ptsTotal","defenseIncrease","getWeaponCostAverage","getRuleCostAverage","modifiedWeapon","weaponMountMult","isString","getWeaponPoints","wep","weps","weaponModelMult","short","weaponAP","ap","weaponRules","range","rangeCost","rangePoints","medium","isGrenade","attacks","resolvedPoints","damage","number","isFinite","reverse","getWeaponList","weaponList","getRulesList","ruleList","getWeapons","weaponsSet","weaponsList","wepList","getAllWeapons2","allWeapons","getAllWeapons","getAllRules","allRules","getAllWeaponRules","rulesSet","rulesList","wepy","profiles","hidden","getWeaponRules","flat","getModelRules","getRules","modelRules","getMissions","getMissionScenarios","getMissionWeather","weather","getMissionConditions","conditions","getMissionSecondaries","secondaries","mergeGlobalData","gameData","Focus","rawSubfactions","setSubfaction","factionColor","textColor","align","background","breakInside","Card","border","CardHeader","py","CardContent","disabled","StyledTableRow","TableRow","th","hover","Organization","nameFilter","strategy","toLowerCase","includes","org","orgSlots","p","Table","TableBody","categoryData","organizationData","TableCell","Overview","strengths","weaknesses","sortedPowers","secondaryAction","link","secondary","PowerCard","flavor","Powers","unitPhases","groupBy","phaseOrder","cat","phaseId","phaseIdx","phaseStrategies","sourceLength","sortedStrategies","phaseData","RuleList","toggler","twoColumn","showName","showRules","setShowRules","btnStyle","borderColor","marginBottom","block","toUpperCase","stuff","WeaponList","twoColumns","factionSecondaryColor","secondary_color","textColorSecondary","thStyle","showWeapons","setShowWeapons","TableContainer","TableHead","weaponProfile","renderRules","dummyModel","RelicCard","printMode","relicCost","Relics","RELIC_TYPES","equipment","ability","groupedRelics","relicType","relicIdxKey","relicsType","sortedRelics","Rules","weaponsSorted","StrategyCard","Strategies","phaseKey","DescriptionModal","closeButton","UnitDebugModal","modelSelection","setModelSelection","unitPoints","unitModels","baseModelPoints","modelWeaponPoints","modelRulePoints","modelWeapons","striped","responsive","weaponPointsForModel","rulePointsForModel","OptionList","showOptions","setShowOptions","renderOptionList","opt","UnitStats","powerSpecialty","save","combinedString","perk","setback","str","unitPowerSpecialty","marginTop","modelString","renderAdditionalModels","UnitCard","subfactionId","unitOptions","embeddedOptions","toggle","focusView","showContext","unitWeapons","unitRules","weaponRuleList","unitSubfactions","subfac","unitSetbacksCount","hideUnitDescription","showUnitDescription","hideUnitDebug","showUnitDebug","customName","faBook","faBug","renderOptions","renderModelRules","renderModelExtraRules","Units","unitFilter","filterByFocus","pinnedUnits","setPinnedUnits","currentPage","setCurrentPage","pinned_units","unitsFiltered","numPages","ceil","sortOrder","first","second","findIndex","o","unitCategories","categoryOrder","handlePinUnit","omit","catIndex","categoryUnits","onPinUnit","pinned","mx","textAlign","Pagination","page","scrollTo","top","yCoordinate","Weapons","allSteps","steps","selector","content","stepInteraction","useParams","gameName","someData","coreData","fetchFaction","setData","isLoading","refreshFaction","isMobile","down","isTourOpen","setIsTourOpen","activeTab","setActiveTab","retryCount","setRetryCount","globalData","buyLinks","rawFaction","DEFAULT_FILTER","enqueueSnackbar","useSnackbar","fileDialog","useRef","setCustomData","passedData","newGameData","customData","uploadFaction","preventDefault","then","armyObject","JSON","parse","e","newArmyData","appearance","newData","set","factionId","catch","message","current","reportUrl","multiple","ref","overflow","TABS","Forces","rawData","Legends","isModified","hiddenTabs","onMouseEnter","onMouseLeave","faExclamationCircle","Popover","disableRestoreFocus","bgcolor","pb","borderBottom","Tabs","newValue","tab","rosterTab","Tab","a11yProps","accentColor","onRequestClose","rounded","onAfterOpen","overflowY","onBeforeClose","Factions","deleteFaction","allianceKey","allianceData","gutterBottom","Grid","xs","md","columns","sm","CardActionArea","goToFaction","image","CardMedia","url","CardActions","stopPropagation","MissionGenerator","mission","weathers","randomMission","setRandomMission","randomWeather","setRandomWeather","randomSecondary","setRandomSecondary","enableWeather","setEnableWeather","Sync","victory_conditions","sanitizeId","MarkdownRenderer","paragraph","h1","h2","h3","h4","h5","h6","a","el","element","getElementById","y","getBoundingClientRect","pageYOffset","behavior","img","maxHeight","StyledRules","gameRules","skirmishRules","gameTypeData","gameTypeName","isEqual","mdRenderer","terrains","components","rehypePlugins","RehypeToc","headings","rowSpacing","columnSpacing","rel","condition","FactionsMain","fetchGame","refreshData","coreGame","uploadFile","uploadList","listObject","forces","listName","uuidv4","setLists","listData","newFactionList","omitBy","armyData","Scenarios","factionTab","useQueryParam","defaultValue","useSearchParams","searchParams","setSearchParams","paramValue","newSearchParams","URLSearchParams","Games","refreshAllData","useQueryParams","gameCategories","refreshFactions","gameKey","idx","faCheckCircle","gameId","deleteGame","InputNumber","allowReset","changeValue","Stack","direction","TextField","inputMode","pattern","PrintView","listType","listTypeName","find","myType","totalForcePoints","force","legend","totalSP","totalForceReservePoints","legendLimit","forceFactionId","forceSubFactionId","forceFaction","thStyle2","forceCategories","forceUnits","factionRelics","forceLegends","filteredCategories","catKey","myUnit","flatWeps","uniqBy","allWeaponRules","weaponsRules","allSortedRules","allSortedWeapons","allPowerSpecialties","powerSp","powerSpecialtySet","unitIdx","selectedWeapons","selectedRules","unitSetbacks","unitPerks","unitLevel","experience","selectedOptionsList","phase","LIST_TYPES","UpdateList","updateList","oldListName","oldListType","setListName","setListType","BASE_THEME","MuiCardContent","styleOverrides","paddingBottom","MuiTabScrollButton","typography","fontFamily","PowerSpecialtySelector","powerCats","specialtyOptions","ChooseSubFaction","setSubFaction","forceId","AddLegend","addLegend","legends","sortedLegends","listLegendSet","filteredLegends","Paper","ListSubheader","AddForce","addForce","setFaction","subFaction","firstFaction","listAlliance","alliance","filteredAlliances","theFactions","filteredFactions","orgKey","subFactionId","AddUnit","addUnit","sortedUnits","ViewStrategies","phaseIndex","ViewPowers","powerSpecialties","powerCatSet","ViewUnit","injuryText","actionReference","ReferenceRules","ViewActionReference","isSkirmish","px","ViewLegend","EditUnit","setUnitOptions","setUnitPowerSpecialty","setUnitName","selectedOptions","hasPowerRule","renderOption","optIndex","selectedChoices","changeFuncCheck","newVal","shouldDisable","controlId","EditUnitCampaign","setUnitPerks","setUnitSetbacks","updateUnit","showPerkLevel","setShowPerkLevel","unitPerksData","unitSetbacksData","selectedSetbacks","selectedPerks","filteredSetbacks","perksByLevel","perkOrder","levelProgress","formattedLevel","perksLeft","canGetPerk","now","setbackCost","delete","faDice","thePerks","availablePerks","faChevronDown","faChevronUp","perkCost","faCheck","faTimes","PrintStyles","orgs","shouldStartEditMode","editMode","setEditMode","showReserves","setShowReserves","componentRef","doPrint","useReactToPrint","pageStyle","forceReserves","availableSetbacks","processUnits","daUnits","theUnit","unitKey","optionList","modelCounts","optItem","optIdx","selections","oldModelCounts","totalModels","indValue","itemIdx","selected","calculateUnitPoints","theLegend","legendKey","reserves","forceFactionIds","hideAddForce","showAddForce","allFactionsLoaded","every","factionUnits","factionUrl","updateForce","mappedForces","newArr","addUnitToForce","showingReserves","theForce","hideChooseSubfaction","showChooseSubfaction","hideAddUnit","showAddUnit","hideAddLegend","showAddLegend","hideEditUnit","showEditUnit","hideEditUnitCampaign","showEditUnitCampaign","hideViewUnit","showViewUnit","hideViewLegend","showViewLegend","hideViewStrategies","showViewStrategies","hideViewPowers","showViewPowers","hideViewActionReference","showViewActionReference","hideUpdateList","showUpdateList","Add","stringify","SPMult","LegendMult","validationErrors","totalLegends","exceededLegends","forceSubfaction","unitCatCount","unitDiff","createTheme","ThemeProvider","ScopedCssBaseline","renderPrintMode","wordBreak","Alert","severity","strategyPoints","victoryPoints","rawForceFaction","factionPowers","hasPowers","factionStrategies","faUser","legendId","unitCopy","moveUnitReserves","faArrowRight","moveUnitForce","faArrowLeft","deleteUnit","RouterLink","normal","active","childLink","Code","PageNotFound","location","pathname","Privacy","AddList","setGameId","useLocation","queryParams","search","shareData","gamesRaw","rawLists","listsByGame","importList","atob","toString","goToList","hideAddList","showAddList","hideEditList","showEditList","categoryLists","filteredLists","QuickRules","activeTabNumber","activeGameTypeData","activeRules","AutoPlaySwipeableViews","autoPlay","SwipeableViews","imgs","imgPath","SwipeableTextMobileStepper","images","activeStep","setActiveStep","maxSteps","square","elevation","axis","onChangeIndex","step","enableMouseEvents","abs","MobileStepper","nextButton","prevActiveStep","backButton","shuffle","banners","iconSize","mrender","margin","randomImage","CARDS","backgroundImage","backgroundPosition","backgroundSize","flexDirection","logo","credit","card","useToc","App","dataFetcher","myUrl","localData","localStorage","getItem","localPrefs","setUrl","overwrite","setIsLoading","isError","setIsError","updateData","myData","setItem","fetchGameSystems","factionsUrl","fetchData","resultData","fetchFactions","fetchNameLists","namelistsUrl","fetchGameUpdates","updatesUrl","fetchTextData","fetchRules","rulesUrl","fetchSkirmishRules","fetchAllData","reset","resultDataNameLists","resultDataUpdates","resultDataRules","resultSkirmishRules","allData","lastFetch","someUrl","fetch","json","gameUrl","fullFactionUrl","test","factionData","newDataWithFaction","deep","stack","gameid","updateGameData","updatedData","useDataFetcher","browserTheme","userTheme","themeId","userPrimaryColor","path","opts","optPath","optData","contextData","loc","locationTitle","ignoredPathes","breadCrumbTitles","usePageTitle","notistackRef","createRef","onClickDismiss","closeSnackbar","maxSnack","CssBaseline","pt","ml","Lists","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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CE,mDADF,qFAKF,6BACE,8BACE,6CADF,+BAIF,6BACE,8BACE,sDADF,2VASF,6BACE,8BACE,sEADF,qIAMF,6BACE,8BACE,gDADF,kLAMF,6BACE,8BACE,6CADF,2CACmE,IACjE,mBACEQ,KAAK,mCACLy5B,IAAI,wCACJjgC,OAAO,SAHT,mDASJ,6BACE,8BACE,yCADF,2LAOJ,yEACA,yDACA,+CACA,4PAMA,+BACE,6BACE,gDAEF,6BACE,2DAEF,6BACE,gDAGJ,4CACA,8FACA,mUAMA,mZAQA,qLAIA,oFACA,mKAIA,+BACE,wCACA,0CACA,4CAEF,8VAOA,2XAOA,mEACA,6TAMA,+BACE,+BACE,iEADF,8VAQA,+BACE,oDADF,gbAOoD,IAClD,mBACEwG,KAAK,wKACLy5B,IAAI,wCACJjgC,OAAO,SAHT,sLAQF,+BACE,kDADF,0aAUF,4RAI2D,IACzD,mBAAGwG,KAAK,0CAA0CxG,OAAO,SAASigC,IAAI,aAAtE,4CALF,OAUA,2GAGA,+BACE,+BACE,4BACE,qEAEF,sDACA,oDACA,iZASF,+BACE,4BACE,kFAEF,yDACA,oDACA,6HAKF,+BACE,4BACE,6DAEF,yDACA,oDACA,gWASJ,gMAKA,2DACA,8FACA,+BACE,6BACE,8BACE,yEADF,wDAKF,6BACE,8BACE,6DADF,4MAOF,6BACE,8BACE,wEADF,0LAOF,6BACE,8BACE,qDADF,wWASF,6BACE,8BACE,oDADF,mPAOF,6BACE,8BACE,8DADF,kDAKF,6BACE,8BACE,6DADF,0WASF,6BACE,8BACE,wDADF,oQASJ,oGACA,+BACE,+BACE,6DADF,mIAKA,+BACE,6DADF,8NAMA,+BACE,sDADF,4SAOA,+BACE,6DADF,sHAKA,+BACE,uDADF,wgBAWA,+BACE,uDADF,6FAKF,iEACA,2ZAQA,yVAOA,gEACA,6cAQA,gKAIA,mXAOA,kEACA,uDACA,6PAMA,iDACA,kPAKA,0DACA,uIAIA,+BACE,gEACA,0FACA,2GAIA,mGACA,oEAEF,gEACA,qUAOA,oDACA,gfASA,iPAKA,yDACA,+QAMA,0KAIA,gEACA,sKAIA,s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","file":"static/js/main.676e82d4.chunk.js","sourcesContent":["export const downloadFile = (exportObj, type, exportName) => {\n    const dataStr = `${type};charset=utf-8,` + encodeURIComponent(exportObj);\n    const downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\",     dataStr);\n    downloadAnchorNode.setAttribute(\"download\", exportName);\n    document.body.appendChild(downloadAnchorNode); // required for firefox\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n\n  export const readFileContent = (file) => {\n    const reader = new FileReader()\n    return new Promise((resolve, reject) => {\n      reader.onload = event => resolve(event.target.result)\n      reader.onerror = error => reject(error)\n      reader.readAsText(file)\n    })\n  };\n\n  export const isUrl = (s) => {\n    var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/\n    return regexp.test(s);\n  }","import { mergeWith } from 'lodash';\nexport function customMerge(object, sources) {\n  return mergeWith(object, sources, ((objValue, srcValue) => {\n    if (srcValue === undefined) {\n      return undefined;\n    }\n  }))\n}\n\nexport const insert = (arr, index, newItem) => [\n  ...arr.slice(0, index),\n  newItem,\n  ...arr.slice(index)\n];","import React, {\n  memo, useCallback, useContext, useEffect, useMemo, useState\n} from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\n\nexport function usePortal() {\n  const portalElRef = React.useRef(document.createElement(\"div\"));\n\n  React.useEffect(() => {\n    const theRef = portalElRef.current;\n    document.body.appendChild(theRef);\n\n    return () => {\n      if (theRef) {\n        document.body.removeChild();\n      }\n    };\n  }, [portalElRef]);\n\n  const Portal = React.useCallback(\n    ({ children }) => {\n      if (portalElRef.current != null)\n        return createPortal(children, portalElRef.current);\n      return null;\n    },\n    [portalElRef]\n  );\n\n  return Portal;\n}\n\nconst Wrapper = styled.div`\n  font-size: var(--sev1-size);\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  padding: 2em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.7);\n  z-index: 1000;\n`;\n\n/**\n * Throw error when ModalContext is used outside of context provider\n */\nconst invariantViolation = () => {\n  throw new Error(\n    \"Attempted to call useModal outside of modal context. Make sure your app is rendered inside ModalProvider.\"\n  );\n};\n\n/**\n * Modal Context Object\n */\nexport const ModalContext = React.createContext({\n  showModal: invariantViolation,\n  hideModal: invariantViolation,\n});\nModalContext.displayName = \"ModalContext\";\n\n/**\n * Modal Provider\n *\n * Provides modal context and renders ModalRoot.\n */\nexport const ModalProvider = ({ container, rootComponent, children }) => {\n  if (container && !(container instanceof HTMLElement)) {\n    throw new Error(`Container must specify DOM element to mount modal root into.\n    This behavior has changed in 3.0.0. Please use \\`rootComponent\\` prop instead.\n    See: https://github.com/mpontus/react-modal-hook/issues/18`);\n  }\n  const [modals, setModals] = useState({});\n  const showModal = useCallback(\n    (key, modal, extraProps) =>\n      setModals((modals) => ({\n        ...modals,\n        [key]: { modal, extraProps },\n      })),\n    []\n  );\n  const hideModal = useCallback(\n    (key) =>\n      setModals((modals) => {\n        if (!modals[key]) {\n          return modals;\n        }\n        const newModals = { ...modals };\n        delete newModals[key];\n        return newModals;\n      }),\n    []\n  );\n  const contextValue = useMemo(() => ({ showModal, hideModal }), [hideModal, showModal]);\n\n  return (\n    <ModalContext.Provider value={contextValue}>\n      <React.Fragment>\n        {children}\n        <ModalRoot\n          modals={modals}\n          component={rootComponent}\n          container={container}\n        />\n      </React.Fragment>\n    </ModalContext.Provider>\n  );\n};\n\n/**\n * Component responsible for rendering the modal.\n *\n * The identity of `Component` may change dependeing on the inputs passed to\n * `useModal`. If we simply rendered `<Component />` then the modal would be\n * susceptible to rerenders whenever one of the inputs change.\n */\nconst ModalRenderer = memo((props) => {\n  const { component, extraProps, ...rest } = props;\n  return component({ extraProps, ...rest });\n});\n\n/**\n * Modal Root\n *\n * Renders modals using react portal.\n */\nexport const ModalRoot = memo(\n  ({ modals, container, component: RootComponent = React.Fragment }) => {\n    const [mountNode, setMountNode] = useState(undefined);\n    // This effect will not be ran in the server environment\n    useEffect(() => setMountNode(container || document.body), [container]);\n\n    return mountNode\n      ? createPortal(\n        <RootComponent>\n          {Object.keys(modals).map((key) => {\n            return (\n              <Wrapper>\n                <ModalRenderer\n                  key={key}\n                  component={modals[key].modal}\n                  extraProps={modals[key].extraProps}\n                />\n              </Wrapper>\n            );\n          })}\n        </RootComponent>,\n        mountNode\n      )\n      : null;\n  }\n);\n\n/**\n * Utility function to generate unique number per component instance\n */\nconst generateModalKey = (() => {\n  let count = 0;\n\n  return () => `${++count}`;\n})();\n\n/**\n * Check whether the argument is a stateless component.\n *\n * We take advantage of the stateless nature of functional components to be\n * inline the rendering of the modal component as part of another immutable\n * component.\n *\n * This is necessary for allowing the modal to update based on the inputs passed\n * as the second argument to useModal without unmounting the previous version of\n * the modal component.\n */\nconst isFunctionalComponent = (Component) => {\n  const prototype = Component.prototype;\n\n  return !prototype || !prototype.isReactComponent;\n};\n\n/**\n * React hook for showing modal windows\n */\nexport const useModal = (component, inputs = []) => {\n  if (!isFunctionalComponent(component)) {\n    throw new Error(\n      \"Only stateless components can be used as an argument to useModal. You have probably passed a class component where a function was expected.\"\n    );\n  }\n\n  const key = useMemo(generateModalKey, []);\n  const modal = useMemo(() => component, [component]);\n  const context = useContext(ModalContext);\n  const [extraProps, setExtraProps] = useState({});\n  const [isShown, setShown] = useState(false);\n  const showModal = useCallback((extraProps) => {\n    setShown(true)\n    return setExtraProps(extraProps);\n  }, []);\n  const hideModal = useCallback(() => setShown(false), []);\n\n  useEffect(() => {\n    if (isShown) {\n      context.showModal(key, modal, extraProps);\n    } else {\n      context.hideModal(key);\n    }\n\n    // Hide modal when parent component unmounts\n    return () => context.hideModal(key);\n  }, [modal, isShown, context, key, extraProps]);\n\n  return [showModal, hideModal];\n};","import { get } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nexport const DataContext = React.createContext({});\n\nconst breadCrumbDefaults = {\n  '': 'Home',\n  factions: 'Factions',\n  rules: 'Rules',\n  games: 'Games',\n  missions: 'Missions',\n  quickstart: 'Rules',\n  updates: 'Updates',\n  privacy: 'Privacy Policy',\n  lists: 'Rosters'\n};\n\nexport function usePageTitle(opts = {}) {\n  const { path: optPath, optData } = opts;\n  // const [{ data: contextData }] = React.useContext(DataContext);\n  const contextData = {};\n  const data = optData ?? contextData;\n  const loc = useLocation();\n  const path = optPath ?? loc.pathname;\n  const [locationTitle] = path.split('/').slice(-1);\n  //const ignoredPathes = new Set(['lists']);\n  const ignoredPathes = new Set([]);\n  const titles = React.useMemo(() => {\n    const breadCrumbTitles = {\n      ...breadCrumbDefaults\n    };\n    Object.keys(get(data, 'gameData.games', {})).forEach((gameId) => {\n      const game = get(data, `gameData.games[${gameId}]`);\n      Object.keys(get(game, 'factions', {})).forEach((factionId) => {\n        const faction = get(data, `gameData.games[${gameId}].factions[${factionId}]`);\n        breadCrumbTitles[factionId] = faction.name;\n      });\n      breadCrumbTitles[gameId] = game.name;\n    });\n    const lists = get(data, 'lists', {});\n    Object.keys(lists).forEach((listId) => {\n      const list = lists[listId];\n      breadCrumbTitles[listId] = list.name;\n    });\n    return breadCrumbTitles;\n  }, [data]);\n  let title = titles[locationTitle] || locationTitle;\n  title = ignoredPathes.has(title) ? null : title;\n  return title;\n};\n\nexport * from './use-data-fetcher';\nexport * from './use-modal';\n\n","import React from \"react\";\nimport { Container, Box } from \"@mui/material\";\nimport { useWindowDimensions } from \"hooks\";\nimport './footer.css';\nimport { Link } from '@mui/material';\n\n// {'Miniatures from '} <a href=\"http://khurasanminiatures.tripod.com/\">Khurasan Miniatures</a>\nexport const Footer = () => {\n  const dimensions = useWindowDimensions();\n  return (\n    <Container>\n      <Box display=\"flex\" sx={{ mt: 2, mb: 2 }}>\n        <Box display=\"flex\" flexGrow={1}>\n          {/* <a href=\"/updates\" target=\"_blank\"> {'Updates'}</a>\n              <a href=\"https://github.com/wargame-engine\" target=\"_blank\">\n                {\" \"}\n                {\"Github\"}\n              </a>\n              <a href=\"https://discord.gg/M9sets4\" target=\"_blank\">\n                {\" \"}\n                {\"Discord\"}\n              </a> */}\n          <Link href=\"/privacy\"> {\"Privacy Policy\"}</Link>\n          {/* <a href=\"https://www.patreon.com/bePatron?u=36845786\" target=\"_blank\"> {'Patreon'}</a> */}\n        </Box>\n        <Box className={dimensions.width > 768 ? \"text-right\" : \"\"}>\n          &#169; <Link href=\"https://www.indiegamerules.com\">Indie Game Rules</Link>{\" \"}\n          {new Date().getFullYear()}\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/battleforged_anvil.60c74805.png\";","import React from \"react\";\n\nexport const Dropdown = (props) => {\n  const { children, as } = props;\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [anchorElement, setAnchorElement] = React.useState(null);\n  const handleClose = () => {\n    setIsOpen(false);\n    setAnchorElement(null);\n  }\n  const handleOpen = (event) => {\n    setIsOpen(true);\n    if (event) {\n      setAnchorElement(event.currentTarget);\n    }\n  }\n  if (!children || !(typeof children === 'function')) {\n    return <></>;\n  }\n  return (\n    <>\n      <as onClick={(event) => setIsOpen(true)} />\n      {children({\n        open: isOpen,\n        handleClose,\n        handleOpen,\n        anchorElement\n      })}\n    </>\n  );\n};\n","import {\n  red,\n  pink,\n  purple,\n  deepPurple,\n  indigo,\n  blue,\n  lightBlue,\n  cyan,\n  teal,\n  green,\n  lightGreen,\n  lime,\n  yellow,\n  amber,\n  orange,\n  deepOrange,\n  brown,\n  grey as gray,\n  blueGrey as blueGray,\n} from \"@mui/material/colors\";\nimport { camelCase } from 'lodash';\n\nexport function getTextColor(rgb) {\n  // http://www.w3.org/TR/AERT#color-contrast\n  const brightness = Math.round(((parseInt(rgb.r) * 299) +\n    (parseInt(rgb.g) * 587) +\n    (parseInt(rgb.b) * 114)) / 1000);\n  const textColour = (brightness > 150) ? '#3E3E3E' : 'white';\n  return textColour;\n}\n\nexport function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nexport function rgbToHex(r, g, b) {\n  return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport function hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\n\nexport const colors = {\n  red: {\n    id: \"red\",\n    name: \"Red\",\n    import: red,\n  },\n\n  pink: {\n    id: \"pink\",\n    name: \"Pink\",\n    import: pink,\n  },\n\n  purple: {\n    id: \"purple\",\n    name: \"Purple\",\n    import: purple,\n  },\n\n  deepPurple: {\n    id: \"deep-purple\",\n    name: \"Deep Purple\",\n    import: deepPurple,\n  },\n\n  indigo: {\n    id: \"indigo\",\n    name: \"Indigo\",\n    import: indigo,\n  },\n\n  blue: {\n    id: \"blue\",\n    name: \"Blue\",\n    import: blue,\n  },\n\n  lightBlue: {\n    id: \"light-blue\",\n    name: \"Light Blue\",\n    import: lightBlue,\n  },\n\n  cyan: {\n    id: \"cyan\",\n    name: \"Cyan\",\n    import: cyan,\n  },\n\n  teal: {\n    id: \"teal\",\n    name: \"Teal\",\n    import: teal,\n  },\n\n  green: {\n    id: \"green\",\n    name: \"Green\",\n    import: green,\n  },\n\n  lightGreen: {\n    id: \"light-green\",\n    name: \"Light Green\",\n    import: lightGreen,\n  },\n\n  lime: {\n    id: \"lime\",\n    name: \"Lime\",\n    import: lime,\n  },\n\n  yellow: {\n    id: \"yellow\",\n    name: \"Yellow\",\n    import: yellow,\n  },\n\n  amber: {\n    id: \"amber\",\n    name: \"Amber\",\n    import: amber,\n  },\n\n  orange: {\n    id: \"orange\",\n    name: \"Orange\",\n    import: orange,\n  },\n\n  deepOrange: {\n    id: \"deep-orange\",\n    name: \"Deep Orange\",\n    import: deepOrange,\n  },\n\n  brown: {\n    id: \"brown\",\n    name: \"Brown\",\n    import: brown,\n  },\n\n  gray: {\n    id: \"gray\",\n    name: \"Gray\",\n    import: gray,\n  },\n\n  blueGray: {\n    id: \"blue-gray\",\n    name: \"Blue Gray\",\n    import: blueGray,\n  },\n};\n\nexport const getColor = (colorId) => {\n  if (!colorId) {\n    return null;\n  }\n\n  colorId = camelCase(colorId);\n\n  return colors[colorId];\n};","import {\n  Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, InputLabel, MenuItem, Radio, RadioGroup, Select\n} from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport React, { useState } from \"react\";\nimport { colors } from 'utils/colors';\n\nconst THEMES = [\n  { label: \"Light\", value: \"light\" },\n  { label: \"Dark\", value: \"dark\" },\n];\n\nexport const UserPreferences = (props) => {\n  const { hideModal, userPrefs, setUserPrefs } = props;\n  const [localUserPrefs, setLocalUserPrefs] = useState(userPrefs);\n  const colorOptions = Object.values(colors).map((color, index) => {\n    return <MenuItem key={index} value={color.id}>{color.name}</MenuItem>;\n  });\n  const primaryColor = localUserPrefs?.primaryColor;\n  return (\n    <>\n      <Dialog open fullWidth maxWidth=\"sm\" onClose={hideModal}>\n        <DialogTitle>Settings</DialogTitle>\n        <DialogContent>\n          <FormGroup>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Theme</FormLabel>\n              <RadioGroup\n                row\n                aria-label=\"theme-radio\"\n                name=\"theme-radio-group\"\n                value={localUserPrefs?.theme}\n                onChange={(event) => {\n                  setLocalUserPrefs({\n                    ...localUserPrefs,\n                    theme: event.target.value,\n                  });\n                }}\n              >\n                {THEMES.map((type) => (\n                  <FormControlLabel\n                    key={type.value}\n                    value={type.value}\n                    control={<Radio />}\n                    label={type.label}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </FormGroup>\n          <FormGroup sx={{ my: 1 }}>\n            <FormControl>\n              <InputLabel id=\"primary-color-label\">Primary Color</InputLabel>\n              <Select\n                size=\"small\"\n                labelId=\"primary-color-label\"\n                id=\"primary-color\"\n                value={primaryColor}\n                label=\"Primary Color\"\n                onChange={(event) => {\n                  setLocalUserPrefs({\n                    ...localUserPrefs,\n                    primaryColor: event.target.value,\n                  })\n                }}\n              >\n                {colorOptions}\n              </Select>\n            </FormControl>\n          </FormGroup>\n          <FormGroup>\n            <FormControl component=\"fieldset\">\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    onChange={() =>\n                      setLocalUserPrefs({\n                        ...localUserPrefs,\n                        showBeta: !localUserPrefs.showBeta,\n                      })\n                    }\n                    checked={localUserPrefs.showBeta}\n                  />\n                }\n                label=\"Show Beta Content\"\n              />\n            </FormControl>\n          </FormGroup>\n          <FormGroup>\n            <FormControl component=\"fieldset\">\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    onChange={() =>\n                      setLocalUserPrefs({\n                        ...localUserPrefs,\n                        developerMode: !localUserPrefs.developerMode,\n                      })\n                    }\n                    checked={localUserPrefs.developerMode}\n                  />\n                }\n                label=\"Enable Developer Mode\"\n              />\n            </FormControl>\n          </FormGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\" onClick={hideModal}>\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              setUserPrefs(localUserPrefs);\n              hideModal();\n            }}\n          >\n            Save\n          </Button>{\" \"}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n","import { ExpandLess, ExpandMore, Home } from '@mui/icons-material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport FeaturedPlayListIcon from '@mui/icons-material/FeaturedPlayList';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Collapse, Drawer, ListItemButton, Menu, MenuItem } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport InputBase from '@mui/material/InputBase';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { alpha, styled, useTheme } from '@mui/material/styles';\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport IGR from \"assets/battleforged_anvil.png\";\nimport { Dropdown } from \"components/dropdown\";\nimport { DataContext, useModal } from \"hooks\";\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport Dice6 from 'mdi-material-ui/Dice6';\nimport Discord from 'mdi-material-ui/Discord';\nimport Github from 'mdi-material-ui/Github';\nimport Newspaper from 'mdi-material-ui/Newspaper';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport ConstructionIcon from '@mui/icons-material/Construction';\nimport React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { UserPreferences } from \"routes/modals\";\nimport { get } from 'lodash';\n\nconst drawerWidth = 250;\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  // marginLeft: theme.spacing(3),\n  // width: 'auto',\n  // [theme.breakpoints.up('sm')]: {\n\n  // },\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nexport const MainNav = (props) => {\n  const [searchMode, setSearchMode] = React.useState(false);\n  const [{ data: nope, userPrefs, setUserPrefs, appState, setAppState }] = React.useContext(DataContext);\n  const showBeta = userPrefs.showBeta;\n  const { contextActions } = appState;\n  const navigate = useNavigate();\n  const gameTypesRaw = {\n    ...get(nope, \"gameData.gameTypes\", {}),\n  };\n  const gamesUnsorted = Object.values(get(nope, `gameData.games`, {})).filter(\n    (game) => (showBeta ? true : game.version && Number(game.version) >= 1)\n  );\n  const gameTypes = [\n    ...Object.keys(gameTypesRaw).filter(\n      (gameType) =>\n        gamesUnsorted.filter((game) => game.gameType === gameType).length\n    ),\n  ];\n  const navItems = [\n    {\n      id: 'home',\n      name: 'Home',\n      icon: <Home />,\n      to: '/'\n    },\n    {\n      id: 'games',\n      name: 'Games',\n      icon: <Dice6 />,\n      to: '/games',\n      children: gameTypes.map((gameTypeKey, index) => (        {\n        id: gameTypeKey,\n        name: `${gameTypesRaw[gameTypeKey].name}`,\n        icon: <BookmarkIcon />,\n        to: `/games?tab=${index}`\n      }))\n    },\n    {\n      id: 'rules',\n      name: 'Rules',\n      icon: <MenuBookIcon />,\n      to: '/rules',\n      children: gameTypes.map((gameTypeKey, index) => (        {\n        id: gameTypeKey,\n        name: `${gameTypesRaw[gameTypeKey].name}`,\n        icon: <BookmarkIcon />,\n        to: `/rules?tab=${index}`\n      }))\n    },\n    {\n      id: 'tools',\n      name: 'Tools',\n      icon: <ConstructionIcon />,\n      children: [\n        {\n          id: 'lists',\n          name: 'Rosters',\n          icon: <FeaturedPlayListIcon />,\n          to: '/lists'\n        }\n      ]\n    },\n    {\n      id: 'divider'\n    },\n    {\n      id: 'news',\n      name: 'Updates',\n      icon: <Newspaper />,\n      to: '/updates'\n    },\n    {\n      id: 'github',\n      name: 'Github',\n      icon: <Github />,\n      toAbs: 'https://github.com/wargame-engine'\n    },\n    {\n      id: 'discord',\n      name: 'Discord',\n      icon: <Discord />,\n      toAbs: 'https://discord.com/invite/M9sets4'\n    },\n    {\n      id: 'divider'\n    },\n    {\n      id: 'settings',\n      name: 'Settings',\n      icon: <SettingsIcon />,\n      onClick: () => {\n        showUserPreferences();\n      }\n    },\n  ];\n  const [showUserPreferences, hideUserPreferences] = useModal(\n    ({ extraProps }) => (\n      <UserPreferences\n        {...props}\n        hideModal={hideUserPreferences}\n        setUserPrefs={setUserPrefs}\n        userPrefs={userPrefs}\n        {...extraProps}\n      />\n    ),\n    [userPrefs]\n  );\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const fullScreen = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const numActionsToShow = fullScreen ? contextActions?.length : (2 - (appState.enableSearch ? 1 : 0));\n  const renderMenuItem = (item, index) => {\n    if (item.id === 'divider') {\n      return <Divider key={index} />;\n    }\n    if (item.children) {\n      return (\n        <Dropdown key={index}>\n          {({ handleClose, open, handleOpen, anchorElement }) => (\n            <>\n              <ListItemButton onClick={() => open ? handleClose() : handleOpen()}>\n                <ListItemIcon>\n                  {item.icon}\n                </ListItemIcon>\n                <ListItemText primary={\n                  <Typography>\n                    {item.name}\n                  </Typography>\n                } />\n                {open ? <ExpandLess /> : <ExpandMore />}\n              </ListItemButton>\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding sx={{ pl: 2 }}>\n                  {item.children?.map(renderMenuItem)}\n                </List>\n              </Collapse>\n            </>\n          )}\n        </Dropdown>\n      );\n    }\n    return (\n      <ListItem\n        button\n        key={item.id}\n        onClick={() => {\n          if (item.toAbs) {\n            window.open(item.toAbs, \"_blank\")\n          } else if (item.to) {\n            navigate(item.to);\n          } else if (item.onClick) {\n            item.onClick();\n          }\n          setOpen(false);\n        }}>\n        <ListItemIcon>\n          {item.icon}\n        </ListItemIcon>\n        <ListItemText primary={\n          <Typography>\n            {item.name}\n          </Typography>\n        } />\n      </ListItem>\n    )\n  };\n  return (\n    <>\n      <AppBar position=\"sticky\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n        {!searchMode && <Toolbar style={{ padding: '0 15px' }}>\n          {!fullScreen && <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => open ? handleDrawerClose() : handleDrawerOpen()}\n            edge=\"start\"\n            sx={{ mr: 0 }}\n          >\n            <MenuIcon />\n          </IconButton>}\n          <Button onClick={() => navigate('/games')} sx={{ color: 'inherit' }} startIcon={<img src={IGR} alt=\"igr\" style={{ height: fullScreen ? '35px' : '30px' }} />}>\n            <Typography noWrap fontSize={fullScreen ? 20 : 18} fontWeight=\"bold\" sx={{ color: 'inherit' }} style={{ textTransform: 'none' }}>\n              Battle Forge\n            </Typography>\n          </Button>\n          <Box flex={1}></Box>\n          <>\n            {contextActions?.slice(0, numActionsToShow)?.map((action, index) => (\n              <IconButton\n                size=\"large\"\n                color=\"inherit\"\n                title={action.name}\n                onClick={() => action.onClick()}\n              >\n                {action.icon}\n              </IconButton>\n            ))}\n            {!!appState.enableSearch && <IconButton\n              size=\"large\"\n              aria-label=\"show more\"\n              color=\"inherit\"\n              onClick={() => {\n                setSearchMode(true);\n              }}\n            >\n              <SearchIcon />\n            </IconButton>}\n            {!!(contextActions?.length - numActionsToShow > 0) && <Dropdown>\n              {({ handleClose, open, handleOpen, anchorElement }) => (\n                <>\n                  <IconButton sx={{ color: 'inherit' }} style={{ paddingRight: 0 }} onClick={handleOpen}>\n                    <MoreVertIcon />\n                  </IconButton>\n                  <Menu\n                    anchorOrigin={{\n                      vertical: \"bottom\",\n                      horizontal: \"right\",\n                    }}\n                    transformOrigin={{\n                      vertical: \"top\",\n                      horizontal: \"right\",\n                    }}\n                    anchorEl={anchorElement}\n                    id=\"basic-menu\"\n                    open={open}\n                    onClose={handleClose}\n                    MenuListProps={{\n                      dense: true,\n                      onClick: handleClose,\n                      \"aria-labelledby\": \"basic-button\",\n                    }}\n                  >\n                    {contextActions?.slice(numActionsToShow)?.map((action, index) => (\n                      <MenuItem onClick={() => action.onClick()}>\n                        <ListItemIcon>\n                          {action.icon}\n                        </ListItemIcon>\n                        <ListItemText>{action.name}</ListItemText>\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                </>\n              )}\n            </Dropdown>}\n          </>\n        </Toolbar>}\n        {!!searchMode && <Toolbar style={{ padding: '0 15px' }}>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => {\n              setSearchMode(false);\n              setAppState({ ...appState, searchText: '' })\n            }}\n            edge=\"start\"\n            sx={{ mr: 2 }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Search>\n            <SearchIconWrapper>\n              <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n              autoFocus\n              placeholder=\"Search…\"\n              inputProps={{ 'aria-label': 'search' }}\n              value={appState?.searchText}\n              onChange={(event) => {\n                const value = event?.target?.value;\n                setAppState({ ...appState, searchText: value })\n              }}\n            />\n          </Search>\n        </Toolbar>}\n      </AppBar>\n      {!fullScreen &&\n        <SwipeableDrawer\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n        >\n          <Toolbar />\n          <Box\n            sx={{ width: 250 }}\n          >\n            <List>\n              {navItems.map(renderMenuItem)}\n            </List>\n          </Box>\n        </SwipeableDrawer>\n      }\n      {!!fullScreen &&\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            [`& .MuiDrawer-paper`]: { boxSizing: 'border-box' },\n          }}\n        >\n          <Toolbar />\n          <Box\n            sx={{ width: 250 }}\n          >\n            <List>\n              {navItems.map(renderMenuItem)}\n            </List>\n          </Box>\n        </Drawer>\n      }\n    </>\n  );\n};\n","import CircularProgress, {\n  circularProgressClasses,\n  CircularProgressProps,\n} from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\nexport default function CustomCircularProgress(props: CircularProgressProps) {\n  return (\n    <Box sx={{ position: 'relative' }}>\n      {/* <CircularProgress\n        variant=\"determinate\"\n        sx={{\n          color: (theme) =>\n            theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\n        }}\n        size={40}\n        thickness={4}\n        {...props}\n        value={100}\n      /> */}\n      <CircularProgress\n        variant=\"indeterminate\"\n        disableShrink\n        sx={{\n          color: (theme) => (theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8'),\n          animationDuration: '550ms',\n          left: 0,\n          [`& .${circularProgressClasses.circle}`]: {\n            strokeLinecap: 'round',\n          },\n        }}\n        size={40}\n        thickness={4}\n        {...props}\n      />\n    </Box>\n  );\n}","import { orderBy, get } from 'lodash';\n\nexport const formatModel = (model, unit, faction, data, options = {}) => {\n  const weaponOrderer = (weapon) => {\n    return get(data.getWeapon(weapon.id || weapon, faction), 'name');\n  }\n  const ruleOrderer = (rule) => {\n    return get(data.getRule(rule.id || rule, faction), 'name');\n  }\n  const { hideCount } = options;\n  const rules = [...(unit.rules || []), ...(model.rules || [])];\n  const equipString = (model.weapons && model.weapons.length) ? ` equipped with (${orderBy((model.weapons || []), weaponOrderer, ['asc']).map((weapon) => {\n    return formatWeapon(weapon, faction, data);\n  }).join(', ') || \"No Weapons\"})` : '';\n  const rulesString = (rules && rules.length) ? ` with specials (${orderBy((rules || []), ruleOrderer, ['asc']).map((rule) => {\n    return formatRule(rule, faction, data);\n  }).join(', ') || \"-\"})` : '';\n  const modelCount = hideCount ? '' : `${model.min || 1}x `;\n  return (\n    `${modelCount}${model.name} ${equipString}${rulesString}`\n  );\n}\n\nexport const formatRule = (rule, faction, data) => {\n  const ruleId = rule.id || rule;\n  const ruleData = data.getRule(ruleId, faction);\n  return (ruleData.inputs ? `${ruleData.name}(${ruleData.inputs.map((input) => rule[input]).join(', ')})` : ruleData.name);\n}\n\nexport const formatWeapon = (weapon, faction, data, options={}) => {\n  const weaponData = data.getWeapon(weapon.id || weapon, faction);\n  const weaponCount = weapon.count;\n  const weaponMount = weapon.mount;\n  const wepName = weapon.name ? ` ${weapon.name} (${weaponData.name})` : weaponData.name;\n  const wepMount = weaponMount ? ` [${weaponMount.join ? weaponMount.join(', ') : weaponMount}]` : '';\n  return `${`${wepName}${weaponCount ? `(${weaponCount})` : ''}`}${wepMount}`;\n}\n\nconst LEVEL_TO_NAME = {\n  0: '',\n  1: 'Rank I',\n  2: 'Rank II',\n  3: 'Rank III',\n  4: 'Rank IV',\n  5: 'Rank V',\n  6: 'Rank VI',\n  7: 'Rank VII',\n  8: 'Rank VIII',\n  9: 'Rank IX',\n  10: 'Rank X',\n}\n\nexport const formatLevel = (level) => {\n  return LEVEL_TO_NAME[level];\n}","export function round5(x) {\n  return (x % 5) >= 2.5 ? parseInt(x / 5) * 5 + 5 : parseInt(x / 5) * 5;\n}\n\nexport function getRandomItem(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function getRandomItems(arr, numItems) { \n  return arr.sort(() => 0.5 - Math.random()).slice(0, numItems);\n}\n\nexport function roundBias(number) {\n  return (number >= 0 || -1) * Math.round(Math.abs(number));\n}\n\nexport function romanize(num) {\n  if (isNaN(num))\n    return NaN;\n  var digits = String(+num).split(\"\"),\n    key = [\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\",\n      \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\",\n      \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"],\n    roman = \"\",\n    i = 3;\n  while (i--)\n    roman = (key[+digits.pop() + (i * 10)] || \"\") + roman;\n  return Array(+digits.join(\"\") + 1).join(\"M\") + roman;\n}","import { castArray, clamp, get, intersection, isArray, isNil, isNumber, isString, mapValues, mean, mergeWith, pickBy, sortBy, sum, toNumber, uniq } from 'lodash';\nimport { formatModel, formatWeapon } from 'utils/format';\nimport { getRandomItem, round5 } from 'utils/math';\n\nexport const DataAPI = (data, root={}) => {\n  const factionList = Object.values(data.factions || {});\n  const globalWeapons = data.weapons || {};\n  const globalUnits = data.units || {};\n  const globalRules = data.rules || {};\n  const globalPowers = data.powers || {};\n  const globalStrategies = data.strategies || {};\n  const globalPerks = data.perks || {};\n  const globalSetbacks = data.setbacks || {};\n  const globalRelics = data.relics || {};\n  const globalModels = data.models || {};\n  const globalTerrain = data.terrain || {};\n  const globalPowerCategories = data.powerCategories || {};\n  const rootWeapons = root.weapons || {};\n  const rootRules = root.rules || {};\n  const rootPhases = root.phases || {};\n  const rootStrategies = root.strategies || {};\n  const rootPerks = root.perks || {};\n  const rootSetbacks = root.setbacks || {};\n  const rootGameTypes = root.gameTypes || {};\n  const rootTerrain = root.terrain || {};\n  const rootMissions = root.missions || {};\n  const rootPowerCategories = root.powerCategories || {};\n\n  const CONSTANTS = {\n    baseStats: {\n      movement: 6,\n      shoot: 5,\n      fight: 5,\n      courage: 5,\n      reflexes: 5,\n      wounds: 1,\n      defense: 5,\n      baseCost: 5\n    },\n    woundsCost: 5,\n    courageCost: 2,\n    defenseCost: 2,\n    apCost: 1,\n    damageCost: 5,\n    movementCost: 1\n  }\n\n  const dummyTarget = {\n    name: \"Battle Brother\",\n    courage: 7,\n    shoot: 6,\n    fight: 6,\n    defense: 8,\n    movement: 5,\n    reflexes: 7,\n    agility: 6,\n    wounds: 1,\n    weapons: [{ \"id\": \"marine_rifle\" }, \"at_grenade\", \"ccw\", \"marine_pistol\"],\n    min: 4,\n    max: 9\n  };\n\n  // const dummyFaction = {\n  //   units: {}\n  // }\n\n  const getGameType = (gameType) => {\n    return rootGameTypes[gameType] || {};\n  }\n\n  const getRawCategories = () => {\n    return data.categories || {};\n  }\n\n  const getNameLists = () => {\n    const nameLists = {...get(root, 'nameLists', {})};\n    return sortBy(Object.keys(nameLists).map((key) => ({\n      id: key,\n      ...nameLists[key]\n    })), 'name');\n  }\n\n  const getNameList = (listId) => {\n    return get(root, `nameLists[${listId}]`, {});\n  }\n\n  const getRandomName = (listId) => {\n    const list = getNameList(listId);\n    const firstNames = uniq([...get(list, 'male.first', []), ...get(list, 'any.first', []), ...get(list, 'female.first', [])]);\n    const middleNames = uniq([...get(list, 'male.middle', []), ...get(list, 'any.middle', []), ...get(list, 'female.middle', [])]);\n    const lastNames = uniq([...get(list, 'male.last', []), ...get(list, 'any.last', []), ...get(list, 'female.last', [])]);\n    return `${getRandomItem(firstNames)}${middleNames.length ? ' ' + getRandomItem(middleNames) : ''}${lastNames.length ? ' ' + getRandomItem(lastNames) : ''}`;\n  }\n\n  const getRandomMaleName = (listId) => {\n    const list = getNameList(listId);\n    const firstNames = uniq([...get(list, 'male.first', []), ...get(list, 'any.first', [])]);\n    const middleNames = uniq([...get(list, 'male.middle', []), ...get(list, 'any.middle', [])]);\n    const lastNames = uniq([...get(list, 'male.last', []), ...get(list, 'any.last', [])]);\n    return `${getRandomItem(firstNames)}${middleNames.length ? ' ' + getRandomItem(middleNames) : ''}${lastNames.length ? ' ' + getRandomItem(lastNames) : ''}`;\n  }\n\n  const getRandomFemaleName = (listId) => {\n    const list = getNameList(listId);\n    const firstNames = uniq([...get(list, 'female.first', []), ...get(list, 'any.first', [])]);\n    const middleNames = uniq([...get(list, 'female.middle', []), ...get(list, 'any.middle', [])]);\n    const lastNames = uniq([...get(list, 'female.last', []), ...get(list, 'any.last', [])]);\n    return `${getRandomItem(firstNames)}${middleNames.length ? ' ' + getRandomItem(middleNames) : ''}${lastNames.length ? ' ' + getRandomItem(lastNames) : ''}`;\n  }\n\n  const getRawPhases = () => {\n    return { ...rootPhases, ...(data.phases || {}) };\n  }\n\n  const getPhase = (categoryId) => {\n    return rootPhases[categoryId] || (data.phases || {})[categoryId] || {};\n  }\n\n  const getOrganizations = () => {\n    return Object.values(data.organizations || {});\n  }\n\n  const getRawOrganizations = () => {\n    return data.organizations || {};\n  }\n\n  const getOrganizationSlotsRaw = (organization) => {\n    return Object.keys(organization.categories || {});\n  }\n\n  const getOrganizationCategory = (organization, category) => {\n    return get(organization, `categories[${category}]`, {});\n  }\n\n  const getCategories = () => {\n    return Object.values(data.categories || {});\n  }\n\n  const getRawPowerCategories = (faction) => {\n    return { ...rootPowerCategories, ...(faction.powerCategories || {}) };\n  }\n\n  const getPowerCategories = (faction) => {\n    return Object.values(faction.powerCategories || {});\n  }\n\n  const getPowerCategory = (categoryId, faction) => {\n    return (faction.powerCategories || {})[categoryId] || {};\n  }\n\n  const getTerrain = () => {\n    return Object.values({ ...rootTerrain, ...globalTerrain });\n  }\n\n  const getCategory = (categoryId) => {\n    return (data.categories || {})[categoryId] || {};\n  }\n\n  const getRule = (ruleName, faction) => {\n    const ruleId = ruleName.id || ruleName;\n    return (faction.rules || {})[ruleId] || { name: `${ruleId} not found`, id: ruleId };\n  };\n\n  const getWeapon = (weaponName, faction) => {\n    const weaponId = weaponName.id || weaponName;\n    return faction.weapons[weaponId] || { id: `${weaponId} not found`, name: `${weaponId} not found` };\n  };\n\n  const getModel = (modelName, faction) => {\n    const modelId = modelName.id || modelName;\n    return (faction.models || {})[modelId] || { id: `${modelId} not found`, name: `${modelId} not found` };\n  };\n\n  const getModelList = (modelList, faction) => {\n    const models = modelList.map((modelName) => getModel(modelName, faction)).filter(model => !!model);\n    return sortBy(models, 'name');\n  };\n\n  const getPower = (powerName, faction) => {\n    const powerId = powerName.id || powerName;\n    return faction.powers[powerId] || { name: `${powerId} not found`, description: `Could not find power ${powerId}` };\n  }\n\n  const getStrategy = (strategyName, faction) => {\n    const strategyId = strategyName.id || strategyName;\n    return faction.strategies[strategyId] || { name: `${strategyId} not found` };\n  }\n\n  const getRawAlliances = () => {\n    return data.alliances || {};\n  }\n\n  const getAlliance = (allianceName) => {\n    return get(data, `alliances[${allianceName}]`, {});\n  };\n\n  const getAlliances = () => {\n    return Object.values(data.alliances || {});\n  }\n\n  const getFactions = () => {\n    return factionList;\n  };\n\n  const getRawFaction = (factionName) => {\n    return get(data, `factions[${factionName}]`, {});\n  };\n\n  const getSubfactionNameList = (subfactionList, subfactions) => {\n    if (new Set(subfactionList).has('none')) {\n      return '';\n    }\n    const listString = subfactionList.map((subfactionKey) => subfactions[subfactionKey] || '')\n      .filter((name) => !!name)\n      .map((subfaction) => subfaction.name).join(', ');\n    return listString;\n  }\n\n  const hasSubfactions = (thing) => {\n    if (!thing.subfactions) {\n      return false;\n    }\n    if (new Set(thing.subfactions).has('none')) {\n      return false;\n    }\n    return thing.subfactions.length;\n  }\n\n  const getFaction = (factionName) => {\n    const faction = get(data, `factions[${factionName}]`, {});\n    const subfactionList = get(faction, `subfactions`, {});\n    return {\n      ...faction,\n      powerCategories: { ...rootPowerCategories, ...globalPowerCategories, ...(faction.powerCategories || {}) },\n      models: { ...globalModels, ...(faction.models || {}) },\n      powers: {\n        ...mapValues(globalPowers, (strat) => ({\n          ...strat,\n          source: `${data.name} - Core`\n        })),\n        ...mapValues((faction.powers || {}), (strat) => ({\n          ...strat,\n          source: hasSubfactions(strat) ? `${data.name} - ${faction.name} - ${getSubfactionNameList(strat.subfactions, subfactionList)}` : `${data.name} - ${faction.name}`\n        })),\n      },\n      strategies: {\n        ...mapValues(rootStrategies, (strat) => ({\n          ...strat,\n          source: `${data.name} - Core`\n        })),\n        ...mapValues(globalStrategies, (strat) => ({\n          ...strat,\n          source: `${data.name} - Core`\n        })),\n        ...mapValues((faction.strategies || {}), (strat) => ({\n          ...strat,\n          source: hasSubfactions(strat) ? `${data.name} - ${faction.name} - ${getSubfactionNameList(strat.subfactions, subfactionList)}` : `${data.name} - ${faction.name}`\n        })),\n      },\n      perks: { ...rootPerks, ...globalPerks, ...(faction.perks || {}) },\n      setbacks: { ...rootSetbacks, ...globalSetbacks, ...(faction.setbacks || {}) },\n      weapons: { ...rootWeapons, ...globalWeapons, ...(faction.weapons || {}) },\n      rules: { ...rootRules, ...globalRules, ...(faction.rules || {}) },\n      units: { ...globalUnits, ...(faction.units || {}) },\n      relics: {\n        ...mapValues(globalRelics, (strat) => ({\n          ...strat,\n          source: `${data.name} - Core`\n        })),\n        ...mapValues((faction.relics || {}), (strat) => ({\n          ...strat,\n          source: hasSubfactions(strat) ? `${data.name} - ${faction.name} - ${getSubfactionNameList(strat.subfactions, subfactionList)}` : `${data.name} - ${faction.name}`\n        })),\n      }\n    };\n  };\n\n  const getSubfaction = (factionName, subfactionName) => {\n    return get(data, `factions[${factionName}].subfactions[${subfactionName}]`, {});\n  };\n\n  const getFactionWithSubfaction = (factionName, subfaction) => {\n    const subfactionName = subfaction;\n    const faction = getFaction(factionName);\n    // const subfactionList = get(faction, `subfactions`, {});\n    const subfactionData = get(faction, `subfactions[${subfactionName}]`, {});\n    const subfactionFilter = (thing) => {\n      const subfactionset = new Set(get(thing, 'subfactions', []));\n      return subfactionset.has(subfaction) || (subfactionset.size === 0) || (subfactionset.has('none') && !subfactionData.restricted);\n    };\n    // const nonefilter = (thing) => {\n    //   const subfactionset = new Set(get(thing, 'subfactions', []));\n    //   return subfactionset.has('none') || (subfactionset.size === 0) || (subfactionset.has('none') && !subfactionData.restricted);\n    // };\n    // Filter unit options by subfaction\n    const units = mapValues(pickBy(get(faction, 'units', {}), subfactionFilter), ((unit) => {\n      return {\n        ...unit,\n        options: get(unit, 'options', []).filter(subfactionFilter),\n        models: get(unit, 'models', []).map((model) => {\n          return {\n            ...model,\n            options: get(model, 'options', []).filter(subfactionFilter)\n          }\n        })\n      }\n    }));\n    const dataWithSubfaction = {\n      ...faction,\n      color: faction.color,\n      units: units,\n      powers: mapValues(pickBy(get(faction, 'powers', {}), subfactionFilter), (strat) => ({\n        ...strat\n      })),\n      relics: mapValues(pickBy(get(faction, 'relics', {}), subfactionFilter), (strat) => ({\n        ...strat\n      })),\n      strategies: mapValues(pickBy(get(faction, 'strategies', {}), subfactionFilter), (strat) => ({\n        ...strat\n      }))\n    };\n    return dataWithSubfaction;\n  };\n\n  const getAllKeywords = (faction) => {\n    const keywords = new Set();\n    getUnits(faction).forEach((unit) => {\n      (unit.keywords || []).forEach((keyword) => {\n        if (!keywords.has(keyword)) {\n          keywords.add(keyword);\n        }\n      })\n    });\n    return Array.from(keywords);\n  }\n\n  const getPowers = (faction) => {\n    return Object.values({ ...(faction.powers || {}) });\n  }\n\n  const getStrategies = (faction) => {\n    return Object.values({ ...(faction.strategies || {})});\n  }\n\n  const getPerks = (faction) => {\n    const perks = {...get(faction, 'perks', {})};\n    return sortBy(Object.keys(perks).map((key) => ({\n      id: key,\n      ...perks[key]\n    })), 'name');\n  }\n\n  const getSetbacks = (faction) => {\n    const setbacks = {...get(faction, 'setbacks', {})};\n    return sortBy(Object.keys(setbacks).map((key) => ({\n      id: key,\n      ...setbacks[key]\n    })), 'name');\n  }\n\n  const getSetback = (faction, setbackId) => {\n    if (!faction || !setbackId) {\n      return {};\n    }\n    const setbacks = { ...get(faction, 'setbacks', {})};\n    return setbacks[setbackId];\n  }\n\n  const getPerk = (faction, perkId) => {\n    if (!faction || !perkId) {\n      return {};\n    }\n    const perks = { ...get(faction, 'perks', {})};\n    return perks[perkId];\n  }\n\n  const getRelics = (faction) => {\n    if (!faction) {\n      return [];\n    }\n    const relics = {...globalRelics, ...get(faction, 'relics', {})};\n    return sortBy(Object.keys(relics).map((key) => ({\n      id: key,\n      ...relics[key]\n    })), 'name');\n  }\n\n  const getRelic = (faction, relicId) => {\n    if (!faction || !relicId) {\n      return {};\n    }\n    const relics = { ...get(faction, 'relics', {})};\n    return relics[relicId];\n  }\n\n  const getRelicCost = (relic, faction) => {\n    if (!relic) {\n      console.log(relic, 'not found');\n      return 0;\n    }\n    return get(relic, 'points', 0);\n  }\n\n  const getUnits = (faction) => {\n    if (!faction || !faction.units) {\n      return [];\n    }\n    const units = {...faction.units};\n    return sortBy(Object.keys(units).map((key) => ({\n      id: key,\n      ...units[key]\n    })), 'name');\n  };\n\n  const getUnit = (faction, unitId) => {\n    if (!faction || !faction.units) {\n      return {};\n    }\n    const units = {...faction.units};\n    return units[unitId];\n  };\n\n  const getModels = (unit, faction) => {\n    const modelMap = [];\n    const models = (unit.models || []);\n    models.forEach((model) => {\n      modelMap.push(model);\n      (model.options || []).forEach((option) => {\n        if (option.replaceModel) {\n          const addModels = castArray(option.replaceModel);\n          addModels.forEach((addedModel) => {\n            const theModel = getModel(addedModel, faction);\n            const modelData = { id: addedModel, ...theModel };\n            modelMap.push(modelData);\n          })\n        }\n      })\n    });\n    (unit.options || []).forEach((option) => {\n      if (option.addModel) {\n        const addModels = castArray(option.addModel);\n        addModels.forEach((addedModel) => {\n          const theModel = getModel(addedModel, faction);\n          const modelData = { id: addedModel, ...theModel };\n          if (theModel) {\n            modelMap.push(modelData);\n          }\n        })\n      }\n    })\n    // models.forEach((model) => {\n    //   const optionalRules = (model.options || []).map((option) => option.addRule || option.replaceRule).reduce(concat, []).filter((rule) => !!rule);\n    //   const rules = [...(model.rules || []), ...optionalRules];\n    //   rules.forEach((rule) => {\n    //     const ruleData = getRule(rule, faction);\n    //     const ruleEffects = ruleData.effects || [];\n    //     ruleEffects.forEach((effect) => {\n    //       if (effect.type === 'spawnModel') {\n    //         const spawnedModelsList = castArray(effect.model || []);\n    //         spawnedModelsList.forEach((modelId) => {\n    //           const modelData = getModel(modelId, faction);\n    //           modelMap.push(modelData);\n    //         });\n    //       }\n    //     })\n    //   });\n    // });\n    return uniq(modelMap);\n  }\n\n  const getAllModels = (faction, options = { filter: {} }) => {\n    const { filter } = options;\n    const keywords = filter.keywords || [];\n    return getUnits(faction)\n      .filter((unit) => {\n        return (keywords.length) ? intersection(keywords, (unit.keywords || [\"Infantry\"])).length : true\n      })\n      .reduce((currModels, unit) => {\n        return currModels.concat(getModels(unit, faction).map((model) => ({ ...model, rules: [...(model.rules || []), ...(unit.rules || [])] })));\n      }, []);\n  };\n\n  const getAddTerm = (addLimit) => {\n    let addTerm = '';\n    if (addLimit && addLimit > 1) {\n      addTerm = ` up to ${addLimit}x`;\n    }\n    if (addLimit && addLimit === 1) {\n      addTerm = ' one';\n    }\n    return addTerm;\n  }\n\n  const getModelAddTerm = (modelLimit, model) => {\n    let addTerm = '';\n    const limitSplit = typeof modelLimit === \"string\" ? modelLimit.split('/') : null;\n    if (!modelLimit && model.max > 1) {\n      addTerm = ' any';\n    }\n    if (modelLimit === 'all') {\n      addTerm = 'all ';\n    }\n    if (modelLimit && modelLimit > 1) {\n      addTerm = ` up to ${modelLimit}x `;\n    }\n    if (modelLimit && modelLimit === 1 && model.max > 1) {\n      addTerm = ` ${modelLimit}x `;\n    }\n    if (limitSplit && limitSplit.length === 2) {\n      addTerm = ` ${limitSplit[0]}x for each ${limitSplit[1]}x `;\n    }\n    return addTerm;\n  }\n\n  const getAddLimitTermUnit = (addLimit) => {\n    let addTerm = ' any model';\n    const limitSplit = typeof addLimit === \"string\" ? addLimit.split('/') : null;\n    if (addLimit && addLimit > 1) {\n      addTerm = ` up to ${addLimit}x models`;\n    }\n    if (addLimit && addLimit === 1) {\n      addTerm = ' one model';\n    }\n    if (addLimit && addLimit === 'all') {\n      addTerm = ' all models';\n    }\n    if (limitSplit && limitSplit.length === 2) {\n      addTerm = ` ${limitSplit[0]}x for each ${limitSplit[1]}x models in the unit`;\n    }\n    return addTerm;\n  }\n\n  const getAddTermUnit = (addLimit) => {\n    let addTerm = '';\n    if (addLimit && addLimit > 1) {\n      addTerm = ` up to ${addLimit}x of`;\n    }\n    if (addLimit && addLimit === 1) {\n      addTerm = ' one';\n    }\n    return addTerm;\n  }\n\n  // const canSpawnModel = (rule, faction) => {\n  //   const ruleData = getRule(rule, faction);\n  //   const models = (ruleData.effects || []).map((effect) => effect.model).filter((model) => !!model);\n  //   return models.map((model) => {\n  //     const rules = model.rules || [];\n  //     // Additional Models\n  //     const modelStats = `${(model.weapons || []).map((weapon) => {\n  //       const weaponData = getWeapon(weapon.id || weapon, faction);\n  //       const weaponCount = weapon.count || 1;\n  //       return `${weaponCount > 1 ? `${weapon.count}x ` : ''}(${weaponData.name}${weapon.mount ? ` [${weapon.mount.join(', ')}]` : ''}`;\n  //     }).join(', ') || \"No Weapons\"})${rules && rules.length ? ` with specials (${(rules || []).map((rule) => {\n  //       const ruleId = rule.id || rule;\n  //       const ruleData = getRule(ruleId, faction);\n  //       return (ruleData.inputs ? `${ruleData.name}(${ruleData.inputs.map((input) => rule[input]).join(', ')})` : ruleData.name);\n  //     }).join(', ') || \"-\"})` : ''}`;\n  //     return `${model.name} equipped with ${modelStats}`;\n  //   });\n  // }\n\n  const getAdditionalModelsList = (unit, faction) => {\n    const upgrades = [];\n    (unit.models || []).forEach((model, modelIndex) => {\n      // const rules = [...(unit.rules || []), ...(model.rules || [])];\n      const min = get(model, 'min', 1);\n      const max = get(model, 'max', 1);\n      // Additional Models\n      if (min < max) {\n        const upgradeCount = max - min === 1 ? undefined : max - min;\n        const addTerm = getAddTerm(upgradeCount);\n        const modelPoints = Math.trunc(getModelTotalPoints({\n          ...model,\n          rules: [\n            ...(model.rules || []),\n            ...(unit.rules || [])\n          ]\n        }, faction));\n        const modelStats = formatModel(model, unit, faction, {getWeapon, getRule}, { hideCount: true });\n        const addList = [\n          {\n            text: `${modelStats} for ${modelPoints}pts${upgradeCount > 1 ? ` each` : ''}`,\n            points: modelPoints,\n            modelIds: [ modelIndex ],\n            limit: max - min,\n            choiceLimit: max - min,\n            models: true,\n          }\n        ]\n        upgrades.push({ option: `Add ${addTerm}`, list: sortBy(addList, 'points') })\n      }\n    });\n    return upgrades;\n  };\n\n  const getOptionsList = (unit, faction, unitData = { selectedModels: {}, selectedModelsRaw: {} }) => {\n    const { selectedModels, selectedModelsRaw } = unitData;\n    const unitTotalModels = sum(Object.values(selectedModels));\n    let upgrades = [];\n    upgrades = upgrades.concat(getAdditionalModelsList(unit, faction));\n    // Check any additional model first\n    if (unit.options) {\n      (unit.options || []).forEach((option) => {\n        if (option.addModel) {\n          const model = castArray(option.addModel || []);\n          const modelLimit = option.modelLimit;\n          const modelAddTerm = getAddTerm(modelLimit);\n          const isEach = modelLimit > 1 || typeof modelLimit === 'string' || (model.max > 1 && !modelLimit);\n          const addList = model.map((addedList) => {\n            let totalCost = 0;\n            const addedWeaponList = castArray(addedList);\n            const addedListString = addedWeaponList.map((addedMod) => {\n              const addedModel = getModel(addedMod, faction);\n              const rules = [...(unit.rules || []), ...(addedModel.rules || [])];\n              const modelPoints = Math.trunc(getModelTotalPoints({\n                ...addedModel,\n                rules\n              }, faction));\n              totalCost += modelPoints;\n              const modelStats = formatModel(addedModel, unit, faction, {getWeapon, getRule}, { hideCount: true });\n              return `${modelStats}`;\n            }).join(' and ');\n            return {\n              text: `${addedListString} for ${Math.trunc(totalCost)}pts${isEach ? ' each' : ''}`,\n              points: totalCost,\n              limit: (modelLimit || 1) * (model.max || 1),\n              choiceLimit: (modelLimit || 1) * (model.max || 1),\n              model: addedWeaponList,\n              modelIds: addedWeaponList,\n              models: true\n            };\n          });\n          upgrades.push({ option: `Add ${modelAddTerm}`, list: sortBy(addList, 'points') })\n        }\n      })\n    }\n    getModels(unit, faction).forEach((mod, modelIndex) => {\n      const modelId = mod.id || modelIndex;\n      const numThisModel = selectedModels[modelId];\n      const numThisModelRaw = selectedModelsRaw[modelId];\n      const model = {\n        ...mod,\n        rules: [\n          ...(mod.rules || []),\n          ...(unit.rules || [])\n        ]\n      };\n      if (model.options) {\n        model.options.forEach((option) => {\n          if (option.replaceModel) {\n            let totalOldCost = 0;\n            const replaceLimit = option.limit;\n            let modelReplaceLimit = option.modelLimit;\n            const replaceTerm = getAddTerm(replaceLimit, model);\n            const modelReplaceTerm = getModelAddTerm(modelReplaceLimit, model);\n            const isEach = replaceLimit > 1 || modelReplaceLimit > 1 || typeof modelReplaceLimit === 'string' || (model.max > 1 && !modelReplaceLimit);\n            // Get current model cost\n            const moddedModel = {\n              ...model,\n              rules: [\n                ...(model.rules || []),\n                ...(unit.rules || [])\n              ]\n            };\n            totalOldCost += Math.trunc(getModelTotalPoints(moddedModel, faction, false));\n            const replaceTarget = castArray(option.replaceModel || [])\n              .map((replacedWith) => {\n                let totalCost = 0;\n                const replacedWithList = castArray(replacedWith);\n                const replaceList = replacedWithList.map((addedMod) => {\n                  const addedModel = getModel(addedMod, faction);\n                  const rules = [...(unit.rules || []), ...(addedModel.rules || [])];\n                  const newModModel = {\n                    ...addedModel,\n                    rules\n                  };\n                  const modelPoints = Math.trunc(getModelTotalPoints(newModModel, faction, false));\n                  totalCost += modelPoints;\n                  const modelStats = formatModel(addedModel, unit, faction, {getWeapon, getRule}, { hideCount: true });\n                  return `${modelStats}`;\n                }).join(' and ');\n                const totalCostDiff = Math.trunc(totalCost - totalOldCost);\n                const limitSplit = typeof modelReplaceLimit === \"string\" ? modelReplaceLimit.split('/') : null;\n                if (limitSplit && limitSplit.length === 2) {\n                  modelReplaceLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * numThisModelRaw);\n                }\n                return {\n                  text: `${replaceList} for ${totalCostDiff}pts${isEach ? ' each' : ''}`,\n                  points: totalCostDiff,\n                  all: modelReplaceLimit === 'all',\n                  model: replacedWithList,\n                  replacedModel: [ modelIndex ],\n                  modelIds: replacedWithList,\n                  models: false,\n                  limit: ((modelReplaceLimit === \"all\" ? 1 : modelReplaceLimit) || numThisModelRaw) * (replaceLimit || 1),\n                  choiceLimit: ((modelReplaceLimit === \"all\" ? 1 : modelReplaceLimit) || numThisModelRaw) * (replaceLimit || 1)\n                };\n              });\n              upgrades.push({ option: `Replace ${modelReplaceTerm} ${model.name} with${replaceTerm}`, list: sortBy(replaceTarget, 'points') });\n          }\n          if (option.replaceWeapon) {\n            let totalOldCost = 0;\n            const count = option.count || 1;\n            const replaceTermCount = getAddTerm(count, model);\n            const replaceLimit = option.limit;\n            let modelReplaceLimit = option.modelLimit;\n            const replaceTerm = getAddTerm(replaceLimit, model);\n            const modelReplaceTerm = getModelAddTerm(modelReplaceLimit, model);\n            const isEach = replaceLimit > 1 || modelReplaceLimit > 1 || typeof modelReplaceLimit === 'string' || (model.max > 1 && !modelReplaceLimit);\n            const replaceWeaponList = castArray(option.replaceWeapon);\n            const replaceThingList = replaceWeaponList.map((replacedWeapon) => {\n              totalOldCost += getWeaponCostForModel(replacedWeapon, model, faction);\n              return formatWeapon(replacedWeapon, faction, { getWeapon });\n            }).join(' and ');\n            const replaceTarget = castArray(option.withWeapon || [])\n              .map((replacedWith) => {\n                let totalCost = 0;\n                const replacedWithList = castArray(replacedWith);\n                const replaceList = replacedWithList.map((replaceWith) => {\n                  totalCost += getWeaponCostForModel(replaceWith, model, faction);\n                  return formatWeapon(replaceWith, faction, { getWeapon });\n                }).join(' and ');\n                const cost = Math.trunc(totalCost - totalOldCost);\n                const limitSplit = typeof modelReplaceLimit === \"string\" ? modelReplaceLimit.split('/') : null;\n                if (limitSplit && limitSplit.length === 2) {\n                  modelReplaceLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * numThisModel);\n                }\n                return {\n                  text: `${replaceList} for ${cost}pts${isEach ? ' each' : ''}`,\n                  points: cost,\n                  all: modelReplaceLimit === 'all',\n                  weapons: replacedWithList,\n                  limit: ((modelReplaceLimit === \"all\" ? 1 : modelReplaceLimit) || numThisModel) * (replaceLimit || 1) * count,\n                  choiceLimit: ((modelReplaceLimit === \"all\" ? 1 : modelReplaceLimit) || numThisModel) * (replaceLimit || 1) * count\n                };\n              });\n              upgrades.push({ option: `Replace ${modelReplaceTerm} ${model.name} ${replaceTerm === 'all ' || replaceLimit > 1 ? `models` : `model`}${count > 1 ? ` ${replaceTermCount}` : ''} ${replaceThingList} with${replaceTerm}`, list: sortBy(replaceTarget, 'points') });\n          }\n          if (option.replaceRule) {\n            let totalOldCost = 0;\n            const count = option.count || 1;\n            const replaceTermCount = getAddTerm(count, model);\n            const replaceLimit = option.limit;\n            let modelReplaceLimit = option.modelLimit;\n            let replaceTerm = '';\n            if (replaceLimit && replaceLimit > 1) {\n              replaceTerm = `up to ${replaceLimit}x `;\n            }\n            if (!replaceLimit && model.max > 1) {\n              replaceTerm = 'any ';\n            }\n            if (!replaceLimit === 'all') {\n              replaceTerm = 'all ';\n            }\n            const isEach = replaceLimit > 1 || modelReplaceLimit > 1 || typeof modelReplaceLimit === 'string' || (model.max > 1 && !modelReplaceLimit);\n            const replaceWeaponList = castArray(option.replaceRule);\n            const replaceThingList = replaceWeaponList.map((replacedWeapon) => {\n              const replace = replacedWeapon.id || replacedWeapon;\n              const ruleData = getRule(replace, faction);\n              totalOldCost += getRuleCostForModel(replacedWeapon, model, faction);\n              return `${ruleData.inputs ? `${ruleData.name}(${ruleData.inputs.map((input) => replacedWeapon[input]).join(', ')})` : ruleData.name}`;\n            }).join(' and ');\n            const replaceTarget = castArray(option.withRule)\n              .map((replacedWith) => {\n                let totalCost = 0;\n                const replacedWithList = castArray(replacedWith);\n                const replaceList = replacedWithList.map((replaceWith) => {\n                  const replaceWithId = replaceWith.id || replaceWith;\n                  let ruleData = getRule(replaceWithId, faction);\n                  const shortDescription = ruleData.description_short ? ` (${ruleData.description_short})` : '';\n                  const ruleInputs = ruleData.inputs ? `(${(ruleData.inputs || []).map((input) => replaceWith[input]).join(', ')})` : '';\n                  const ruleDescription = shortDescription || ruleInputs || '';\n                  totalCost += getRuleCostForModel(replacedWith, model, faction);\n                  return `${ruleData.name}${ruleDescription}`;\n                }).join(' and ');\n                const totalCostDiff = Math.trunc(totalCost - totalOldCost);\n                const limitSplit = typeof modelReplaceLimit === \"string\" ? modelReplaceLimit.split('/') : null;\n                if (limitSplit && limitSplit.length === 2) {\n                  modelReplaceLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * numThisModel);\n                }\n                return {\n                  text: `${replaceList} for ${totalCostDiff}pts${isEach ? ' each' : ''}`,\n                  points: totalCostDiff,\n                  rules: replacedWithList,\n                  all: modelReplaceLimit === 'all',\n                  limit: ((modelReplaceLimit === \"all\" ? 1 : modelReplaceLimit) || numThisModel) * (replaceLimit || 1) * count,\n                  choiceLimit: ((modelReplaceLimit === \"all\" ? 1 : modelReplaceLimit) || numThisModel) * (replaceLimit || 1) * count\n                };\n              });\n              upgrades.push({ option: `Replace ${replaceTerm}${model.name} ${replaceTerm === 'all ' || replaceTerm === 'any ' ? 'models' : 'model'}${count > 1 ? ` ${replaceTermCount}` : ''} ${replaceThingList} with`, list: sortBy(replaceTarget, 'points') });\n          }\n          if (option.addWeapon) {\n            const count = option.count || 1;\n            const replaceTermCount = getAddTerm(count, model);\n            const addLimit = option.limit;\n            let modelLimit = option.modelLimit;\n            const addTerm = getAddTerm(addLimit);\n            let modelAddTerm = getModelAddTerm(modelLimit, model);\n            const isEach = addLimit > 1 || modelLimit > 1 || typeof modelLimit === 'string' || (model.max > 1 && !modelLimit);\n            const weapon = castArray(option.addWeapon);\n            const addList = weapon.map((addedList) => {\n              let totalCost = 0;\n              const addedWeaponList = castArray(addedList);\n              const addedListString = addedWeaponList.map((added) => {\n                const newCost = getWeaponCostForModel(added, model, faction);\n                totalCost += newCost;\n                return formatWeapon(added, faction, { getWeapon });\n              }).join(' and ');\n              const cost = Math.trunc(totalCost);\n              const limitSplit = typeof modelLimit === \"string\" ? modelLimit.split('/') : null;\n              if (limitSplit && limitSplit.length === 2) {\n                modelLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * numThisModel);\n              }\n              return {\n                text: `${addedListString} for ${cost}pts${isEach ? ' each' : ''}`,\n                points: cost,\n                all: modelLimit === 'all',\n                weapons: addedWeaponList,\n                limit: ((modelLimit === \"all\" ? 1 : modelLimit) || numThisModel) * (addLimit || 1) * count,\n                choiceLimit: ((modelLimit === \"all\" ? 1 : modelLimit) || numThisModel) * (addLimit || weapon.length) * count\n              };\n            });\n            upgrades.push({ option: `Upgrade ${modelAddTerm} ${model.name}${count > 1 ? ` ${replaceTermCount}` : ''} with${addTerm}`, list: sortBy(addList, 'points') });\n          }\n          if (option.addRule) {\n            const weapon = castArray(option.addRule || []);\n            const count = option.count || 1;\n            const replaceTermCount = getAddTerm(count, model);\n            const addLimit = option.limit;\n            let modelLimit = option.modelLimit;\n            const addTerm = getAddTerm(addLimit, model);\n            let modelAddTerm = getModelAddTerm(modelLimit, model);\n            const isEach = addLimit > 1 || modelLimit > 1 || typeof modelLimit === 'string' || (model.max > 1 && !modelLimit);\n            const addList = weapon.map((addedList) => {\n              let totalCost = 0;\n              const addedWeaponList = castArray(addedList);\n              const addedListString = addedWeaponList.map((added) => {\n                const addedThing = added.id || added;\n                let thing = getRule(addedThing, faction);\n                const newCost = getRuleCostForModel(added, model, faction);\n                totalCost += newCost;\n                const shortDescription = thing.description_short ? ` (${thing.description_short})` : '';\n                const ruleInputs = thing.inputs ? `(${(thing.inputs || []).map((input) => added[input]).join(', ')})` : '';\n                const ruleDescription = shortDescription || ruleInputs || '';\n                const ruleName = `${thing.name}${ruleDescription}`;\n                return `${ruleName}`;\n              }).join(' and ');\n              const name = addedList.name ? `${addedList.name} (${addedListString})` : `${addedListString}`;\n              const cost = Math.trunc(totalCost);\n              const limitSplit = typeof modelLimit === \"string\" ? modelLimit.split('/') : null;\n              if (limitSplit && limitSplit.length === 2) {\n                modelLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * numThisModel);\n              }\n              return {\n                text: `${name} for ${cost}pts${isEach ? ' each' : ''}`,\n                points: cost,\n                all: modelLimit === 'all',\n                rules: addedWeaponList,\n                limit: ((modelLimit === \"all\" ? 1 : modelLimit) || numThisModel) * (addLimit || 1) * count,\n                choiceLimit: ((modelLimit === \"all\" ? 1 : modelLimit) || numThisModel) * (addLimit || weapon.length) * count\n              };\n            });\n            upgrades.push({ option: `Upgrade ${modelAddTerm} ${model.name} ${modelAddTerm === 'all ' || modelAddTerm === 'any ' ? 'models' : 'model'}${count > 1 ? ` ${replaceTermCount}` : ''} with${addTerm}`, list: sortBy(addList, 'points') })\n          }\n          if (option.removeRule) {\n            const weapon = castArray(option.removeRule || []);\n            const count = option.count || 1;\n            const replaceTermCount = getAddTerm(count, model);\n            const addLimit = option.limit;\n            let modelLimit = option.modelLimit;\n            const addTerm = getAddTerm(addLimit, model);\n            let modelAddTerm = getModelAddTerm(modelLimit, model);\n            const isEach = addLimit > 1 || modelLimit > 1 || typeof modelLimit === 'string' || (model.max > 1 && !modelLimit);\n            const addList = weapon.map((addedList) => {\n              let totalCost = 0;\n              const addedWeaponList = castArray(addedList);\n              const addedListString = addedWeaponList.map((added) => {\n                const addedThing = added.id || added;\n                let thing = getRule(addedThing, faction);\n                const newCost = getRuleCostForModel(added, model, faction);\n                totalCost += newCost;\n                const shortDescription = thing.description_short ? ` (${thing.description_short})` : '';\n                const ruleInputs = thing.inputs ? `(${(thing.inputs || []).map((input) => added[input]).join(', ')})` : '';\n                const ruleDescription = shortDescription || ruleInputs || '';\n                const ruleName = `${thing.name}${ruleDescription}`;\n                return `${ruleName}`;\n              }).join(' and ');\n              const name = addedList.name ? `${addedList.name} (${addedListString})` : `${addedListString}`;\n              const cost = Math.trunc(totalCost) * -1;\n              const limitSplit = typeof modelLimit === \"string\" ? modelLimit.split('/') : null;\n              if (limitSplit && limitSplit.length === 2) {\n                modelLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * numThisModel);\n              }\n              return {\n                text: `${name} for ${cost}pts${isEach ? ' each' : ''}`,\n                points: cost,\n                all: modelLimit === 'all',\n                rules: addedWeaponList,\n                limit: ((modelLimit === \"all\" ? 1 : modelLimit) || numThisModel) * (addLimit || 1) * count,\n                choiceLimit: ((modelLimit === \"all\" ? 1 : modelLimit) || numThisModel) * (addLimit || weapon.length) * count\n              };\n            });\n            upgrades.push({ option: `Remove ${modelAddTerm} ${model.name} ${modelAddTerm === 'all ' || modelAddTerm === 'any ' ? 'models' : 'model'}${count > 1 ? ` ${replaceTermCount}` : ''} ${addTerm}`, list: sortBy(addList, 'points') })\n          }\n        });\n      }\n    });\n    // Handle unit options here with average costs\n    if (unit.options) {\n      (unit.options || []).forEach((option) => {\n        if (option.replaceWeapon) {\n          let totalOldCost = 0;\n          const count = option.count || 1;\n          const replaceTermCount = getAddTerm(count);\n          const replaceLimit = option.limit;\n          const replaceTerm = getAddTermUnit(replaceLimit);\n          let modelReplaceLimit = option.modelLimit;\n          const modelReplaceTerm = getAddLimitTermUnit(modelReplaceLimit);\n          const replaceWeaponList = castArray(option.replaceWeapon);\n          const isEach = replaceLimit > 1 || modelReplaceLimit > 1 || typeof modelReplaceLimit === 'string' || (sum(unit.models.map((model) => model.max)) > 1 && !modelReplaceLimit);\n          const replaceThingList = replaceWeaponList.map((replacedWeapon) => {\n            const avgCost = mean(getModels(unit, faction).filter((model) => model.shoot !== '-' && model.fight !== '-').map((model) => {\n              return getWeaponCostForModel(replacedWeapon, {\n                ...model,\n                rules: [...(unit.rules || []), ...(model.rules || [])]\n              }, faction);\n            }));\n            totalOldCost += avgCost;\n            return formatWeapon(replacedWeapon, faction, { getWeapon });\n          }).join(' and ');\n          const replaceTarget = castArray(option.withWeapon || [])\n            .map((replacedWith) => {\n              let totalCost = 0;\n              const replacedWithList = castArray(replacedWith);\n              const replaceList = replacedWithList.map((replaceWith) => {\n                const avgCost = mean(getModels(unit, faction).filter((model) => model.shoot !== '-' && model.fight !== '-').map((model) => {\n                  return getWeaponCostForModel(replaceWith, {\n                    ...model,\n                    rules: [...(unit.rules || []), ...(model.rules || [])]\n                  }, faction);\n                }));\n                totalCost += avgCost;\n                return formatWeapon(replaceWith, faction, { getWeapon });\n              }).join(' and ');\n              const totalCostDiff = Math.trunc(totalCost - totalOldCost);\n              const limitSplit = typeof modelReplaceLimit === \"string\" ? modelReplaceLimit.split('/') : null;\n              if (limitSplit && limitSplit.length === 2) {\n                modelReplaceLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * unitTotalModels);\n              }\n              return {\n                text: `${replaceList} for ${totalCostDiff}pts${isEach ? ' each' : ''}`,\n                points: totalCostDiff,\n                weapons: replacedWithList,\n                all: modelReplaceLimit === 'all',\n                limit: (modelReplaceLimit === \"all\" ? 1 : modelReplaceLimit) || unitTotalModels * (replaceLimit || 1) * count,\n                choiceLimit: (modelReplaceLimit === \"all\" ? 1 : modelReplaceLimit) || unitTotalModels * (replaceLimit || 1) * count\n              };\n            });\n            upgrades.push({ option: `Replace ${modelReplaceTerm}${count > 1 ? ` ${replaceTermCount}` : ''} ${replaceThingList} with${replaceTerm}`, list: sortBy(replaceTarget, 'points') });\n        }\n        if (option.replaceRule) {\n          let totalOldCost = 0;\n          const count = option.count || 1;\n          const replaceTermCount = getAddTerm(count);\n          const replaceLimit = option.limit;\n          const replaceTerm = getAddTermUnit(replaceLimit);\n          let modelReplaceLimit = option.modelLimit;\n          // const modelReplaceTerm = getAddLimitTermUnit(modelReplaceLimit);\n          const isEach = replaceLimit > 1 || modelReplaceLimit > 1 || typeof modelReplaceLimit === 'string' || (sum(unit.models.map((model) => model.max)) > 1 && !modelReplaceLimit);\n          const replaceWeaponList = castArray(option.replaceRule);\n          const replaceThingList = replaceWeaponList.map((replacedWeapon) => {\n            const replace = replacedWeapon.id || replacedWeapon;\n            const ruleData = getRule(replace, faction);\n            const avgCost = Math.trunc(mean(getModels(unit, faction).map((model) => {\n              return getRuleCostForModel(replacedWeapon, {\n                ...model,\n                rules: [...(unit.rules || []), ...(model.rules || [])]\n              }, faction);\n            })));\n            totalOldCost += avgCost;\n            return `${ruleData.inputs ? `${ruleData.name}(${ruleData.inputs.map((input) => replacedWeapon[input]).join(', ')})` : ruleData.name}`;\n          }).join(' and ');\n          const replaceTarget = castArray(option.withRule)\n            .map((replacedWith) => {\n              let totalCost = 0;\n              const replacedWithList = castArray(replacedWith);\n              const replaceList = replacedWithList.map((replaceWith) => {\n                const replaceWithId = replaceWith.id || replaceWith;\n                let ruleData = getRule(replaceWithId, faction);\n                const shortDescription = ruleData.description_short ? ` (${ruleData.description_short})` : '';\n                const ruleInputs = ruleData.inputs ? `(${(ruleData.inputs || []).map((input) => replaceWith[input]).join(', ')})` : '';\n                const ruleDescription = shortDescription || ruleInputs || '';\n                const avgCost = Math.trunc(mean(getModels(unit, faction).map((model) => {\n                  return getRuleCostForModel(replacedWith, {\n                    ...model,\n                    rules: [...(unit.rules || []), ...(model.rules || [])]\n                  }, faction);\n                })));\n                totalCost += avgCost;\n                return `${ruleData.name}${ruleDescription}`;\n              }).join(' and ');\n              const totalCostDiff = Math.trunc(totalCost - totalOldCost);\n              const limitSplit = typeof modelReplaceLimit === \"string\" ? modelReplaceLimit.split('/') : null;\n              if (limitSplit && limitSplit.length === 2) {\n                modelReplaceLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * unitTotalModels);\n              }\n              return {\n                text: `${replaceList} for ${totalCostDiff}pts${isEach ? ' each' : ''}`,\n                points: totalCostDiff,\n                rules: replacedWithList,\n                all: modelReplaceLimit === 'all',\n                limit: (modelReplaceLimit === \"all\" ? 1 : modelReplaceLimit) || unitTotalModels * (replaceLimit || 1) * count,\n                choiceLimit: (modelReplaceLimit === \"all\" ? 1 : modelReplaceLimit) || unitTotalModels * (replaceLimit || 1) * count\n              };\n            });\n            upgrades.push({ option: `Replace ${replaceTerm}${count > 1 ? ` ${replaceTermCount}` : ''} ${replaceThingList} with`, list: sortBy(replaceTarget, 'points') });\n        }\n        if (option.addWeapon) {\n          const count = option.count || 1;\n          const replaceTermCount = getAddTerm(count);\n          const addLimit = option.limit;\n          let modelLimit = option.modelLimit;\n          const addTerm = getAddTermUnit(addLimit);\n          const modelAddTerm = getAddLimitTermUnit(modelLimit);\n          const isEach = addLimit > 1 || modelLimit > 1 || typeof modelLimit === 'string' || (sum(unit.models.map((model) => model.max)) > 1 && !modelLimit);\n          const weapon = castArray(option.addWeapon);\n          const addList = weapon.map((addedList) => {\n            let totalCost = 0;\n            const addedWeaponList = castArray(addedList);\n            const addedListString = addedWeaponList.map((added) => {\n              const avgCost = Math.trunc(mean(getModels(unit, faction).filter((model) => model.shoot !== '-' && model.fight !== '-').map((model) => {\n                return getWeaponCostForModel(added, {\n                  ...model,\n                  rules: [...(unit.rules || []), ...(model.rules || [])]\n                }, faction);\n              })));\n              const newCost = avgCost;\n              totalCost += newCost;\n              return formatWeapon(added, faction, { getWeapon });\n            }).join(' and ');\n            const limitSplit = typeof modelLimit === \"string\" ? modelLimit.split('/') : null;\n            if (limitSplit && limitSplit.length === 2) {\n              modelLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * unitTotalModels);\n            }\n            return {\n              text: `${addedListString} for ${totalCost}pts${isEach ? ' each' : ''}`,\n              points: totalCost,\n              weapons: addedWeaponList,\n              all: modelLimit === 'all',\n              limit: (modelLimit === \"all\" ? 1 : modelLimit) || unitTotalModels * (addLimit || 1) * count,\n              choiceLimit: (modelLimit === \"all\" ? 1 : modelLimit) || unitTotalModels * (addLimit || 1) * count\n            };\n          });\n          upgrades.push({ option: `Upgrade ${modelAddTerm}${count > 1 ? ` ${replaceTermCount}` : ''} with${addTerm}`, list: sortBy(addList, 'points') });\n        }\n        if (option.addRule) {\n          const weapon = castArray(option.addRule || []);\n          const count = option.count || 1;\n          const replaceTermCount = getAddTerm(count);\n          const addLimit = option.limit;\n          let modelLimit = option.modelLimit;\n          const addTerm = getAddTermUnit(addLimit);\n          const modelAddTerm = getAddLimitTermUnit(modelLimit);\n          const isEach = addLimit > 1 || modelLimit > 1 || typeof modelLimit === 'string' || (sum(unit.models.map((model) => model.max)) > 1 && !modelLimit);\n          const addList = weapon.map((addedList) => {\n            let totalCost = 0;\n            const addedWeaponList = castArray(addedList);\n            const addedListString = addedWeaponList.map((added) => {\n              const addedThing = added.id || added;\n              let thing = getRule(addedThing, faction);\n              const avgCost = Math.trunc(mean(getModels(unit, faction).map((model) => {\n                return getRuleCostForModel(added, {\n                  ...model,\n                  rules: [...(unit.rules || []), ...(model.rules || [])]\n                }, faction);\n              })));\n              totalCost += avgCost;\n              const shortDescription = thing.description_short ? ` (${thing.description_short})` : '';\n              const ruleInputs = thing.inputs ? `(${(thing.inputs || []).map((input) => added[input]).join(', ')})` : '';\n              const ruleDescription = shortDescription || ruleInputs || '';\n              const ruleName = `${thing.name}${ruleDescription}`;\n              return `${ruleName}`;\n            }).join(' and ');\n            const name = addedList.name ? `${addedList.name} (${addedListString})` : `${addedListString}`;\n            const limitSplit = typeof modelLimit === \"string\" ? modelLimit.split('/') : null;\n            if (limitSplit && limitSplit.length === 2) {\n              modelLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * unitTotalModels);\n            }\n            return {\n              text: `${name} for ${Math.trunc(totalCost)}pts${isEach ? ' each' : ''}`,\n              points: Math.trunc(totalCost),\n              rules: addedWeaponList,\n              all: modelLimit === 'all',\n              limit: (modelLimit === \"all\" ? 1 : modelLimit) || unitTotalModels * (addLimit || 1) * count,\n              choiceLimit: (modelLimit === \"all\" ? 1 : modelLimit) || unitTotalModels * (addLimit || 1) * count\n            };\n          });\n          upgrades.push({ option: `Upgrade ${modelAddTerm}${count > 1 ? ` ${replaceTermCount}` : ''} with${addTerm}`, list: sortBy(addList, 'points') })\n        }\n        if (option.removeRule) {\n          const weapon = castArray(option.removeRule || []);\n          const count = option.count || 1;\n          const replaceTermCount = getAddTerm(count);\n          const addLimit = option.limit;\n          let modelLimit = option.modelLimit;\n          const addTerm = getAddTermUnit(addLimit);\n          const modelAddTerm = getAddLimitTermUnit(modelLimit);\n          const isEach = addLimit > 1 || modelLimit > 1 || typeof modelLimit === 'string' || (sum(unit.models.map((model) => model.max)) > 1 && !modelLimit);\n          const addList = weapon.map((addedList) => {\n            let totalCost = 0;\n            const addedWeaponList = castArray(addedList);\n            const addedListString = addedWeaponList.map((added) => {\n              const addedThing = added.id || added;\n              let thing = getRule(addedThing, faction);\n              const avgCost = Math.trunc(mean(getModels(unit, faction).map((model) => {\n                return getRuleCostForModel(added, {\n                  ...model,\n                  rules: [...(unit.rules || []), ...(model.rules || [])]\n                }, faction);\n              })));\n              totalCost += avgCost;\n              const shortDescription = thing.description_short ? ` (${thing.description_short})` : '';\n              const ruleInputs = thing.inputs ? `(${(thing.inputs || []).map((input) => added[input]).join(', ')})` : '';\n              const ruleDescription = shortDescription || ruleInputs || '';\n              const ruleName = `${thing.name}${ruleDescription}`;\n              return `${ruleName}`;\n            }).join(' and ');\n            const name = addedList.name ? `${addedList.name} (${addedListString})` : `${addedListString}`;\n            const limitSplit = typeof modelLimit === \"string\" ? modelLimit.split('/') : null;\n            if (limitSplit && limitSplit.length === 2) {\n              modelLimit = Math.floor((toNumber(limitSplit[0]) / toNumber(limitSplit[1])) * unitTotalModels);\n            }\n            const cost = Math.trunc(totalCost) * -1;\n            return {\n              text: `${name} for ${cost}pts${isEach ? ' each' : ''}`,\n              points: cost,\n              rules: addedWeaponList,\n              all: modelLimit === 'all',\n              limit: (modelLimit === \"all\" ? 1 : modelLimit) || unitTotalModels * (addLimit || 1) * count,\n              choiceLimit: (modelLimit === \"all\" ? 1 : modelLimit) || unitTotalModels * (addLimit || 1) * count\n            };\n          });\n          upgrades.push({ option: `Remove ${modelAddTerm}${count > 1 ? ` ${replaceTermCount}` : ''} ${addTerm}`, list: sortBy(addList, 'points') })\n        }\n      });\n    }\n    return upgrades;\n  }\n\n  const getPowerCharge = (power, faction) => {\n    let points = 0;\n    const dummyShooter = {\n      shoot: 10\n    }\n    const psychicCost = getRuleCostForModel({ \"id\": \"psychic\" }, dummyTarget, faction);\n    (power.effects || []).forEach((effect) => {\n      if (effect.weapon) {\n        const weapon = effect.weapon.id || effect.weapon;\n        const pts = getWeaponCostForModel(weapon, dummyShooter, faction);\n        points += pts;\n      }\n      if (effect.rule) {\n        const rule = effect.rule.id || effect.rule;\n        const pts = getRuleCostForModel(rule, dummyShooter, faction);\n        points += pts;\n      }\n    });\n    const charge = psychicCost / points * 10;\n    const finalCharge = clamp(Math.trunc(charge), 1, 9);\n    return finalCharge;\n  }\n\n  const getUnitPoints = (unit, faction) => {\n    let points = 0;\n    (unit.models || []).forEach((model) => {\n      const min = get(model, 'min', 1);\n      const modelWithUnitRules = {\n        ...model,\n        rules: [...(model.rules || []), ...(unit.rules || [])]\n      };\n      const modelPts = getModelTotalPoints(modelWithUnitRules, faction) * min;\n      points += Math.trunc(modelPts);\n    });\n    // const allModelsMaxed = every(unit.models, (model) => {\n    //  return model.min === model.max;\n    // });\n    const gameType = get(data, 'gameType', 'battle');\n    const isSkirmish = gameType === 'skirmish';\n    if (!isSkirmish) {\n      points = round5(points);\n    }\n    return points;\n  }\n\n  const resolveVariable = (variableName, variables) => {\n    const combinedVars = {...variables, constants: CONSTANTS};\n    const val = typeof variableName === 'string' ? get(combinedVars, variableName) : variableName;\n    if (isNil(val) || !isNumber(val)) {\n      // console.log(`Couldn't resolve ${variableName}`);\n      return 0;\n    }\n    return val;\n  }\n\n  const resolvePointsRecurse = (pointsArray, variables) => {\n    if (isArray(pointsArray)) {\n      let total = 0;\n      pointsArray.forEach((arrItem) => {\n        if (!isNil(arrItem.add)) {\n          total += resolvePointsRecurse(arrItem.add, variables);\n        } else if (!isNil(arrItem.multiply)) {\n          total *= resolvePointsRecurse(arrItem.multiply, variables);\n        } else if (!isNil(arrItem.subtract)) {\n          total -= resolvePointsRecurse(arrItem.subtract, variables);\n        } else if (!isNil(arrItem.divide)) {\n          total /= resolvePointsRecurse(arrItem.divide, variables);\n        } else if (!isNil(arrItem.max)) {\n          total = Math.max(total, resolvePointsRecurse(arrItem.max, variables));\n        } else if (!isNil(arrItem.min)) {\n          total = Math.min(total, resolvePointsRecurse(arrItem.min, variables));\n        } else {\n          total += resolvePointsRecurse(arrItem, variables);\n        }\n      });\n      return total;\n    } else {\n      return resolveVariable(pointsArray, variables);\n    }\n  }\n\n  const resolvePoints = (pointsArray, variables) => {\n    return resolvePointsRecurse(castArray(pointsArray), variables);\n  }\n\n  const getModelTotalPoints = (model, faction, doRound=true) => {\n    let points = 0;\n    const modelPoints = getModelPoints(model, faction);\n    const weaponPoints = getModelWeaponPoints(model, faction);\n    const rulePoints = getModelRulePoints(model, faction);\n    const ptsTotal = modelPoints + weaponPoints + rulePoints;\n    points += Math.trunc(ptsTotal);\n    //console.log(model.name, 'model', modelPoints, 'weps', weaponPoints, 'rules', rulePoints, 'total', points);\n    return points;\n  }\n\n  const getModelPoints = (model, faction) => {\n    if (model.shoot === \"-\" && model.fight === \"-\" && model.courage === \"-\" && model.defense !== \"-\") {\n      const defense = model.defense || CONSTANTS.baseStats.defense;\n      const defenseIncrease = (defense - 5);\n      const defenseCost = model.defense === '-' ? 0 : (defenseIncrease * 2);\n      return defenseCost;\n    }\n    if (model.shoot === \"-\" && model.fight === \"-\" && model.courage === \"-\") {\n      return 0;\n    }\n    if (model.defense === \"-\" && model.courage === \"-\" && model.reflexes === \"-\") {\n      return 0;\n    }\n    let points = 0;\n    // const wounds = model.wounds || CONSTANTS.baseStats.wounds;\n    const defense = model.defense || CONSTANTS.baseStats.defense;\n    const courage = model.courage || CONSTANTS.baseStats.courage;\n    const movement = isNil(model.movement) ? CONSTANTS.baseStats.movement : model.movement;\n    const reflexes = model.reflexes || CONSTANTS.baseStats.reflexes;\n    // const shoot = model.shoot || CONSTANTS.baseStats.shoot;\n    // const fight = model.fight || CONSTANTS.baseStats.fight;\n    // const shootCost = (shoot - 5);\n    // const fightCost = (fight - 5);\n    //const woundsCost = (wounds > 1) ? ((wounds - 1) * 2 * (defenseIncrease || 1)) : 0;\n    const defenseIncrease = (defense - 5);\n    // const woundsCost = (wounds > 1) ? ((wounds - 1) * CONSTANTS.woundsCost * (defenseIncrease || 1)) : 0;\n    const defenseCost = model.defense === '-' ? 0 : (defenseIncrease * 2);\n    const courageCost = model.courage === '-' ? 0 : (courage - 5) * 2;\n    const movementCost = (movement - 6);\n    const reflexCost = model.reflexes === '-' ? 0 : (reflexes - 5);\n    // console.log(model.name, 'w', woundsCost, 'r',defenseCost, 'co',courageCost, 'm',movementCost, 'ref',reflexCost);\n    points += (defenseCost + courageCost + reflexCost + movementCost + CONSTANTS.baseStats.baseCost);\n    return points;\n  }\n\n  const getModelWeaponPoints = (model, faction) => {\n    let points = 0;\n    (model.weapons || []).forEach((weapon) => {\n      points += getWeaponCostForModel(weapon, model, faction);\n    });\n    return points;\n  }\n\n  const getWeaponCostAverage = (weapon, models, faction) => {\n    const cost = mean((models).map((model) => {\n      return getWeaponCostForModel(weapon, model, faction);\n    }));\n    return cost;\n  }\n\n  const getRuleCostAverage = (rule, models, faction) => {\n    const cost = mean((models).map((model) => {\n      return getRuleCostForModel(rule, model, faction);\n    }));\n    return cost;\n  }\n\n  const getWeaponCostForModel = (weapon, model, faction, modifiedWeapon) => {\n    let points = 0;\n    const weaponData = modifiedWeapon || getWeapon(weapon, faction);\n    const weaponCount = weapon.count || 1;\n    let weaponMountMult = 1;\n    if ((weapon.mount && weapon?.mount?.length === 1) || isString(weapon?.mount)) {\n      weaponMountMult = 0.8;\n    }\n    if (weapon.mount && weapon.mount.length === 2) {\n      weaponMountMult = 0.9;\n    }\n    //const weaponModelMult = (weaponData.short === \"Melee\" ? (model.fight - CONSTANTS.baseStats.fight) : (model.shoot * CONSTANTS.baseStats.shoot));\n    const weaponBase = getWeaponPoints(weaponData, model, faction);\n    const weaponPoints = weaponBase * weaponCount * weaponMountMult;\n    points += weaponPoints;\n    // if (points > 0) {\n    //   // Cost weapon rules that do not scale with weapon\n    //   const weaponRules = weaponData.rules || [];\n    //   weaponRules.forEach((rule) => {\n    //     const weaponsWithoutCurr = (model.weapons || []).filter((wep) => (wep.id || wep) !== (weapon.id || weapon));\n    //     const ruleCost = getRuleCostForModel(rule, {\n    //       ...model,\n    //       weapons: weaponsWithoutCurr\n    //     }, faction);\n\n    //     points += ruleCost;\n    //   });\n    // }\n    //console.log(model.name, weaponData.name, points);\n    return points;\n  }\n\n  /*\n * Find cost of a single weapon\n */\n  const getWeaponPoints = (wep, model, faction) => {\n    // Merge weapon profiles into one master list\n    const weps = [wep, ...get(wep, 'profiles', [])];\n    // Keep track of most expensive profile\n    const weaponPoints = sortBy(weps.map((weapon) => {\n      let points = 0;\n      const weaponModelMult = (weapon.short === \"Melee\" ? (model.fight - CONSTANTS.baseStats.fight) : (model.shoot - CONSTANTS.baseStats.shoot));\n      const weaponAP = weapon.ap || 0;\n      const weaponRules = weapon.rules || [];\n      const range = weapon.short;\n      const rangeCost = ((range === \"Melee\") ? (model.movement || 6) / 6 : range / 6);\n      // const weaponDamage = weapon.damage || 1;\n      points += weaponModelMult;\n      // points += (weaponDamage - 1) * CONSTANTS.damageCost;\n      const rangePoints = (weapon.medium || (range === \"Melee\")) ? rangeCost : rangeCost / 2;\n      points += rangePoints;\n      points += weaponAP * CONSTANTS.apCost;\n      let isPistol = false;\n      let isGrenade = false;\n      //Multiply weapon cost by number of attacks\n      const attacks = isNil(weapon.attacks) ? 1 : weapon.attacks;\n      points *= attacks;\n      // Calculate weapon rules that don't scale with damage or attacks\n      weaponRules.forEach((rule) => {\n        const ruleId = rule.id || rule;\n        const ruleData = getRule(ruleId, faction);\n        const resolvedPoints = resolvePoints(ruleData.points || 0, {\n          weapon: {\n            ...weapon,\n            ap: weapon.ap || 0,\n            damage: weapon.damage || 1,\n            range,\n            rangeCost,\n            points\n          },\n          rule,\n          model,\n          faction\n        });\n        if (resolvedPoints) {\n          points += resolvedPoints;\n        }\n        // if (ruleId === 'pistol') {\n        //   isPistol = true;\n        // }\n        if (ruleId === 'grenade') {\n          isGrenade = true;\n        }\n      });\n      // If it's a pistol or grenade and not the cheapest weapon, zero out the cost\n      // Ignore for now. Too many problems.\n      // Logic is expensive. Yikes.\n      if (isPistol) {\n        points *= 0.5;\n      }\n      if (isGrenade) {\n        points *= 0;\n      }\n      return points;\n    }).filter((number) => isFinite(number))).reverse();\n    const mostExpensiveWeapon = weaponPoints[0] || 0;\n    const otherPoints = sum(weaponPoints.slice(1).map((pts) => pts * 0.5));\n    const totalPts = mostExpensiveWeapon + otherPoints;\n    // console.log(model.name, wep.name, 'pts', mostExpensiveWeapon, totalPts);\n    return totalPts;\n  }\n\n  const getModelRulePoints = (model, faction) => {\n    let points = 0;\n    (model.rules || []).forEach((rule) => {\n      points += getRuleCostForModel(rule, model, faction);\n    })\n    return points;\n  }\n\n  const getRuleCostForModel = (rule, model, faction) => {\n    let points = 0;\n    const ruleId = rule.id || rule;\n    const ruleData = getRule(ruleId, faction);\n    const resolvedPoints = resolvePoints(ruleData.points || 0, {\n      rule,\n      model,\n      faction\n    });\n    if (resolvedPoints) {\n      points += resolvedPoints;\n    }\n    // (ruleData.effects || []).forEach((effect) => {\n    //   // How often the ability will trigger (frequency / 10 is the percentage time it's active)\n    //   let frequency = (typeof effect.frequency === 'string' ? rule[effect.frequency] : effect.frequency) || 10;\n    //   const value = (typeof effect.value === 'string' ? rule[effect.value] : effect.value) || 1;\n    //   // Ignore terrain penalties\n    //   if (effect.type === \"ignoreTerrain\") {\n    //     const modelWounds = model.wounds || 1;\n    //     points += modelWounds * 2 * (frequency / 10);\n    //   }\n    //   // Ignore terrain penalties\n    //   if (effect.type === \"ambush\") {\n    //     const modelWounds = model.wounds || 1;\n    //     points += modelWounds * 2 * (frequency / 10);\n    //   }\n    //   // Ignore terrain penalties\n    //   if (effect.type === \"stealth\") {\n    //     const modelWounds = model.wounds || 1;\n    //     points += modelWounds * 3 * value * (frequency / 10);\n    //   }\n    //   if (effect.type === \"activateUnit\") {\n    //     const modelWounds = model.wounds || 1;\n    //     points += (modelWounds / 2) * value * (frequency / 10);\n    //   }\n    //   if (effect.type === \"regeneration\") {\n    //     const modelWounds = model.wounds || 1;\n    //     points += modelWounds * frequency;\n    //   }\n    //   if (effect.type === \"invulnerable\") {\n    //     const modelDefense = model.defense || 1;\n    //     points += modelDefense * value * (frequency / 10);\n    //   }\n    //   if (effect.type === \"transport\") {\n    //     const size = (typeof effect.size === 'string' ? rule[effect.size] : effect.size) || 1;\n    //     points += size * (frequency / 10);\n    //   }\n    //   if (effect.type === \"open_topped\") {\n    //     points += value * (frequency / 10);\n    //   }\n    //   if (effect.type === \"psychic\") {\n    //     points += (15 * value) * (frequency / 10);\n    //   }\n    //   if (effect.type === \"heal\") {\n    //     points += 5 * value * (frequency / 10);\n    //   }\n    //   if (effect.type === \"spawnModel\") {\n    //     const spawnedModel = effect.model || {};\n    //     const modelData = getModel(spawnedModel, faction);\n    //     const cost = getModelTotalPoints({\n    //       ...modelData,\n    //     }, faction);\n    //     points += cost * 0.8 * (frequency / 10);\n    //   }\n    //   // Give a new rule\n    //   if (effect.type === \"grantRule\") {\n    //     const ruleName = effect.rule;\n    //     if (ruleName === ruleId) {\n    //       console.log('cycle detected wot you doing m8');\n    //       return 0;\n    //     };\n    //     const target = effect.target || \"self\";\n    //     if (target !== \"self\") {\n    //       const auraCost = getAuraCost(model, effect, (modelTarget) => {\n    //         //const modelRulesWithoutCurr = (modelTarget.rules || []).filter((filterRule) => filterRule.id !== ruleId && filterRule !== ruleId);\n    //         const modelRulesWithoutCurr = [];\n    //         const oldCost = getModelTotalPoints({\n    //           ...modelTarget,\n    //           rules: modelRulesWithoutCurr\n    //         }, faction);\n    //         const modelRulesWithNew = uniq([...modelRulesWithoutCurr, ruleName]);\n    //         const newCost = getModelTotalPoints({\n    //           ...modelTarget,\n    //           rules: modelRulesWithNew\n    //         }, faction);\n    //         const cost = (newCost - oldCost) * (effect.targetModels || modelTarget.min || 1);\n    //         return cost;\n    //       }, faction);\n    //       points += auraCost * (frequency / 10);\n    //     } else {\n    //       const modelRulesWithoutCurr = (model.rules || []).filter((filterRule) => filterRule.id !== ruleId && filterRule !== ruleId);\n    //       const oldCost = getModelTotalPoints({\n    //         ...model,\n    //         rules: modelRulesWithoutCurr\n    //       }, faction);\n    //       const modelRulesWithNew = uniq([...modelRulesWithoutCurr, ruleName]);\n    //       const newCost = getModelTotalPoints({\n    //         ...model,\n    //         rules: modelRulesWithNew\n    //       }, faction);\n    //       const cost = (newCost - oldCost) * (frequency / 10);\n    //       points += cost;\n    //     }\n    //   }\n    //   // Modify stat by some amount\n    //   if (effect.type === \"alterStat\") {\n    //     const target = effect.target || \"self\";\n    //     const improvedValue = (typeof effect.value === 'string' ? rule[effect.value] : effect.value) || 1;\n    //     const improvedStat = effect.statName;\n    //     if (target !== \"self\") {\n    //       const auraCost = getAuraCost(model, effect, (modelTarget) => {\n    //         const oldCost = getModelTotalPoints({\n    //           ...modelTarget,\n    //           rules: [],\n    //         }, faction);\n    //         const newCost = getModelTotalPoints({\n    //           ...modelTarget,\n    //           [improvedStat]: (modelTarget[improvedStat] || CONSTANTS[improvedStat] || 0) + improvedValue,\n    //           rules: [],\n    //         }, faction);\n    //         const cost = (newCost - oldCost) * (effect.targetModels || modelTarget.min || 1);\n    //         return cost;\n    //       }, faction);\n    //       // Tweak this cost up for possible upgrade interactions\n    //       points += auraCost * (frequency / 10) * 1.25;\n    //     } else {\n    //       const oldCost = getModelTotalPoints({\n    //         ...model,\n    //         weapons: [],\n    //         rules: []\n    //       }, faction);\n    //       const newCost = getModelTotalPoints({\n    //         ...model,\n    //         [improvedStat]: (model[improvedStat] || CONSTANTS[improvedStat] || 0) + improvedValue,\n    //         rules: [],\n    //         weapons: [],\n    //       }, faction);\n    //       const cost = (newCost - oldCost) * (frequency / 10);\n    //       points += cost;\n    //     }\n    //   }\n    //   // Modify stat by some amount\n    //   if (effect.type === \"changeStat\") {\n    //     const target = effect.target || \"self\";\n    //     const improvedValue = (typeof effect.value === 'string' ? rule[effect.value] : effect.value) || 1;\n    //     const improvedStat = effect.statName;\n    //     if (target !== \"self\") {\n    //       const auraCost = getAuraCost(model, effect, (modelTarget) => {\n    //         const oldCost = getModelTotalPoints({\n    //           ...modelTarget,\n    //           rules: []\n    //         }, faction);\n    //         const newCost = getModelTotalPoints({\n    //           ...modelTarget,\n    //           [improvedStat]: improvedValue,\n    //           rules: []\n    //         }, faction);\n    //         const cost = (newCost - oldCost) * (effect.targetModels || modelTarget.min || 1);\n    //         return cost;\n    //       }, faction);\n    //       // Tweak this cost up for possible upgrade interactions\n    //       points += auraCost * (frequency / 10) * 1.25;\n    //     } else {\n    //       const oldCost = getModelTotalPoints({\n    //         ...model,\n    //         rules: []\n    //       }, faction);\n    //       const newCost = getModelTotalPoints({\n    //         ...model,\n    //         [improvedStat]: improvedValue,\n    //         rules: []\n    //       }, faction);\n    //       const cost = (newCost - oldCost) * (frequency / 10);\n    //       points += cost;\n    //     }\n    //   }\n    //   // Give free attacks\n    //   if (effect.type === \"freeAttacks\") {\n    //     const weaponName = effect.weapon;\n    //     const fight = (typeof effect.fight === 'string' ? rule[effect.fight] : effect.fight) || 5;\n    //     const shoot = (typeof effect.shoot === 'string' ? rule[effect.shoot] : effect.shoot) || 5;\n    //     const numAttacks = (typeof effect.attacks === 'string' ? rule[effect.attacks] : effect.attacks) || 1;\n    //     const newMod = { ...model };\n    //     if (effect.shoot) {\n    //       newMod.shoot = shoot;\n    //     }\n    //     if (effect.fight) {\n    //       newMod.fight = fight;\n    //     }\n    //     const attackCost = getWeaponCostForModel(weaponName, newMod, faction);\n    //     const cost = numAttacks * attackCost * (frequency / 10);\n    //     points += cost;\n    //   }\n    //   // Alter a rule\n    //   if (effect.type === \"alterRule\") {\n    //     const target = effect.target || \"self\";\n    //     const improvedValue = (typeof effect.value === 'string' ? rule[effect.value] : effect.value) || 1;\n    //     const improvedInput = effect.input;\n    //     const ruleName = effect.ruleName;\n    //     if (target !== \"self\") {\n    //       const auraCost = getAuraCost(model, effect, (modelTarget) => {\n    //         const oldCost = getModelTotalPoints({\n    //           ...modelTarget,\n    //           rules: []\n    //         }, faction);\n    //         const modelRule = find(modelTarget.rules, ['id', ruleName]);\n    //         if (modelRule) {\n    //           const newCost = getModelTotalPoints({\n    //             ...modelTarget,\n    //             rules: [{ ...modelRule, [improvedInput]: modelRule[improvedInput] + improvedValue }]\n    //           }, faction);\n    //           return (newCost - oldCost) * (effect.targetModels || modelTarget.min || 1);\n    //         }\n    //         return 0;\n    //       }, faction);\n    //       points += auraCost * (frequency / 10) * 1.25;\n    //     } else {\n    //       const oldCost = getModelTotalPoints({\n    //         ...model,\n    //         rules: []\n    //       }, faction);\n    //       const modelRule = find(model.rules, ['id', ruleName]);\n    //       if (modelRule) {\n    //         const newCost = getModelTotalPoints({\n    //           ...model,\n    //           rules: [{ ...modelRule, [improvedInput]: modelRule[improvedInput] + improvedValue }]\n    //         }, faction);\n    //         const cost = (newCost - oldCost) * (frequency / 10);\n    //         points += cost;\n    //       }\n    //     }\n    //   }\n    //   // Give bonus attacks with any weapon of that type\n    //   if (effect.type === \"bonusAttack\") {\n    //     const weaponType = effect.weaponType || \"shoot\";\n    //     const weaponFilter = weaponType === \"fight\" ? (wep) => getWeapon(wep, faction).short === \"Melee\" : (wep) => getWeapon(wep, faction).short !== \"Melee\";\n    //     let mostExpensiveWeaponDiff = 0;\n    //     const improvedWeaponStat = \"attacks\";\n    //     (model.weapons || []).filter(weaponFilter).forEach((wep) => {\n    //       const weapon = getWeapon(wep, faction);\n    //       const newCost = getWeaponCostForModel(wep.id ? { ...wep, count: 1 } : wep, model, faction, {\n    //         ...weapon,\n    //         [improvedWeaponStat]: (weapon[improvedWeaponStat] || 0) + value,\n    //         profiles: get(weapon, 'profiles', []).map((profile) => ({ ...profile, [improvedWeaponStat]: (profile[improvedWeaponStat] || 0) + value }))\n    //       });\n    //       mostExpensiveWeaponDiff = Math.max(mostExpensiveWeaponDiff, newCost);\n    //     });\n    //     points += mostExpensiveWeaponDiff * (frequency / 10);\n    //   }\n    //   // change all weapons\n    //   if (effect.type === \"alterWeapon\") {\n    //     const improvedInput = effect.statName;\n    //     const target = effect.target || \"self\";\n    //     if (target !== \"self\") {\n    //       const auraCost = getAuraCost(model, effect, (modelTarget) => {\n    //         let weaponCostTotal = 0;\n    //         (modelTarget.weapons || []).forEach((wep) => {\n    //           const weaponData = getWeapon(wep, faction);\n    //           const wepRulesWithoutCurrent = (weaponData.rules || []).filter((rule) => rule.id !== ruleId && rule !== ruleId);\n    //           if (weaponData[improvedInput]) {\n    //             const oldCost = getWeaponCostForModel(wep, modelTarget, faction, {\n    //               ...weaponData,\n    //               rules: wepRulesWithoutCurrent\n    //             });\n    //             const newCost = getWeaponCostForModel(wep, modelTarget, faction, {\n    //               ...weaponData,\n    //               rules: wepRulesWithoutCurrent,\n    //               [improvedInput]: (weaponData[improvedInput] || 0) + value,\n    //               profiles: get(weaponData, 'profiles', []).map((profile) => ({ ...profile, [improvedInput]: (profile[improvedInput] || 0) + value }))\n    //             });\n    //             const cost = (newCost - oldCost) * (frequency / 10);\n    //             weaponCostTotal += cost;\n    //           }\n    //         });\n    //         return weaponCostTotal * (effect.targetModels || modelTarget.min || 1);\n    //       }, faction);\n    //       points += auraCost * (frequency / 10) * 1.25;\n    //     } else {\n    //       const modelTarget = model;\n    //       let weaponCostTotal = 0;\n    //       (modelTarget.weapons || []).forEach((wep) => {\n    //         const weaponData = getWeapon(wep, faction);\n    //         const wepRulesWithoutCurrent = (weaponData.rules || []).filter((rule) => rule.id !== ruleId && rule !== ruleId);\n    //         if (weaponData[improvedInput]) {\n    //           const oldCost = getWeaponCostForModel(wep, modelTarget, faction, {\n    //             ...weaponData,\n    //             rules: wepRulesWithoutCurrent\n    //           });\n    //           const newCost = getWeaponCostForModel(wep, modelTarget, faction, {\n    //             ...weaponData,\n    //             rules: wepRulesWithoutCurrent,\n    //             [improvedInput]: (weaponData[improvedInput] || 0) + value,\n    //             profiles: get(weaponData, 'profiles', []).map((profile) => ({ ...profile, [improvedInput]: (profile[improvedInput] || 0) + value }))\n    //           });\n    //           const cost = (newCost - oldCost);\n    //           weaponCostTotal += cost;\n    //         }\n    //       });\n    //       points += weaponCostTotal * (frequency / 10);\n    //     }\n    //   }\n    // });\n    return points;\n  }\n\n  const getWeaponList = (weaponList, faction) => {\n    const weapons = weaponList.map((weaponName) => getWeapon(weaponName, faction)).filter(weapon => !!weapon);\n    return sortBy(weapons, 'name');\n  }\n\n  const getRulesList = (ruleList, faction) => {\n    const weapons = ruleList.map((ruleName) => getRule(ruleName, faction)).filter(rule => !!rule);\n    return sortBy(weapons, 'name');\n  }\n\n  const getWeapons = (unit, faction) => {\n    const weaponsSet = new Set();\n    const weaponsList = [];\n    (unit.options || []).forEach((option) => {\n      const wepsArray = castArray(option.withWeapon || option.addWeapon || []);\n      wepsArray.forEach((wepList) => {\n        const wepListArr = castArray(wepList);\n        wepListArr.forEach((wep) => {\n          const weaponId = wep.id || wep;\n          if (!weaponsSet.has(weaponId)) {\n            weaponsSet.add(weaponId);\n            weaponsList.push(weaponId);\n          }\n        });\n      });\n    });\n    getModels(unit, faction).forEach((model) => {\n      if (model.options) {\n        model.options.forEach((option) => {\n          const wepsArray = castArray(option.withWeapon || option.addWeapon || []);\n          wepsArray.forEach((wepList) => {\n            const wepListArr = castArray(wepList);\n            wepListArr.forEach((wep) => {\n              const weaponId = wep.id || wep;\n              if (!weaponsSet.has(weaponId)) {\n                weaponsSet.add(weaponId);\n                weaponsList.push(weaponId);\n              }\n            });\n          });\n        });\n      }\n      (model.weapons || []).forEach((weapon) => {\n        const weaponId = weapon.id || weapon;\n        if (!weaponsSet.has(weaponId)) {\n          weaponsSet.add(weaponId);\n          weaponsList.push(weaponId);\n        }\n      });\n    });\n    const weapons = weaponsList.map((weaponName) => getWeapon(weaponName, faction)).filter(weapon => !!weapon);\n    return sortBy(weapons, 'name');\n  }\n\n  const getAllWeapons2 = (faction) => {\n    const allWeapons = {};\n    Object.keys(get(faction, 'weapons', {})).forEach((key) => {\n      allWeapons[key] = {\n        id: key,\n        ...faction.weapons[key]\n      }\n    });\n    Object.keys(globalWeapons).forEach((key) => {\n      allWeapons[key] = {\n        id: key,\n        ...globalWeapons[key]\n      }\n    });\n    return allWeapons;\n  };\n\n  const getAllWeapons = (faction) => {\n    const weaponsSet = new Set();\n    const weaponsList = [];\n    Object.values((faction.units || []) || {}).forEach((unit) => {\n      const weps = getWeapons(unit, faction);\n      weps.forEach((weapon) => {\n        if (!weaponsSet.has(weapon.name)) {\n          weaponsSet.add(weapon.name);\n          weaponsList.push(weapon);\n        }\n      });\n    });\n    return weaponsList;\n  };\n\n  const getAllRules = (faction) => {\n    const allRules = {};\n    Object.keys(get(faction, 'rules', {})).forEach((key) => {\n      allRules[key] = {\n        id: key,\n        ...faction.rules[key]\n      }\n    });\n    Object.keys(globalRules).forEach((key) => {\n      allRules[key] = {\n        id: key,\n        ...globalRules[key]\n      }\n    });\n    return Object.values(allRules);\n  }\n\n  const getAllWeaponRules = (weapons, faction) => {\n    const rulesSet = new Set();\n    const rulesList = [];\n    const wepArray = castArray(weapons);\n    wepArray.forEach((wepy) => {\n      const profiles = get(wepy, 'profiles', []);\n      const weaponAndProfiles = [...profiles, wepy];\n      weaponAndProfiles.forEach((weapon) => {\n        get(weapon, 'rules', []).forEach((rule) => {\n          const ruleId = rule.id || rule;\n          if (!rulesSet.has(ruleId)) {\n            rulesSet.add(ruleId);\n            rulesList.push(ruleId);\n          }\n        });\n      });\n    });\n    const rules = rulesList.map((rule) => getRule(rule, faction)).filter(rule => !rule.hidden);\n    return rules;\n  };\n\n  const getWeaponRules = (units, faction) => {\n    const rulesSet = new Set();\n    const rulesList = [];\n    units.forEach((unit) => {\n      getModels(unit, faction).forEach((model) => {\n        get(model, 'weapons', []).forEach((weaponName) => {\n          const weaponId = weaponName.id || weaponName;\n          const wep = getWeapon(weaponId, faction);\n          const profiles = get(wep, 'profiles', []);\n          const weaponAndProfiles = [...profiles, wep];\n          weaponAndProfiles.forEach((weapon) => {\n            get(weapon, 'rules', []).forEach((rule) => {\n              const ruleId = rule.id || rule;\n              if (!rulesSet.has(ruleId)) {\n                rulesSet.add(ruleId);\n                rulesList.push(ruleId);\n              }\n            });\n          });\n        });\n        if (model.options || unit.options) {\n          [...get(unit, 'options', []), ...get(model, 'options', [])].forEach((option) => {\n            const wepArray = castArray(option.withWeapon || option.addWeapon || []).flat();\n            wepArray.forEach((wepList) => {\n              const wepListArr = castArray(wepList);\n              wepListArr.forEach((wep) => {\n                const weaponId = wep.id || wep;\n                const wepy = getWeapon(weaponId, faction);\n                const profiles = get(wepy, 'profiles', []);\n                const weaponAndProfiles = [...profiles, wepy];\n                weaponAndProfiles.forEach((weapon) => {\n                  get(weapon, 'rules', []).forEach((rule) => {\n                    const ruleId = rule.id || rule;\n                    if (!rulesSet.has(ruleId)) {\n                      rulesSet.add(ruleId);\n                      rulesList.push(ruleId);\n                    }\n                  });\n                });\n              });\n            });\n          });\n        }\n      });\n    });\n    const rules = rulesList.map((rule) => getRule(rule, faction)).filter(rule => !rule.hidden);\n    return rules;\n  };\n\n  const getModelRules = (units, faction) => {\n    const rulesSet = new Set();\n    const rulesList = [];\n    units.forEach((unit) => {\n      const unitRules = unit.rules || [];\n      unitRules.forEach((rule) => {\n        const ruleId = rule.id || rule;\n        if (!rulesSet.has(ruleId)) {\n          rulesSet.add(ruleId);\n          rulesList.push(ruleId);\n        }\n      });\n      getModels(unit, faction).forEach((model) => {\n        (model.rules || []).forEach((rule) => {\n          const ruleId = rule.id || rule;\n          if (!rulesSet.has(ruleId)) {\n            rulesSet.add(ruleId);\n            rulesList.push(ruleId);\n          }\n        });\n        if (model.options || unit.options) {\n          [...get(unit, 'options', []), ...get(model, 'options', [])].forEach((option) => {\n            const addRule = castArray(option.addRule || option.withRule || []).flat();\n            addRule.forEach((rule) => {\n              // const ruleData = getRule(rule, faction);\n              // (ruleData.effects || []).forEach((effect) => {\n              //   const ruleId = get(effect, 'rule.id') || get(effect, 'rule');\n              //   if (ruleId) {\n              //     if (!rulesSet.has(ruleId)) {\n              //       rulesSet.add(ruleId);\n              //       rulesList.push(ruleId);\n              //     }\n              //   }\n              // })\n              const ruleId = rule.id || rule;\n              if (!rulesSet.has(ruleId)) {\n                rulesSet.add(ruleId);\n                rulesList.push(ruleId);\n              }\n            });\n          });\n        }\n      });\n    });\n    const rules = rulesList.map((rule) => getRule(rule, faction)).filter(rule => !rule.hidden);\n    return rules;\n  };\n\n  const getRules = (units, faction) => {\n    let rulesList = [];\n    const modelRules = getModelRules(units, faction);\n    rulesList = rulesList.concat(modelRules);\n    const weaponRules = getWeaponRules(units, faction);\n    rulesList = rulesList.concat(weaponRules);\n    return uniq(rulesList);\n  };\n\n  const getMissions = () => {\n    return rootMissions || {};\n  }\n\n  const getMissionScenarios = () => {\n    return Object.values(getMissions().missions || {});\n  }\n\n  const getMissionWeather = () => {\n    return Object.values(getMissions().weather || {});\n  }\n\n  const getMissionConditions = () => {\n    return Object.values(getMissions().conditions || {});\n  }\n\n  const getMissionSecondaries = () => {\n    return Object.values(getMissions().secondaries || {});\n  }\n\n  return {\n    getNameLists,\n    getNameList,\n    getRandomName,\n    getRandomFemaleName,\n    getRandomMaleName,\n    resolvePoints,\n    getSetbacks,\n    getSetback,\n    getGameType,\n    getPerks,\n    getPerk,\n    getRawFaction,\n    getAllKeywords,\n    getOrganizationCategory,\n    getOrganizationSlotsRaw,\n    getRawOrganizations,\n    getOrganizations,\n    getAllWeaponRules,\n    getModels,\n    getModel,\n    getModelTotalPoints,\n    getModelPoints,\n    getModelWeaponPoints,\n    getModelRulePoints,\n    getWeaponCostForModel,\n    getModelList,\n    getAlliance,\n    getAlliances,\n    getRawAlliances,\n    getRelicCost,\n    getAllRules,\n    getPowerCharge,\n    getPhase,\n    getUnits,\n    getUnit,\n    getAllWeapons,\n    getAllWeapons2,\n    getRules,\n    getRulesList,\n    getWeaponRules,\n    getModelRules,\n    getFactions,\n    getRawPhases,\n    getWeaponCostAverage,\n    getRuleCostAverage,\n    getRule,\n    getUnitPoints,\n    getWeapon,\n    getWeapons,\n    getWeaponList,\n    getOptionsList,\n    getAdditionalModelsList,\n    getRuleCostForModel,\n    getPowers,\n    getFactionWithSubfaction,\n    getPower,\n    getAllModels,\n    getStrategies,\n    getStrategy,\n    getRelics,\n    getRelic,\n    getFaction,\n    getSubfaction,\n    getPowerCategories,\n    getCategories,\n    getRawPowerCategories,\n    getRawCategories,\n    getPowerCategory,\n    getCategory,\n    getMissions,\n    getMissionScenarios,\n    getMissionSecondaries,\n    getMissionWeather,\n    getMissionConditions,\n    getTerrain\n  }\n}\n\nexport const mergeGlobalData = (game, gameData) => {\n  const gameType = get(game, 'gameType', 'battle');\n  return mergeWith(get(gameData, `gameData.globalData.all`, {}), get(gameData, `gameData.globalData[${gameType}]`, {}))\n}","import {\n  Box, Button,\n  Card, CardContent, CardHeader, Typography\n} from \"@mui/material\";\nimport React from \"react\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\n\nexport const Focus = (props) => {\n  const {\n    faction,\n    subfactions: rawSubfactions,\n    setSubfaction,\n    subfaction,\n  } = props;\n  const subfactions = [\n    {\n      id: \"none\",\n      name: \"No Focus\",\n      description:\n        \"A generalist force which can take on many different enemies.\",\n    },\n    ...rawSubfactions,\n  ];\n  const { color: factionColor } =\n    faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  return (\n    <div>\n      <Typography sx={{ my: 2 }} variant=\"h4\" component=\"div\" align=\"center\">\n        Focus\n      </Typography>\n      {!subfactions.length && <p>{\"No subfactions found...\"}</p>}\n      <div className=\"two-columns\">\n        {subfactions.map((subfactionData, index) => {\n          const background = subfactionData.description;\n          return (\n            <div style={{ breakInside: \"avoid\" }} key={index}>\n              <Card\n                className=\"no-break\"\n                sx={{\n                  border: `2px solid ${factionColor}`,\n                  mb: 2,\n                }}\n              >\n                <CardHeader\n                  sx={{\n                    backgroundColor: factionColor,\n                    color: textColor,\n                    py: 1,\n                  }}\n                  title={\n                    <Typography variant=\"h5\" component=\"div\">\n                      {subfactionData.name}\n                    </Typography>\n                  }\n                />\n                <CardContent>\n                  <Box\n                    display=\"flex\"\n                    sx={{ justifyContent: 'space-between', alignItems: 'center' }}\n                  >\n                    <Box\n                      display=\"flex\"\n                      sx={{ justifyContent: 'space-between', alignItems: 'center', mr: 1 }}\n                    >\n                      {!!background && (\n                        <div>\n                          <>{background}</>\n                        </div>\n                      )}\n                      {/* {!!strengths && <div>\n                        <>{strengths}</>\n                      </div>}\n                      {!!weaknesses && <div>\n                        <>{weaknesses}</>\n                      </div>} */}\n                    </Box>\n                    <Button\n                      className=\"focus-select\"\n                      variant=\"contained\"\n                      disabled={subfaction === subfactionData.id}\n                      onClick={() => setSubfaction(subfactionData.id)}\n                    >{`Select`}</Button>\n                  </Box>\n                </CardContent>\n              </Card>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","\nimport {\n  TableRow\n} from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\n\nexport const StyledTableRow = styled(TableRow)(({ theme }) => ({\n  th: {\n    color: 'inherit'\n  },\n  '& .MuiTableCell-sizeSmall': {\n    padding: \"5px 0px 5px 5px\" // <-- arbitrary value\n  },\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));","import {\n  Card, CardContent, CardHeader, Table, TableBody, TableCell, Typography\n} from \"@mui/material\";\nimport { StyledTableRow } from \"components/styled-table\";\nimport React from \"react\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\n\n\nexport const Organization = (props) => {\n  const { data, faction, nameFilter } = props;\n  const organizations = data\n    .getOrganizations()\n    .filter((strategy) =>\n      nameFilter\n        ? strategy.name.toLowerCase().includes(nameFilter.toLowerCase())\n        : true\n    );\n  const { color: factionColor } =\n    faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n\n  return (\n    <>\n      <div>\n        <Typography sx={{ my: 2 }} variant=\"h4\" align=\"center\">\n          Forces\n        </Typography>\n        {!organizations.length && <p>{\"No forces found...\"}</p>}\n        <div className=\"two-columns\">\n          {organizations.map((org, index) => {\n            const orgSlots = data.getOrganizationSlotsRaw(org);\n            const cost = org.cost;\n            return (\n              <Card\n                key={index}\n                className=\"no-break\"\n                sx={{\n                  border: `2px solid ${factionColor}`,\n                  mb: 2,\n                }}\n              >\n                <CardHeader\n                  sx={{ backgroundColor: factionColor, color: textColor, p: 1 }}\n                  title={\n                    <Typography variant=\"h5\" component=\"div\" align=\"center\">\n                      {org.name} {!!cost && <small style={{ fontSize: '1rem'}}>{`(${cost})`}</small>}\n                    </Typography>\n                  }\n                />\n                <CardContent style={{ padding: 0 }}>\n                  <Typography component=\"div\" align=\"center\" sx={{ p: 2 }}>\n                    {org.description}\n                  </Typography>\n                  <Table size=\"small\" aria-label=\"simple table\" sx={{ mb: 1 }}>\n                    <TableBody>\n                      {orgSlots.map((category, index) => {\n                        const categoryData = data.getCategory(category);\n                        const organizationData = data.getOrganizationCategory(\n                          org,\n                          category\n                        );\n                        return (\n                          <StyledTableRow key={index}>\n                            <TableCell>{categoryData.name}</TableCell>\n                            <TableCell align=\"right\" style={{ paddingRight: '5px' }}>\n                              {`${organizationData.min || 0}-${\n                                organizationData.max || 0\n                              }`}\n                            </TableCell>\n                          </StyledTableRow>\n                        );\n                      })}\n                    </TableBody>\n                  </Table>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n","import ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\nimport {\n  CardHeader, IconButton, List,\n  ListItem, ListItemText, Typography\n} from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { get, sortBy } from \"lodash\";\nimport React from \"react\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\n\nexport const Overview = (props) => {\n  const { faction, nameFilter } = props;\n  const { color: factionColor } = faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  const background = faction.background;\n  const description = faction.description;\n  const strengths = faction.strengths;\n  const weaknesses = faction.weaknesses;\n  const powers = get(faction, \"buyLinks\", []).filter((list) =>\n    nameFilter\n      ? list.name.toLowerCase().includes(nameFilter.toLowerCase())\n      : true\n  );\n  const sortedPowers = sortBy(powers, (power) => power.name);\n  return (\n    <div>\n      <Typography sx={{ my: 2 }} variant=\"h4\" align=\"center\">\n        Overview\n      </Typography>\n      {!background &&\n        !description &&\n        !strengths &&\n        !weaknesses &&\n        !sortedPowers && (\n          <div>\n            <p>{`No information available...`}</p>\n          </div>\n        )}\n\n      {!!description && (\n        <Card\n          sx={{\n            border: `2px solid ${factionColor}`,\n            mb: 2,\n          }}\n        >\n          <CardHeader\n            sx={{ backgroundColor: factionColor, color: textColor, py: 1 }}\n            title={\n              <Typography variant=\"h5\" component=\"div\">\n                {\"Description\"}\n              </Typography>\n            }\n          />\n          <CardContent>{description}</CardContent>\n        </Card>\n      )}\n      {/* {!!background && <div className=\"unit-card\" style={{ marginBottom: '15px', borderColor: factionColor }}>\n        <div style={thStyle} className=\"unit-card-title\">\n          <h4>{'Background'}</h4>\n        </div>\n        <div className=\"unit-card-body\">\n          {background}\n        </div>\n      </div>} */}\n      {/* {!!strengths && <div>\n        <h4>{'Strengths'}</h4>\n        <p>{strengths}</p>\n        <hr />\n      </div>}\n      {!!weaknesses && <div>\n        <h4>{'Weaknesses'}</h4>\n        <p>{weaknesses}</p>\n        <hr />\n      </div>} */}\n      {!!sortedPowers && !!sortedPowers.length && (\n        <Card\n          sx={{\n            border: `2px solid ${factionColor}`,\n            mb: 2,\n          }}\n        >\n          <CardHeader\n            sx={{ backgroundColor: factionColor, color: textColor, py: 1 }}\n            title={\n              <Typography variant=\"h5\" component=\"div\">\n                {\"Model Makers\"}\n              </Typography>\n            }\n          />\n          <CardContent style={{ padding: 0 }}>\n            <List\n              sx={{\n                width: \"100%\"\n              }}\n            >\n              {sortedPowers.map((list) => (\n                <ListItem\n                  key={list.name}\n                  secondaryAction={\n                    <IconButton edge=\"end\" aria-label=\"comments\" onClick={() => window.open(list.link, \"_blank\")}>\n                      <ShoppingCartIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemText\n                    id={list.name}\n                    primary={list.name}\n                    secondary={list.description}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n","import {\n  Card, CardContent, CardHeader, Divider,\n  Typography\n} from \"@mui/material\";\nimport ReactMarkdown from \"react-markdown\";\nimport { getTextColor, hexToRgb } from 'utils/colors';\n\nexport const PowerCard = (props) => {\n  const { faction, power } = props;\n  const { color: factionColor } = faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  return (\n    <Card\n      className=\"no-break\"\n      sx={{\n        border: `2px solid ${factionColor}`,\n        mb: 2,\n      }}\n    >\n      <CardHeader\n        sx={{\n          backgroundColor: factionColor,\n          color: textColor,\n          py: 1,\n        }}\n        title={\n          <Typography variant=\"h5\" component=\"div\">\n            {power.name} <small style={{ fontSize: '1rem'}}>{`(${power.charge})`}</small>\n          </Typography>\n        }\n      />\n      <CardContent>\n        {!!power.flavor && (\n          <>\n            <i className=\"power-flavor\">{power.flavor}</i>\n            <Divider />\n          </>\n        )}\n        <div className=\"power-description\">\n          <ReactMarkdown children={power.description} className=\"rule-text\" />\n        </div>\n        {!!power.source && (\n          <>\n            <Divider />\n            <i className=\"power-source\">{power.source}</i>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","import {\n  Box, Typography\n} from \"@mui/material\";\nimport { PowerCard } from 'components/roster/power-card';\nimport { get, groupBy, sortBy } from \"lodash\";\nimport React from \"react\";\n\nexport const Powers = (props) => {\n  const { data, faction, nameFilter } = props;\n  const strategies = data\n    .getPowers(faction)\n    .filter((power) =>\n      nameFilter\n        ? power.name.toLowerCase().includes(nameFilter.toLowerCase())\n        : true\n    );\n  const phases = { ...data.getRawPowerCategories(faction) };\n  const unitPhases = { ...groupBy(strategies, \"category\") };\n  const phaseOrder = [undefined, ...Object.keys(phases)].filter(\n    (cat) => unitPhases[cat] && unitPhases[cat]\n  );\n  return (\n    <>\n      {!strategies.length && <p>{\"No strategies found...\"}</p>}\n      {phaseOrder.map((phaseId, phaseIdx) => {\n        const phaseStrategies = get(unitPhases, `[${phaseId}]`, []).map(\n          (strat) => ({ ...strat, sourceLength: strat.source.length })\n        );\n        const sortedStrategies = sortBy(phaseStrategies, [\n          \"sourceLength\",\n          \"source\",\n          \"charge\",\n        ]);\n        const phaseData = data.getPowerCategory(phaseId, faction);\n        return (\n          <>\n            <div key={phaseIdx}>\n              <Typography\n                sx={{ my: 2 }}\n                variant=\"h4\"\n                component=\"div\"\n                align=\"center\"\n              >\n                {phaseData.name || \"Any Specialty\"}\n              </Typography>\n            </div>\n            <div className=\"two-columns\">\n              {sortedStrategies.map((power, index) => (\n                <div key={index} className=\"no-break\">\n                  <Box sx={{ mb: 2 }}>\n                    <PowerCard faction={faction} power={power} />\n                  </Box>\n                </div>\n              ))}\n            </div>\n          </>\n        );\n      })}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Button from \"@mui/material/Button\";\n\nexport const RuleList = (props) => {\n  const { rules, faction, toggler, twoColumn, showName = true } = props;\n  const [showRules, setShowRules] = useState(false);\n  const { color: factionColor } = faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  const borderColor = textColor !== \"white\" ? textColor : factionColor;\n  const btnStyle = { borderColor };\n  return (\n    <div>\n      {!!toggler && (\n        <div className=\"text-center\" style={{ marginBottom: \"0.5rem\" }}>\n          <Button\n            sx={{ color: 'inherit', textTransform: 'none' }}\n            size=\"small\"\n            fullWidth\n            variant=\"outlined\"\n            block\n            style={btnStyle}\n            onClick={() => setShowRules(!showRules)}\n          >\n            {showRules ? \"Hide\" : \"Special Rules\"}\n          </Button>\n        </div>\n      )}\n      <Collapse in={!toggler || showRules}>\n        <div>\n          <div className={twoColumn ? \"two-columns\" : \"\"}>\n            {rules.map((rule) => {\n              const ruleName = `${rule.name}${\n                rule.inputs\n                  ? `(${rule.inputs\n                      .map((input) => input.toUpperCase())\n                      .join(\", \")})`\n                  : ``\n              }`;\n              const stuff = `${showName ? `**${ruleName}**: ` : \"\"}${\n                rule.description\n              }`;\n              return (\n                <div className=\"no-break\">\n                  <>\n                    <ReactMarkdown children={stuff} className=\"rule-text\" />\n                  </>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </Collapse>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\nimport { get } from \"lodash\";\nimport { RuleList } from \"components/roster/rule-list\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Button from \"@mui/material/Button\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport { StyledTableRow } from \"components/styled-table\";\n\nexport const WeaponList = (props) => {\n  const { weapons, faction, data, toggler, rules, twoColumns = true } = props;\n  const { color: factionColor, secondary_color: factionSecondaryColor } =\n    faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  const textColorSecondary = factionSecondaryColor\n    ? getTextColor(hexToRgb(factionSecondaryColor))\n    : \"white\";\n  const borderColor = textColor !== \"white\" ? textColor : factionColor;\n  const btnStyle = { borderColor };\n  const thStyle = {\n    backgroundColor: factionSecondaryColor || factionColor,\n    color: factionSecondaryColor ? textColorSecondary : textColor,\n  };\n  const [showWeapons, setShowWeapons] = useState(false);\n  const renderRules = (rules) => {\n    if (!rules || !rules.length) {\n      return;\n    }\n    return (\n      <div>\n        <RuleList twoColumn={twoColumns} faction={faction} rules={rules} />\n      </div>\n    );\n  };\n  return (\n    <div>\n      {!!toggler && (\n        <div align=\"center\">\n          <div style={{ marginBottom: \"0.5rem\" }}>\n            <Button\n              sx={{ color: \"inherit\", textTransform: \"none\" }}\n              size=\"small\"\n              fullWidth\n              variant=\"outlined\"\n              style={btnStyle}\n              onClick={() => setShowWeapons(!showWeapons)}\n            >\n              {showWeapons ? \"Hide\" : \"Weapons\"}\n            </Button>\n          </div>\n        </div>\n      )}\n      <Collapse in={!toggler || showWeapons}>\n        <TableContainer sx={{ borderRadius: 1, mb: 1 }}>\n          <Table size=\"small\" style={{ borderColor: borderColor }}>\n            <TableHead>\n              <StyledTableRow style={thStyle}>\n                <TableCell>{\"Weapon\"}</TableCell>\n                <TableCell align=\"center\">{\"Range\"}</TableCell>\n                <TableCell align=\"center\">{\"A\"}</TableCell>\n                <TableCell align=\"center\">{\"AP\"}</TableCell>\n                <TableCell>{\"Special\"}</TableCell>\n              </StyledTableRow>\n            </TableHead>\n            <TableBody>\n              {weapons.map((weapon) => {\n                if (weapon.profiles) {\n                  return weapon.profiles.map((weaponProfile) => {\n                    return (\n                      <StyledTableRow>\n                        <TableCell>{`${weapon.name} (${weaponProfile.name})`}</TableCell>\n                        <TableCell align=\"center\">\n                          {`${\n                            weapon.short !== \"Melee\"\n                              ? `${weaponProfile.short}\"`\n                              : weaponProfile.short || \"-\"\n                          }/${\n                            weaponProfile.medium\n                              ? `${weaponProfile.medium}\"`\n                              : \"-\"\n                          }`}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {weaponProfile.attacks ? weaponProfile.attacks : \"-\"}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {weaponProfile.ap || \"-\"}\n                        </TableCell>\n                        <TableCell>\n                          {[\n                            ...get(weapon, \"rules\", []),\n                            ...get(weaponProfile, \"rules\", []),\n                          ]\n                            .map((rule) => {\n                              const ruleData = data.getRule(\n                                rule.id || rule,\n                                faction\n                              );\n                              return ruleData.inputs\n                                ? `${ruleData.name}(${ruleData.inputs\n                                    .map((input) => rule[input])\n                                    .join(\", \")})`\n                                : ruleData.name;\n                            })\n                            .join(\", \") || \"-\"}\n                        </TableCell>\n                      </StyledTableRow>\n                    );\n                  });\n                }\n                return (\n                  <StyledTableRow>\n                    <TableCell>{weapon.name}</TableCell>\n                    <TableCell align=\"center\">\n                      {`${\n                        weapon.short !== \"Melee\"\n                          ? `${weapon.short}\"`\n                          : weapon.short || \"-\"\n                      }/${weapon.medium ? `${weapon.medium}\"` : \"-\"}`}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {weapon.attacks ? weapon.attacks : \"-\"}\n                    </TableCell>\n                    <TableCell align=\"center\">{weapon.ap || \"-\"}</TableCell>\n                    <TableCell>\n                      {get(weapon, \"rules\", [])\n                        .map((rule) => {\n                          const ruleData = data.getRule(\n                            rule.id || rule,\n                            faction\n                          );\n                          return ruleData.inputs\n                            ? `${ruleData.name}(${ruleData.inputs\n                                .map((input) => rule[input])\n                                .join(\", \")})`\n                            : ruleData.name;\n                        })\n                        .join(\", \") || \"-\"}\n                    </TableCell>\n                  </StyledTableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {!!(rules && rules.length) && <>{renderRules(rules)}</>}\n      </Collapse>\n    </div>\n  );\n};\n","import {\n  Card, CardContent, CardHeader, Divider,\n  Typography\n} from \"@mui/material\";\nimport { RuleList } from \"components/roster/rule-list\";\nimport { WeaponList } from \"components/roster/weapon-list\";\nimport ReactMarkdown from \"react-markdown\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\n\nconst dummyModel = {\n  name: \"Battle Brother\",\n  courage: 7,\n  shoot: 6,\n  fight: 6,\n  defense: 7,\n  movement: 5,\n  reflexes: 7,\n  agility: 6,\n  wounds: 3,\n  weapons: [\n    { id: \"marine_rifle\" },\n    \"at_grenade\",\n    { id: \"ccw\", count: 2 },\n    \"marine_pistol\",\n  ],\n  min: 4,\n  max: 9,\n};\n\nexport const RelicCard = (props) => {\n  const { faction, relic, data, printMode = false } = props;\n  const { color: factionColor } = faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  const weaponData = relic.weapon\n    ? data.getWeapon(relic.weapon, faction)\n    : undefined;\n  const ruleData = relic.rule ? data.getRule(relic.rule, faction) : undefined;\n  const weaponRules = relic.weapon\n    ? data.getRules(\n        [\n          {\n            models: [\n              {\n                ...dummyModel,\n                rules: [],\n                weapons: [relic.weapon],\n              },\n            ],\n          },\n        ],\n        faction\n      )\n    : [];\n  const relicCost = Math.round(data.getRelicCost(relic, faction));\n  return (\n    <Card\n      className=\"no-break no-page-break force-print\"\n      sx={{\n        border: `2px solid ${factionColor}`,\n      }}\n    >\n      <CardHeader\n        sx={{\n          backgroundColor: factionColor,\n          color: textColor,\n          py: 1,\n        }}\n        title={\n          <Typography variant=\"h5\" component=\"div\">\n            {relic.name} <small style={{ fontSize: '1rem'}}>{`(${relicCost}pts)`}</small>\n          </Typography>\n        }\n      />\n      <CardContent>\n        {(!!relic.flavor && !printMode) && (\n          <>\n            <i className=\"legend-flavor\">{relic.flavor}</i>\n            <Divider />\n          </>\n        )}\n        {!!relic.description && (\n          <div className=\"legend-description\">\n            <ReactMarkdown children={relic.description} className=\"rule-text\" />\n            <Divider />\n          </div>\n        )}\n        <div>\n          {!!ruleData && (\n            <div className=\"legend-rules-text\">\n              <ReactMarkdown\n                children={`${`__${ruleData.name}:__ `} ${ruleData.description}`}\n                className=\"rule-text\"\n              />\n            </div>\n          )}\n          {!!weaponData && (\n            <div className=\"legend-rules-text\">\n              <WeaponList\n                weapons={[weaponData]}\n                faction={faction}\n                data={data}\n              />\n            </div>\n          )}\n          {!!weaponRules.length && (\n            <div className=\"legend-rules-text\">\n              <RuleList\n                twoColumn={false}\n                rules={weaponRules}\n                faction={faction}\n              />\n            </div>\n          )}\n        </div>\n        {!!relic.source && (\n          <div className=\"legend-description\">\n            <Divider />\n            <i>{relic.source}</i>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","import { Box, Typography } from \"@mui/material\";\nimport { RelicCard } from \"components/roster/relic-card\";\nimport { get, groupBy, sortBy } from \"lodash\";\nimport React from \"react\";\n\nexport const Relics = (props) => {\n  const { data, faction, nameFilter } = props;\n\n  const RELIC_TYPES = {\n    equipment: \"Equipment\",\n    ability: \"Abilities\",\n  };\n\n  const nameFilterer = (relic) => {\n    if (!nameFilter) {\n      return true;\n    }\n    const relicData = relic.weapon\n      ? data.getWeapon(relic.weapon, faction)\n      : data.getRule(relic.rule, faction);\n    return relicData.name.toLowerCase().includes(nameFilter.toLowerCase());\n  };\n\n  const relics = data.getRelics(faction).filter(nameFilterer);\n  const groupedRelics = groupBy(relics, (relic) =>\n    relic.type || relic.rule ? \"ability\" : \"equipment\"\n  );\n\n  return (\n    <div>\n      {!relics.length && <p>{\"No legends found...\"}</p>}\n      <div>\n        {Object.keys(RELIC_TYPES)\n          .filter(\n            (type) => !!groupedRelics[type] && !!groupedRelics[type].length\n          )\n          .map((relicType, relicIdxKey) => {\n            const relicsType = get(groupedRelics, `[${relicType}]`, [])\n              .map((relic) => ({\n                ...relic,\n                cost: data.getRelicCost(relic, faction),\n              }))\n              .map((strat) => ({\n                ...strat,\n                sourceLength: strat.source.length,\n              }));\n            const sortedRelics = sortBy(relicsType, [\n              \"sourceLength\",\n              \"source\",\n              \"cost\",\n            ]);\n            return (\n              <>\n                <div key={relicIdxKey}>\n                  <Typography\n                    sx={{ my: 2 }}\n                    variant=\"h4\"\n                    component=\"div\"\n                    align=\"center\"\n                  >\n                    {RELIC_TYPES[relicType]}\n                  </Typography>\n                </div>\n                <div className=\"two-columns\">\n                  {sortedRelics.map((relic, index) => {\n                    return (\n                      <Box sx={{ mb: 2 }} style={{ breakInside: \"avoid\" }} key={index}>\n                        <RelicCard faction={faction} relic={relic} data={data} />\n                      </Box>\n                    );\n                  })}\n                </div>\n              </>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n","import { Card, CardContent, CardHeader, Typography } from \"@mui/material\";\nimport { RuleList } from \"components/roster/rule-list\";\nimport { sortBy } from \"lodash\";\nimport React from \"react\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\n\nexport const Rules = (props) => {\n  const { data, faction, nameFilter } = props;\n  const { color: factionColor } = faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  const units = data.getUnits(faction);\n  const weapons = data\n    .getRules(units, faction)\n    .filter((strategy) =>\n      nameFilter\n        ? strategy.name.toLowerCase().includes(nameFilter.toLowerCase())\n        : true\n    );\n  const weaponsSorted = sortBy(weapons, \"name\");\n  return (\n    <div>\n      <Typography sx={{ my: 2 }} variant=\"h4\" component=\"div\" align=\"center\">\n        Rules\n      </Typography>\n      {!weapons.length && <p>{\"No rules found...\"}</p>}\n      {!!weapons.length && (\n        <div className=\"two-columns\">\n          {weaponsSorted.map((rule, index) => (\n            <div style={{ breakInside: \"avoid-column\" }} key={index}>\n              <Card\n                className=\"no-break\"\n                sx={{\n                  border: `2px solid ${factionColor}`,\n                  mb: 2,\n                }}\n              >\n                <CardHeader\n                  sx={{\n                    backgroundColor: factionColor,\n                    color: textColor,\n                    py: 1,\n                  }}\n                  title={\n                    <Typography variant=\"h6\" component=\"div\">\n                      {rule.name}\n                    </Typography>\n                  }\n                />\n                <CardContent>\n                  <RuleList faction={faction} rules={[rule]} showName={false} />\n                </CardContent>\n              </Card>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\nimport ReactMarkdown from 'react-markdown';\nimport { getTextColor, hexToRgb } from 'utils/colors';\n\nexport const StrategyCard = (props) => {\n  const { strategy, faction } = props;\n  const { color: factionColor } = faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  return (\n    <Card\n      className=\"no-break\"\n      sx={{\n        border: `2px solid ${factionColor}`\n      }}\n    >\n      <CardHeader\n        sx={{\n          backgroundColor: factionColor,\n          color: textColor,\n          py: 1,\n        }}\n        title={\n          <Typography variant=\"h5\" component=\"div\">\n            {strategy.name} <small style={{ fontSize: '1rem'}}>{`(${strategy.cost})`}</small>\n          </Typography>\n        }\n      />\n      <CardContent>\n        {!!strategy.flavor && (\n          <>\n            <i className=\"strategy-flavor\">{strategy.flavor}</i>\n            <Divider />\n          </>\n        )}\n        <div className=\"strategy-description\">\n          <ReactMarkdown\n            children={strategy.description}\n            className=\"rule-text\"\n          />\n        </div>\n        {!!strategy.source && (\n          <>\n            <Divider />\n            <i className=\"strategy-source\">{strategy.source}</i>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","import {\n  Box, Typography\n} from \"@mui/material\";\nimport { StrategyCard } from \"components/roster/strategy-card\";\nimport { get, groupBy, sortBy } from \"lodash\";\nimport React from \"react\";\n\nexport const Strategies = (props) => {\n  const { data, faction, nameFilter } = props;\n  const strategies = data\n    .getStrategies(faction)\n    .filter((strategy) =>\n      nameFilter\n        ? strategy.name.toLowerCase().includes(nameFilter.toLowerCase())\n        : true\n    );\n  const phases = { ...data.getRawPhases() };\n  const unitPhases = { ...groupBy(strategies, \"phase\") };\n  const phaseOrder = [...Object.keys(phases), undefined].filter(\n    (cat) => unitPhases[cat] && unitPhases[cat]\n  );\n  return (\n    <div>\n      {!strategies.length && <p>{\"No strategies found...\"}</p>}\n      {phaseOrder.map((phaseId, phaseKey) => {\n        const phaseStrategies = get(unitPhases, `[${phaseId}]`, []).map(\n          (strat) => ({ ...strat, sourceLength: strat.source.length })\n        );\n        const sortedStrategies = sortBy(phaseStrategies, [\n          \"sourceLength\",\n          \"source\",\n          \"cost\",\n        ]);\n        const phaseData = data.getPhase(phaseId);\n        return (\n          <>\n            <div key={phaseKey} className=\"no-break\">\n              <Typography\n                sx={{ my: 2 }}\n                variant=\"h4\"\n                component=\"div\"\n                align=\"center\"\n              >\n                {phaseData.name || \"Any Phase\"}\n              </Typography>\n            </div>\n            <div className=\"two-columns\">\n              {sortedStrategies.map((strategy, index) => (\n                <div key={index} className=\"no-break\">\n                  <Box sx={{ mb: 2 }}>\n                    <StrategyCard faction={faction} strategy={strategy} />\n                  </Box>\n                </div>\n              ))}\n            </div>\n          </>\n        );\n      })}\n    </div>\n  );\n};\n","import {\n  Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormControlLabel, Radio, RadioGroup, Table, TableBody, TableCell, TableContainer, TableHead\n} from \"@mui/material\";\nimport { StyledTableRow } from \"components/styled-table\";\nimport {\n  get\n} from \"lodash\";\nimport React, {\n  useMemo, useState\n} from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\nimport { formatRule, formatWeapon } from \"utils/format\";\n\nexport const DescriptionModal = (props) => {\n  const { hideModal, unit } = props;\n  return (\n    <>\n      <Dialog open onClose={hideModal}>\n        <DialogTitle closeButton>{unit.name}</DialogTitle>\n        <DialogContent>\n          <ReactMarkdown children={unit.background} className=\"rule-text\" />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              hideModal();\n            }}\n          >\n            Done\n          </Button>{\" \"}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const UnitDebugModal = (props) => {\n  const { hideModal, unit, data, faction } = props;\n  const { color: factionColor, secondary_color: factionSecondaryColor } =\n    faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  const textColorSecondary = factionSecondaryColor\n    ? getTextColor(hexToRgb(factionSecondaryColor))\n    : \"white\";\n  const borderColor = textColor !== \"white\" ? textColor : factionColor;\n  const thStyle = {\n    backgroundColor: factionSecondaryColor || factionColor,\n    color: factionSecondaryColor ? textColorSecondary : textColor,\n  };\n  const [modelSelection, setModelSelection] = useState(0);\n  const unitPoints = useMemo(() => {\n    return data.getUnitPoints(unit, faction);\n  }, [data, unit, faction]);\n  const unitModels = useMemo(() => {\n    return data.getModels(unit, faction);\n  }, [data, unit, faction]);\n  const selectedModels =\n    modelSelection === 0 ? unitModels : [unitModels[modelSelection - 1]];\n  return (\n    <>\n      <Dialog fullWidth maxWidth=\"md\" open onClose={hideModal}>\n        <DialogTitle>\n          {unit.name} <small>{`(${unitPoints} pts)`}</small>\n        </DialogTitle>\n        <DialogContent>\n          <FormControl>\n            <RadioGroup\n              row\n              aria-label=\"gender\"\n              name=\"row-radio-buttons-group\"\n              onChange={(event) => setModelSelection(parseInt(event.target.value))}\n              value={modelSelection}\n            >\n              {[{ name: \"All\" }, ...unitModels].map((model, index) => (\n                <FormControlLabel\n                  key={index}\n                  value={index}\n                  control={<Radio />}\n                  label={model.name}\n                />\n              ))}\n            </RadioGroup>\n          </FormControl>\n          <TableContainer sx={{ borderRadius: 1, mb: 2 }}>\n            <Table size=\"small\" style={{ borderColor: borderColor }}>\n              <TableHead>\n                <StyledTableRow style={thStyle}>\n                  <TableCell>{\"Models\"}</TableCell>\n                  <TableCell className=\"text-center\">\n                    {\"Model Points\"}\n                  </TableCell>\n                  <TableCell className=\"text-center\">{\"Rule Points\"}</TableCell>\n                  <TableCell className=\"text-center\">\n                    {\"Weapon Points\"}\n                  </TableCell>\n                  <TableCell className=\"text-center\">\n                    {\"Total Points\"}\n                  </TableCell>\n                </StyledTableRow>\n              </TableHead>\n              <TableBody>\n                {selectedModels.map((model, index) => {\n                  const modelPoints = Math.round(\n                    data.getModelTotalPoints(\n                      {\n                        ...model,\n                        rules: [...(model?.rules || []), ...(unit.rules || [])],\n                      },\n                      faction\n                    )\n                  );\n                  const baseModelPoints = Math.round(\n                    data.getModelPoints(\n                      {\n                        ...model,\n                        rules: [...(model?.rules || []), ...(unit.rules || [])],\n                      },\n                      faction\n                    )\n                  );\n                  const modelWeaponPoints = Math.round(\n                    data.getModelWeaponPoints(\n                      {\n                        ...model,\n                        rules: [...(model?.rules || []), ...(unit.rules || [])],\n                      },\n                      faction\n                    )\n                  );\n                  const modelRulePoints = Math.round(\n                    data.getModelRulePoints(\n                      {\n                        ...model,\n                        rules: [...(model?.rules || []), ...(unit.rules || [])],\n                      },\n                      faction\n                    )\n                  );\n                  return (\n                    <StyledTableRow>\n                      <TableCell>{`${model.name} x${\n                        model.min || 1\n                      }`}</TableCell>\n                      <TableCell className=\"text-center\">\n                        {baseModelPoints} pts (\n                        {Math.round((baseModelPoints / modelPoints) * 100)}\n                        %)\n                      </TableCell>\n                      <TableCell className=\"text-center\">\n                        {modelRulePoints} pts (\n                        {Math.round((modelRulePoints / modelPoints) * 100)}\n                        %)\n                      </TableCell>\n                      <TableCell className=\"text-center\">\n                        {modelWeaponPoints} pts (\n                        {Math.round((modelWeaponPoints / modelPoints) * 100)}\n                        %)\n                      </TableCell>\n                      <TableCell className=\"text-center\">\n                        {modelPoints} pts\n                      </TableCell>\n                    </StyledTableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {selectedModels.map((model, index) => {\n            const modelWeapons = get(model, \"weapons\", []);\n            const modelRules = [\n              ...get(unit, \"rules\", []),\n              ...get(model, \"rules\", []),\n            ];\n            return (\n              <>\n                {!!modelWeapons.length && (\n                  <TableContainer sx={{ borderRadius: 1, mb: 2 }}>\n                    <Table\n                      striped\n                      responsive\n                      size=\"small\"\n                      style={{ borderColor: borderColor }}\n                    >\n                      <TableHead>\n                        <StyledTableRow style={thStyle}>\n                          <TableCell>{`${model.name} Weapons`}</TableCell>\n                          <TableCell className=\"text-center\">{`Weapon Points`}</TableCell>\n                        </StyledTableRow>\n                      </TableHead>\n                      <TableBody>\n                        {modelWeapons.map((weapon) => {\n                          const weaponPointsForModel = Math.trunc(\n                            data.getWeaponCostForModel(weapon, model, faction)\n                          );\n                          const weaponName = formatWeapon(\n                            weapon,\n                            faction,\n                            data\n                          );\n                          return (\n                            <StyledTableRow>\n                              <TableCell>{weaponName}</TableCell>\n                              <TableCell className=\"text-center\">\n                                {weaponPointsForModel} pts\n                              </TableCell>\n                            </StyledTableRow>\n                          );\n                        })}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                )}\n                {!!modelRules.length && (\n                  <TableContainer sx={{ borderRadius: 1 }}>\n                    <Table\n                      striped\n                      responsive\n                      size=\"small\"\n                      style={{ borderColor: borderColor }}\n                    >\n                      <TableHead>\n                        <StyledTableRow style={thStyle}>\n                          <TableCell>{`${model.name} Rules`}</TableCell>\n                          <TableCell className=\"text-center\">\n                            {\"Rule Points\"}\n                          </TableCell>\n                        </StyledTableRow>\n                      </TableHead>\n                      <TableBody>\n                        {modelRules.map((rule) => {\n                          const rulePointsForModel = Math.trunc(\n                            data.getRuleCostForModel(rule, model, faction)\n                          );\n                          const ruleName = formatRule(rule, faction, data);\n                          return (\n                            <StyledTableRow>\n                              <TableCell>{ruleName}</TableCell>\n                              <TableCell className=\"text-center\">\n                                {rulePointsForModel} pts\n                              </TableCell>\n                            </StyledTableRow>\n                          );\n                        })}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                )}\n              </>\n            );\n          })}\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              hideModal();\n            }}\n          >\n            Done\n          </Button>{\" \"}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Button from \"@mui/material/Button\";\nimport './option-list.css';\n\nexport const OptionList = (props) => {\n  const { options, faction, toggler = true, twoColumn = true } = props;\n  const [showOptions, setShowOptions] = useState(false);\n  const { color: factionColor } = faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  const borderColor = textColor !== \"white\" ? textColor : factionColor;\n  const btnStyle = { borderColor };\n\n  const renderOptionList = (option) => {\n    if (!option.list) {\n      return null;\n    }\n    if (option.list.length === 1) {\n      return ` ${option.list[0].text}`;\n    }\n    return (\n      <ul className=\"optionSubUl\">\n        {!!option.list &&\n          option.list.map((opt, index) => <li key={index}>{opt.text}</li>)}\n      </ul>\n    );\n  };\n\n  if (!options || !options.length) {\n    return null;\n  }\n  return (\n    <div>\n      {!!toggler && (\n        <div className=\"text-center\" style={{ marginBottom: \"0.5rem\" }}>\n          <Button\n            sx={{ color: 'inherit', textTransform: 'none' }}\n            size=\"small\"\n            fullWidth\n            variant=\"outlined\"\n            block\n            style={btnStyle}\n            onClick={() => setShowOptions(!showOptions)}\n          >\n            {showOptions ? \"Hide\" : \"Unit Options\"}\n          </Button>\n        </div>\n      )}\n      <Collapse in={!toggler || showOptions}>\n        <div>\n          <div className={twoColumn ? \"two-columns\" : \"\"}>\n            <ul className=\"optionUl\">\n              {options.map((option) => {\n                return (\n                  <div className=\"no-break\">\n                    <li>\n                      <div className=\"no-break\">\n                        {option.option || option}\n                        {renderOptionList(option)}\n                      </div>\n                    </li>\n                  </div>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </Collapse>\n    </div>\n  );\n};\n","import Button from \"@mui/material/Button\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport { OptionList } from \"components/roster/option-list\";\nimport { StyledTableRow } from \"components/styled-table\";\nimport { isNumber } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\nimport { formatModel } from \"utils/format\";\n\nexport const UnitStats = (props) => {\n  const { data, unit, faction, toggler, models, options, perks, setbacks, powerSpecialty } =\n    props;\n  const [showOptions, setShowOptions] = useState(false);\n  const { color: factionColor, secondary_color: factionSecondaryColor } =\n    faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  const textColorSecondary = factionSecondaryColor\n    ? getTextColor(hexToRgb(factionSecondaryColor))\n    : \"white\";\n  const borderColor = textColor !== \"white\" ? textColor : factionColor;\n  const thStyle = {\n    backgroundColor: factionSecondaryColor || factionColor,\n    color: factionSecondaryColor ? textColorSecondary : textColor,\n  };\n  const btnStyle = { borderColor };\n  const unitModels = (models ? models : data.getModels(unit, faction)).filter(\n    (model) =>\n      !(model.shoot === \"-\" && model.fight === \"-\" && model.save === \"-\")\n  );\n  const perkString =\n    perks && perks.length\n      ? `${perks.length > 1 ? \"perks\" : \"the perk\"} (${perks\n        .map((perk) => perk.name)\n        .join(\", \")})`\n      : \"\";\n  const setbackString =\n    setbacks && setbacks.length\n      ? `${setbacks.length > 1 ? \"injuries\" : \"the injury\"} (${setbacks\n        .map((setback) => setback.name)\n        .join(\", \")})`\n      : \"\";\n  const combinedString = [perkString, setbackString]\n    .filter((str) => str.length)\n    .join(\" and \");\n  const unitPowerSpecialty = powerSpecialty;\n  const renderAdditionalModels = (unit, faction) => {\n    return (\n      <ul className=\"ul-indent\" style={{ marginBottom: 0, marginTop: 0 }}>\n        {(unit.models || [])\n          .filter((model) => model.min > 0)\n          .map((model) => formatModel(model, unit, faction, data))\n          .map((modelString) => (\n            <li>{modelString}</li>\n          ))}\n      </ul>\n    );\n  };\n  if (!unit) {\n    return null;\n  }\n  return (\n    <div>\n      {!!toggler && (\n        <div align=\"center\" style={{ padding: \"0.5rem 0px\" }}>\n          <Button\n            variant=\"outline-primary\"\n            size=\"sm\"\n            style={btnStyle}\n            block\n            onClick={() => setShowOptions(!showOptions)}\n          >\n            {showOptions ? \"Hide\" : \"Unit Stats\"}\n          </Button>\n        </div>\n      )}\n      <Collapse in={!toggler || showOptions}>\n        <div>\n          <>{renderAdditionalModels(unit, faction)}</>\n          <div>\n            {!!options && (\n              <OptionList\n                twoColumn={false}\n                faction={faction}\n                options={options}\n                toggler={false}\n              />\n            )}\n          </div>\n          {!!unitPowerSpecialty && <div style={{ marginBottom: '0.5rem' }}><ul className=\"optionUl\">{!!unitPowerSpecialty && <li>The unit has the \"{unitPowerSpecialty}\" Power specialty</li>}</ul></div>}\n          <div style={{ marginBottom: \"0.5rem\" }}>\n            <ul className=\"optionUl\">\n              {!!combinedString && <li>The unit has {combinedString}</li>}\n            </ul>\n          </div>\n          {!!unitModels.length && (\n            <>\n              <TableContainer sx={{ borderRadius: 1 }}>\n                <Table size=\"small\" aria-label=\"simple table\" style={{ padding: 0 }}>\n                  <TableHead>\n                    <StyledTableRow style={thStyle}>\n                      <TableCell>{\"Model\"}</TableCell>\n                      <TableCell align=\"center\">{\"Mov\"}</TableCell>\n                      <TableCell align=\"center\">{\"Acc\"}</TableCell>\n                      <TableCell align=\"center\">{\"Str\"}</TableCell>\n                      <TableCell align=\"center\">{\"Sav\"}</TableCell>\n                      <TableCell align=\"center\">{\"Init\"}</TableCell>\n                      <TableCell align=\"center\">{\"Co\"}</TableCell>\n                    </StyledTableRow>\n                  </TableHead>\n                  <TableBody>\n                    {unitModels.map((model) => (\n                      <StyledTableRow>\n                        <TableCell>{model.name}</TableCell>\n                        <TableCell align=\"center\">\n                          {`${isNumber(model.movement)\n                              ? `${model.movement}\"`\n                              : model.movement\n                            }`}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {`${!!model.shoot ? `${model.shoot}` : \"-\"}`}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {`${!!model.fight ? `${model.fight}` : \"-\"}`}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {`${!!model.defense ? `${model.defense}` : \"-\"}`}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {`${!!model.reflexes ? `${model.reflexes}` : \"-\"}`}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {`${!!model.courage ? `${model.courage}` : \"-\"}`}\n                        </TableCell>\n                      </StyledTableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </>\n          )}\n        </div>\n      </Collapse>\n    </div>\n  );\n};\n","import {\n  faBook,\n  faBug\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport {\n  Card, CardContent, CardHeader, Divider, IconButton, ListItemIcon,\n  ListItemText,\n  Menu, MenuItem, Typography\n} from \"@mui/material\";\nimport { Dropdown } from \"components/dropdown\";\nimport { DescriptionModal, UnitDebugModal } from \"components/roster/modals\";\nimport { OptionList } from \"components/roster/option-list\";\nimport { RuleList } from \"components/roster/rule-list\";\nimport { UnitStats } from \"components/roster/unit-stats\";\nimport { WeaponList } from \"components/roster/weapon-list\";\nimport { useModal } from \"hooks\";\nimport { get, uniq } from \"lodash\";\nimport React, { useMemo } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\nimport { formatLevel } from \"utils/format\";\n\n\n\nexport const UnitCard = (props) => {\n  const {\n    unit,\n    data,\n    faction,\n    subfactionId = \"none\",\n    showOptions = true,\n    unitOptions,\n    points,\n    weapons,\n    rules,\n    weaponRules,\n    models,\n    embeddedOptions = false,\n    toggler: toggle = true,\n    focusView = true,\n    perks,\n    level,\n    setbacks,\n    showContext = false,\n    userPrefs,\n    powerSpecialty,\n    printMode\n  } = props;\n  const toggler = !printMode && toggle;\n  const { color: factionColor } = faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  const borderColor = textColor !== \"white\" ? textColor : factionColor;\n  const thStyle = {\n    backgroundColor: factionColor || \"#376f8c\",\n    color: textColor,\n    borderColor,\n  };\n  const unitPoints = useMemo(() => {\n    return points ? points : data.getUnitPoints(unit, faction);\n  }, [points, data, unit, faction]);\n  const unitWeapons = weapons ? weapons : data.getWeapons(unit, faction) || [];\n  const unitRules = rules ? rules : data.getModelRules([unit], faction);\n  const weaponRuleList = weaponRules\n    ? weaponRules\n    : data.getWeaponRules([unit], faction);\n  const unitSubfactions = focusView\n    ? [\n      subfactionId !== \"none\"\n        ? `${{ ...data.getSubfaction(faction.id, subfactionId) }.name || \"No\"\n        } Focus`\n        : \"\",\n    ].filter((name) => !!name)\n    : uniq(\n      get(unit, \"subfactions\", [])\n        .map((subfactionId) => data.getSubfaction(faction.id, subfactionId))\n        .map((subfac) => `${subfac.name || \"No\"} Focus`)\n    );\n  const unitSetbacksCount = (setbacks || []).length;\n  const [showUnitDescription, hideUnitDescription] = useModal(\n    ({ extraProps }) => (\n      <DescriptionModal\n        {...props}\n        hideModal={hideUnitDescription}\n        unit={unit}\n        {...extraProps}\n      />\n    ),\n    [unit]\n  );\n  const [showUnitDebug, hideUnitDebug] = useModal(\n    ({ extraProps }) => (\n      <UnitDebugModal\n        {...props}\n        hideModal={hideUnitDebug}\n        unit={unit}\n        data={data}\n        faction={faction}\n        {...extraProps}\n      />\n    ),\n    [unit, data, faction]\n  );\n  // const handleSearch = () => {\n  //   const query = unit.searchTerms || `${faction.name} ${unit.name}`;\n  //   const url = \"http://www.google.com/search?q=\" + query + \"&tbm=isch\";\n  //   window.open(url, \"_blank\");\n  // };\n  const renderModelRules = (rules) => {\n    if (!rules.length) {\n      return;\n    }\n    return (\n      <>\n        {(!toggler) && <Divider style={thStyle} />}\n        <div className=\"unit-specialrules\">\n          <RuleList\n            twoColumn\n            toggler={toggler}\n            faction={faction}\n            rules={rules}\n          />\n        </div>\n      </>\n    );\n  };\n  const renderModelExtraRules = (perks) => {\n    if (!perks.length) {\n      return;\n    }\n    return (\n      <>\n        <Divider style={thStyle} />\n        <div className={\"two-columns\"}>\n          {perks.map((perk) => {\n            const ruleName = `${perk.name}`;\n            const stuff = `**${ruleName}**: ${perk.description}`;\n            return (\n              <div className=\"no-break\">\n                <>\n                  <ReactMarkdown\n                    children={stuff}\n                    className=\"rule-text\"\n                  />\n                </>\n              </div>\n            );\n          })}\n        </div>\n      </>\n    );\n  };\n  function renderOptions(data, unit, faction) {\n    let options = unitOptions\n      ? unitOptions\n      : data.getOptionsList(unit, faction);\n    if (!options.length) {\n      return;\n    }\n    return (\n      <div style={{ marginBottom: \"0.5em\" }}>\n        <OptionList faction={faction} options={options} />\n      </div>\n    );\n  }\n\n  const getExtraActions = () => {\n    if (showContext && (unit.background || !!userPrefs.developerMode)) {\n      return (\n        <Dropdown>\n          {({ handleClose, open, handleOpen, anchorElement }) => (\n            <>\n              <IconButton onClick={handleOpen} sx={{ color: 'inherit' }}>\n                <MoreVertIcon />\n              </IconButton>\n              <Menu\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"right\",\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                anchorEl={anchorElement}\n                id=\"basic-menu\"\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  dense: true,\n                  onClick: handleClose,\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                {!!unit.background && (\n                  <MenuItem onClick={showUnitDescription}>\n                    <ListItemIcon>\n                      <FontAwesomeIcon icon={faBook} />\n                    </ListItemIcon>\n                    <ListItemText>Read More</ListItemText>\n                  </MenuItem>\n                )}\n                {!!userPrefs.developerMode && (\n                  <MenuItem onClick={showUnitDebug}>\n                    <ListItemIcon>\n                      <FontAwesomeIcon icon={faBug} />\n                    </ListItemIcon>\n                    <ListItemText>Debug Unit</ListItemText>\n                  </MenuItem>\n                )}\n                {/* <Dropdown.Item onClick={handleSearch}><FontAwesomeIcon icon={faSearch} /> Find Models</Dropdown.Item> */}\n              </Menu>\n            </>\n          )}\n        </Dropdown>\n      );\n    } else {\n      return <></>;\n    }\n  };\n  return (\n    <Card\n      className=\"force-print no-page-break\"\n      sx={{\n        border: `2px solid ${factionColor}`,\n      }}\n    >\n      <CardHeader\n        sx={{ backgroundColor: factionColor, color: textColor, py: 1.5 }}\n        title={\n          <>\n            <Typography variant=\"h5\">\n              <span style={{ marginRight: \"5px\" }}>{unit.customName || unit.name}</span>\n              <small style={{ fontSize: '1rem' }}>{`(${unitPoints}pts)`}</small>\n              <span\n                style={{ marginLeft: \"5px\" }}\n                className=\"badge badge-success\"\n              >\n                {level ? `${formatLevel(level)}` : \"\"}\n              </span>\n              <span\n                style={{ marginLeft: \"5px\" }}\n                className=\"badge badge-danger\"\n              >\n                {unitSetbacksCount > 0\n                  ? `${unitSetbacksCount} ${unitSetbacksCount > 1 ? \"Injuries\" : \"Injury\"\n                  }`\n                  : \"\"}\n              </span>\n            </Typography>\n          </>\n        }\n        action={getExtraActions()}\n      />\n      <CardContent>\n        {(!!unit.description && !printMode) && (\n          <>\n            <Typography\n              className=\"unit-description\"\n              style={{ marginBottom: \"0.5em\" }}\n            >\n              <i>{unit.description}</i>\n            </Typography>\n            <Divider style={thStyle} />\n          </>\n        )}\n        <div style={{ marginBottom: \"0.5em\" }} className=\"unit-stats\">\n          <UnitStats\n            powerSpecialty={powerSpecialty}\n            models={models}\n            unit={unit}\n            faction={faction}\n            data={data}\n            perks={perks}\n            setbacks={setbacks}\n            options={embeddedOptions ? unitOptions : undefined}\n          />\n        </div>\n        {!!showOptions && renderOptions(data, unit, faction)}\n        {!!unitWeapons.length && !printMode && (\n          <div style={{ marginBottom: \"0.5em\" }} className=\"unit-weapons\">\n            <WeaponList\n              toggler={toggler}\n              weapons={unitWeapons}\n              faction={faction}\n              data={data}\n              rules={weaponRuleList}\n            />\n          </div>\n        )}\n        {!printMode && <>{renderModelRules(unitRules)}</>}\n        {renderModelExtraRules([...(perks || []), ...(setbacks || [])])}\n        <Divider style={thStyle} />\n        <span className=\"unit-keywords\">\n          <b>Keywords: </b>\n          {[\n            faction.name,\n            ...unitSubfactions,\n            ...(unit.keywords || [\"Infantry\"]),\n          ].join(\", \")}\n        </span>\n      </CardContent>\n    </Card>\n  );\n};\n","import { Box, Pagination, Typography } from '@mui/material';\nimport { UnitCard } from 'components/roster/unit-card';\nimport { findIndex, get, groupBy, intersection, omit, sortBy } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport './roster.css';\n\nexport const Units = React.memo((props) => {\n  const { data, faction, nameFilter, unitFilter, filterByFocus=true, subfactionId=\"none\", userPrefs } = props;\n  const [pinnedUnits, setPinnedUnits] = useState({});\n  const [currentPage, setCurrentPage] = useState(0);\n  const PAGE_SIZE = 20;\n  const categories = { pinned_units: {name: \"Pinned Units\"}, ...data.getRawCategories()};\n  const unitsUn = data.getUnits(faction);\n  const unitsFiltered = unitsUn.filter(unit => nameFilter ? get(unit, 'name', '').toLowerCase().includes(nameFilter.toLowerCase()) : true)\n  .filter((unit) => {\n    return unitFilter.keywords && unitFilter.keywords.size ? intersection(Array.from(unitFilter.keywords), (unit.keywords || [])).length === unitFilter.keywords.size : true;\n  })\n  .filter((unit) => {\n    return unitFilter.categories && unitFilter.categories.size ? unitFilter.categories.has(unit.category) : true;\n  });\n  const numPages = Math.ceil(unitsFiltered.length / PAGE_SIZE);\n  const sortOrder = ['pinned_units', ...Object.keys(categories)];\n  const unitsSorted = sortBy(unitsFiltered, (unit) => data.getUnitPoints(unit, faction));\n  const units = unitsSorted.sort((first, second) => {\n    const firstIndex = findIndex(sortOrder, (o) => o === first.category);\n    const secondIndex = findIndex(sortOrder, (o) => o === second.category);\n    return firstIndex - secondIndex;\n  }).slice(currentPage * PAGE_SIZE, (currentPage * PAGE_SIZE) + PAGE_SIZE);\n  useEffect(() => {\n    setCurrentPage(0);\n  }, [unitsFiltered.length]);\n  const unitCategories = { pinned_units: [], ...groupBy(units, \"category\")};\n  const categoryOrder = ['pinned_units', ...Object.keys(categories), undefined].filter((cat) => unitCategories[cat] && unitCategories[cat].filter((unit) => !pinnedUnits[unit.id]).length);\n  const handlePinUnit = (unit) => {\n    const unitId = unit.id;\n    if (pinnedUnits[unitId]) {\n      setPinnedUnits({\n        ...omit(pinnedUnits, unitId),\n      });\n    } else {\n      setPinnedUnits({\n        ...pinnedUnits,\n        [unitId]: unit\n      });\n    }\n  }\n  const scrollWithOffset = () => {\n    const yCoordinate = 0;\n    const yOffset = 0; \n    window.scrollTo({ top: yCoordinate + yOffset });\n  }\n  const changePage = (event, number) => {\n    scrollWithOffset();\n    setCurrentPage(number - 1);\n  }\n  return (\n    <div>\n      {!units.length && <p>{'No units found...'}</p>}\n      {categoryOrder.map((category, catIndex) => {\n        const categoryUnits = get(unitCategories, `[${category}]`, []).filter((unit) => !pinnedUnits[unit.id]);\n        const categoryData = data.getCategory(category);\n        return (\n          <div key={catIndex}>\n            <Typography sx={{ my: 2 }} variant=\"h4\" component=\"div\" align=\"center\">\n              {categoryData.name || \"No Category\"}\n            </Typography>\n            {categoryUnits.map((unit, index) => {\n              return (\n                <div\n                  key={index}\n                >\n                  <Box\n                    className=\"unit-card-wrapper\"\n                    sx={{ mb: 2 }}\n                  >\n                    <UnitCard\n                      showContext\n                      faction={faction}\n                      subfactionId={subfactionId}\n                      focusView={filterByFocus}\n                      data={data}\n                      userPrefs={userPrefs}\n                      unit={unit}\n                      onPinUnit={handlePinUnit}\n                      pinned={!!pinnedUnits[unit.id]}\n                    />\n                  </Box>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n      {numPages > 1 && <Box sx={{ mx: 'auto', display: 'flex', textAlign: 'center', alignItems: 'center', justifyContent: 'center' }}>\n        <Pagination count={numPages} page={currentPage + 1} onChange={changePage} />\n      </Box>}\n    </div>\n  );\n});","import { Card, CardContent, CardHeader, Typography } from \"@mui/material\";\nimport { WeaponList } from \"components/roster/weapon-list\";\nimport { sortBy } from \"lodash\";\nimport React from \"react\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\n\nexport const Weapons = React.memo((props) => {\n  const { data, faction, nameFilter } = props;\n  const { color: factionColor } = faction;\n  const textColor = factionColor\n    ? getTextColor(hexToRgb(factionColor))\n    : \"white\";\n  const weapons = data\n    .getAllWeapons(faction)\n    .filter((strategy) =>\n      nameFilter\n        ? (strategy.name || \"\").toLowerCase().includes(nameFilter.toLowerCase())\n        : true\n    );\n  const weaponsSorted = sortBy(weapons, \"name\");\n  return (\n    <div>\n      <Typography sx={{ my: 2 }} variant=\"h4\" component=\"div\" align=\"center\">\n        Weapons\n      </Typography>\n      {!weapons.length && <p>{\"No weapons found...\"}</p>}\n      {!!weapons.length && (\n        <div className=\"two-columns\">\n          {weaponsSorted.map((rule, index) => (\n            <div style={{ breakInside: \"avoid-column\" }} key={index}>\n              <Card\n                className=\"no-break\"\n                sx={{\n                  border: `2px solid ${factionColor}`,\n                  mb: 2,\n                }}\n              >\n                <CardHeader\n                  sx={{\n                    backgroundColor: factionColor,\n                    color: textColor,\n                    py: 1,\n                  }}\n                  title={\n                    <Typography variant=\"h6\" component=\"div\">\n                      {rule.name}\n                    </Typography>\n                  }\n                />\n                <CardContent>\n                  {!!rule.description && (\n                    <>\n                      <i>{rule.description}</i>\n                      <hr />\n                    </>\n                  )}\n                  <WeaponList\n                    twoColumns={false}\n                    faction={faction}\n                    data={data}\n                    weapons={[rule]}\n                    rules={data.getAllWeaponRules([rule], faction)}\n                  />\n                </CardContent>\n              </Card>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n});\n","import {\n  faExclamationCircle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport UploadIcon from '@mui/icons-material/Upload';\nimport { Box, Typography } from \"@mui/material\";\nimport Container from \"@mui/material/Container\";\nimport Popover from \"@mui/material/Popover\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Tab from \"@mui/material/Tab\";\nimport Tabs from \"@mui/material/Tabs\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport CustomCircularProgress from \"components/CustomCircularProgress\";\nimport { Dropdown } from \"components/dropdown\";\nimport { DataContext } from \"hooks\";\nimport {\n  get, isNil, set\n} from \"lodash\";\nimport { useSnackbar } from \"notistack\";\nimport React, {\n  useContext, useEffect, useState\n} from \"react\";\nimport { useParams } from \"react-router\";\nimport Tour from \"reactour\";\nimport { DataAPI, mergeGlobalData } from \"utils/data\";\nimport { readFileContent } from \"utils/files\";\nimport { Focus } from \"./focus\";\nimport { Organization } from \"./organization\";\nimport { Overview } from \"./overview\";\nimport { Powers } from \"./powers\";\nimport { Relics } from \"./relics\";\nimport { Rules } from \"./rules\";\nimport { Strategies } from \"./strategies\";\nimport { Units } from \"./units\";\nimport { Weapons } from \"./weapons\";\n\nconst allSteps = [];\nconst steps = [\n  [\n    {\n      selector: \"#tab-0\",\n      content:\n        \"This is the module overview. This gives you background information and an overview of the game module.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-1\",\n      content:\n        \"This is the forces list. It contains information about how to organize your units and what limits exist.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".org-card:first-of-type\",\n      content:\n        \"This is a force. It describes the minimum and maximum of each unit type allowed in it. It may also cost strategy points per round as described with the (number) after the name.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-2\",\n      content:\n        \"This is the units list. Units are grouped into categories which have limits to how many are allowed to be taken depending on the force type selected.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \"#unit-filter\",\n      content:\n        \"Pressing this button will open the unit filter allowing you to filter units based on various properties.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".unit-card-wrapper:first-of-type\",\n      content:\n        \"This is a unit. It has several pieces to it which will be described later.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".unit-name:first-of-type\",\n      content:\n        \"This is the unit's name and points cost to include in your force.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".unit-description:first-of-type\",\n      content:\n        \"This is the unit's description. This can describe what a unit is used for or any background flavor on the unit.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".unit-stats:first-of-type\",\n      content:\n        \"This is the unit's stats. This contains a list of any models that start in the unit and their equipment and special rules.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".unit-options:first-of-type\",\n      content:\n        \"This is the unit's options. Clicking this button will show any options the unit has such as adding new rules or exchanging weapons.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".unit-weapons:first-of-type\",\n      content:\n        \"This is the unit's weapons. Clicking this button will show the list of weapons a unit could potentially have and all related stats and special rules on those weapons.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".unit-specialrules:first-of-type\",\n      content:\n        \"This is the unit's special rules. Clicking this button will show all special rules text for any rules that could be on the models in this unit.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".unit-keywords:first-of-type\",\n      content:\n        \"This is the unit's keywords. These are typically used to categorize units for being affected by certain special rules or abilities.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-3\",\n      content:\n        \"This is the powers list. It contains information about the powers available to this faction.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".power-card:first-of-type\",\n      content:\n        \"This is a power. Powers are unique abilities that can be used by certain units in the game.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".power-name:first-of-type\",\n      content:\n        \"This is the power's name. It also contains the charge level of the power required to use it.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".power-flavor:first-of-type\",\n      content:\n        \"This is the power's flavor text. It also contains a brief amount of flavor about the power.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".power-description:first-of-type\",\n      content:\n        \"This is the power's description text. It contains information about when the power can be used and any effects when used.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-4\",\n      content:\n        \"This is the strategies list. It contains information about the strategies available to this faction. They are grouped into the phase they can be used in.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".strategy-card:first-of-type\",\n      content:\n        \"This is a strategy. Strategies are unique abilities that can be activated throughout the game.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".strategy-name:first-of-type\",\n      content:\n        \"This is the strategy's name. It also contains the cost in strategy points required to use it.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".strategy-flavor:first-of-type\",\n      content:\n        \"This is the strategy's flavor text. It also contains a brief amount of flavor about the strategy.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".strategy-description:first-of-type\",\n      content:\n        \"This is the strategy's description text. It contains information about when the strategy can be used and any effects when used.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-5\",\n      content:\n        \"This is the legends list. It contains information about the legends available to this faction. They are grouped into their type.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".legend-card:first-of-type\",\n      content:\n        \"This is a legend. Legends are unique and legendary items or individuals which can be taken in limited quantities.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".legend-name:first-of-type\",\n      content:\n        \"This is the legend's name. It also contains the point cost required to take it.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".legend-flavor:first-of-type\",\n      content:\n        \"This is the legend's flavor text. It also contains a brief amount of flavor about the legend.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".legend-description:first-of-type\",\n      content:\n        \"This is the legend's description text. It contains information about when the strategy can be used and any effects when used.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".legend-rules-text:first-of-type\",\n      content:\n        \"This is the legend's rule text. It contains any rules or weapon profiles related to the legend.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-6\",\n      content:\n        \"This is the focus list. It contains information about the focuses available to this faction.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".focus-card:first-of-type\",\n      content:\n        \"This is a focus. Focuses are sub-factions of a particular faction and allow you to focus on a particular style of play.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".focus-select:first-of-type\",\n      content:\n        \"Clicking this button will switch the faction display to this focus.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-7\",\n      content:\n        \"This is the weapon list. It contains information about the weapons available to this faction.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".weapon-card:first-of-type\",\n      content:\n        \"This is a weapon. Weapons have several stats such as range and attacks described further in the core rules.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-8\",\n      content:\n        \"This is the rule list. It contains information about the rules relevant to this faction.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".rule-card:first-of-type\",\n      content:\n        \"This is a rule. It has rule text which describes when it is active.\",\n      stepInteraction: false,\n    },\n  ],\n];\n\nexport default React.memo((props) => {\n  const { factionName, gameName } = useParams();\n  const [\n    {\n      data: someData,\n      coreData,\n      fetchFaction,\n      setData,\n      isLoading,\n      refreshFaction,\n      appState,\n      setAppState,\n      userPrefs\n    },\n  ] = useContext(DataContext);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const nameFilter = appState?.searchText;\n  const [isTourOpen, setIsTourOpen] = useState(false);\n  const [activeTab, setActiveTab] = useState(get(appState, \"rosterTab\", 2));\n  const [filterByFocus, ] = useState(true);\n  const [subfaction, setSubfaction] = useState(\"none\");\n  const [retryCount, setRetryCount] = useState(0);\n  const game = get(someData, `gameData.games[${gameName}]`, {});\n  const globalData = mergeGlobalData(game, someData);\n  const data = DataAPI(game, globalData);\n  const faction = filterByFocus\n    ? data.getFactionWithSubfaction(factionName, subfaction)\n    : data.getFaction(factionName);\n  const buyLinks = get(faction, \"buyLinks\", []);\n  const rawFaction = data.getRawFaction(factionName);\n  const DEFAULT_FILTER = {\n    keywords: new Set(),\n    categories: new Set(),\n  };\n  const [unitFilter, ] = useState(DEFAULT_FILTER);\n  const powers =\n    !isNil(rawFaction.powers) && Object.keys(rawFaction.powers).length;\n  const subfactionData = data.getSubfaction(factionName, subfaction);\n  const { enqueueSnackbar } = useSnackbar();\n  const fileDialog = React.useRef();\n  const subfactions = Object.values(faction.subfactions || []);\n  useEffect(() => {\n    if (\n      !get(\n        someData,\n        `gameData.games[${gameName}].factions[${factionName}].units`\n      ) &&\n      !isLoading &&\n      retryCount < 5\n    ) {\n      setRetryCount(retryCount + 1);\n      fetchFaction(gameName, factionName);\n    }\n  }, [coreData, factionName, fetchFaction, gameName, isLoading, retryCount, someData]);\n  const handleClick = () => {\n    fileDialog.current.click();\n  };\n  const setCustomData = (passedData) => {\n    const newGameData = {\n      ...coreData,\n      customData: {\n        ...get(someData, \"customData\", {}),\n        ...passedData,\n      },\n    };\n    setData(newGameData);\n  };\n  const refreshFactionData = () => {\n    refreshFaction(gameName, factionName)\n      .then(() => {\n        enqueueSnackbar(`Faction data successfully updated.`, {\n          appearance: \"success\",\n        });\n      })\n      .catch((error) => {\n        enqueueSnackbar(`Faction failed to fetch factions. ${error.message}`, {\n          appearance: \"error\",\n        });\n      });\n  };\n  const uploadFaction = (event) => {\n    event.preventDefault();\n    const file = get(event, \"target.files[0]\");\n    if (file) {\n      readFileContent(file)\n        .then((content) => {\n          let armyObject = {};\n          try {\n            armyObject = JSON.parse(content);\n          } catch (e) {\n            return Promise.reject(e);\n          }\n          if (armyObject.games) {\n            const newArmyData = {\n              ...armyObject,\n            };\n            setCustomData(newArmyData);\n            enqueueSnackbar(`Core data successfully imported.`, {\n              appearance: \"success\",\n            });\n          } else if (armyObject.factions) {\n            const newData = set(\n              { ...get(someData, \"customData\", {}) },\n              `games[${gameName}]`,\n              {\n                ...get(someData, `customData.games[${gameName}]`),\n                ...armyObject,\n              }\n            );\n            setCustomData(newData);\n            enqueueSnackbar(`Core data successfully imported.`, {\n              appearance: \"success\",\n            });\n          } else {\n            // const hasArmy = nope.factions[armyObject.id];\n            const factionId = faction.id;\n            const newData = set(\n              { ...get(someData, \"customData\", {}) },\n              `games[${gameName}].factions[${factionId}]`,\n              {\n                ...get(\n                  someData,\n                  `customData.games[${gameName}].factions[${factionId}]`,\n                  {}\n                ),\n                ...armyObject,\n                id: faction.id,\n                color: faction.color,\n              }\n            );\n            setCustomData(newData);\n            enqueueSnackbar(`${armyObject.name} successfully imported.`, {\n              appearance: \"success\",\n            });\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(`Faction failed to import. ${error.message}`, {\n            appearance: \"error\",\n          });\n        });\n    }\n    fileDialog.current.value = null;\n  };\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n    setAppState({ ...appState, rosterTab: tab });\n  };\n  const handleChange = (event, newValue) => {\n    toggle(newValue);\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n  React.useEffect(() => {\n    setAppState({\n      enableSearch: true,\n      contextActions: [\n        {\n          name: 'Refresh',\n          icon: <RefreshIcon />,\n          onClick: () => refreshFactionData()\n        },\n        ...(!!userPrefs.developerMode ? [\n          {\n            name: 'Import',\n            icon: <UploadIcon />,\n            onClick: () => handleClick()\n          }\n        ] : []),\n        ...(!!game.reportUrl ? [\n          {\n            name: 'Report',\n            icon: <BugReportIcon />,\n            onClick: () => window.open(game.reportUrl, \"_blank\")\n          }\n        ] : [])\n      ]\n    })\n    return () => {\n      setAppState({\n        contextActions: []\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ userPrefs.developerMode ]);\n  //const [dialOpen, setDialOpen] = React.useState(false);\n  if (\n    !someData ||\n    !faction ||\n    !faction.name ||\n    !get(someData, `gameData.games[${gameName}].factions[${factionName}].units`)\n  ) {\n    return (\n      <Box sx={{ textAlign: \"center\" }}>\n        <CustomCircularProgress />\n        <input\n          id=\"file-input\"\n          type=\"file\"\n          name=\"name\"\n          multiple\n          ref={fileDialog}\n          onChange={uploadFaction}\n          style={{ height: \"0\", overflow: \"hidden\", display: \"none\" }}\n        />\n      </Box>\n    );\n  }\n  let TABS = {\n    Overview: (\n      <Overview data={data} faction={faction} subfaction={subfactionData} />\n    ),\n    Forces: (\n      <Organization\n        data={data}\n        faction={faction}\n        subfaction={subfactionData}\n        nameFilter={nameFilter}\n      />\n    ),\n    Units: (\n      <Units\n        data={data}\n        faction={faction}\n        subfactionId={subfaction}\n        setData={setData}\n        rawData={someData}\n        userPrefs={userPrefs}\n        nameFilter={nameFilter}\n        unitFilter={unitFilter}\n        filterByFocus={filterByFocus}\n      />\n    ),\n    Powers: <Powers data={data} faction={faction} nameFilter={nameFilter} />,\n    Strategies: (\n      <Strategies data={data} faction={faction} nameFilter={nameFilter} />\n    ),\n    Legends: <Relics data={data} faction={faction} nameFilter={nameFilter} />,\n    Focus: (\n      <Focus\n        data={data}\n        faction={faction}\n        nameFilter={nameFilter}\n        subfactions={subfactions}\n        setSubfaction={setSubfaction}\n        subfaction={subfaction}\n      />\n    ),\n    Weapons: <Weapons data={data} faction={faction} nameFilter={nameFilter} />,\n    Rules: <Rules data={data} faction={faction} nameFilter={nameFilter} />,\n  };\n  const isModified = Object.values(\n    get(someData, `customData.games[${gameName}].factions[${factionName}]`, {})\n  ).length;\n  const hiddenTabs = new Set([]);\n  if (!powers) {\n    hiddenTabs.add(\"Powers\");\n  }\n  if (!subfactions.length) {\n    hiddenTabs.add(\"Focus\");\n  }\n  if (!buyLinks.length) {\n    hiddenTabs.add(\"Buy\");\n  }\n  return (\n    <Container>\n      <Typography variant=\"h3\" align=\"center\" sx={{ mb: 2 }}>\n        {!!isModified && (\n          <Dropdown>\n            {({ handleClose, open, handleOpen, anchorElement }) => (\n              <>\n                <span\n                  aria-haspopup=\"true\"\n                  onMouseEnter={handleOpen}\n                  onMouseLeave={handleClose} style={{ marginRight: '5px' }}>\n                  <FontAwesomeIcon\n                    size=\"sm\"\n                    icon={faExclamationCircle}\n                  />\n                </span>\n                <Popover\n                  variant=\"warning\"\n                  id=\"mouse-over-popover\"\n                  sx={{\n                    pointerEvents: 'none',\n                  }}\n                  open={open}\n                  anchorEl={anchorElement}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                  }}\n                  transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                  }}\n                  onClose={handleClose}\n                  disableRestoreFocus\n                >\n                  <Typography sx={{ p: 1 }}>Warning: Data Is Modified Locally</Typography>\n                </Popover>\n              </>\n            )}\n          </Dropdown>\n        )}\n        {/* {!!faction.author && (\n          <Dropdown>\n            {({ handleClose, open, handleOpen, anchorElement }) => (\n              <>\n                <IconButton\n                  aria-haspopup=\"true\"\n                  onMouseEnter={handleOpen}\n                  onMouseLeave={handleClose} style={{ marginLeft: '5px' }}>\n                  <PersonIcon />\n                </IconButton>\n                <Popover\n                  variant=\"warning\"\n                  id=\"mouse-over-popover\"\n                  sx={{\n                    pointerEvents: 'none',\n                  }}\n                  open={open}\n                  anchorEl={anchorElement}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                  }}\n                  transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                  }}\n                  onClose={handleClose}\n                  disableRestoreFocus\n                >\n                  <Typography sx={{ p: 1 }}>{`Written by ${faction.author}`}</Typography>\n                </Popover>\n              </>\n            )}\n          </Dropdown>\n        )} */}\n        {`${faction.name}${subfactionData.name ? ` - ${subfactionData.name}` : \"\"\n          }`}\n        <small style={{ fontSize: '1rem' }}> {faction.version ? `(${faction.version})` : \"\"}</small>\n      </Typography>\n      <Box\n        className=\"sticky\"\n        sx={{\n          width: \"100%\",\n          bgcolor: \"background.paper\",\n          top: isMobile ? \"56px\" : \"64px\",\n        }}\n      >\n        <Box sx={{ width: \"100%\", bgcolor: \"background.paper\", pb: 0 }}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              variant=\"scrollable\"\n              value={activeTab}\n              onChange={handleChange}\n              aria-label=\"The Tabs\"\n            >\n              {Object.keys(TABS).map((tab, index) => (\n                <Tab\n                  style={{ display: hiddenTabs.has(tab) ? \"none\" : \"\" }}\n                  sx={{ textTransform: \"none\" }}\n                  label={tab}\n                  {...a11yProps(0)}\n                />\n              ))}\n            </Tabs>\n          </Box>\n        </Box>\n        {/* <HideOnScroll>\n          {({ show }) => (\n            <SpeedDial\n              ariaLabel=\"SpeedDial tooltip example\"\n              sx={{ position: \"fixed\", bottom: 16, right: 16 }}\n              icon={<SpeedDialIcon />}\n              onClose={(event) => {\n                if (event.type === 'click' || event.type === 'blur') {\n                  setDialOpen(false);\n                }\n              }}\n              onOpen={(event) => {\n                if (event.type === 'click') {\n                  setDialOpen(true);\n                }\n              }}\n              open={dialOpen && show}\n              hidden={!show}\n            >\n              <SpeedDialAction\n                tooltipOpen\n              FabProps={{\n                sx: {\n                  backgroundColor: theme.palette.primary.main,\n                  color: theme.palette.getContrastText(theme.palette.primary.main)\n                }\n              }}\n                tooltipTitle=\"Refresh\"\n                color=\"primary\"\n                onClick={refreshFactionData}\n                icon={<RefreshIcon />}\n              />\n              {userPrefs.developerMode && (\n                <SpeedDialAction\n                  tooltipOpen\n              FabProps={{\n                sx: {\n                  backgroundColor: theme.palette.primary.main,\n                  color: theme.palette.getContrastText(theme.palette.primary.main)\n                }\n              }}\n                  tooltipTitle=\"Import\"\n                  color=\"primary\"\n                  onClick={handleClick}\n                  icon={<UploadIcon />}\n                />\n              )}\n              {!!game.reportUrl && (\n                <SpeedDialAction\n                  tooltipOpen\n              FabProps={{\n                sx: {\n                  backgroundColor: theme.palette.primary.main,\n                  color: theme.palette.getContrastText(theme.palette.primary.main)\n                }\n              }}\n                  tooltipTitle=\"Issue\"\n                  onClick={() => window.open(game.reportUrl, \"_blank\")}\n                  icon={<BugReportIcon />}\n                />\n              )}\n              <SpeedDialAction\n                tooltipOpen\n              FabProps={{\n                sx: {\n                  backgroundColor: theme.palette.primary.main,\n                  color: theme.palette.getContrastText(theme.palette.primary.main)\n                }\n              }}\n                tooltipTitle=\"Top\"\n                color=\"primary\"\n                onClick={scrollToTop}\n                icon={<KeyboardArrowUpIcon />}\n              />\n              {!!steps[activeTab] && (\n                <SpeedDialAction\n                  tooltipOpen\n              FabProps={{\n                sx: {\n                  backgroundColor: theme.palette.primary.main,\n                  color: theme.palette.getContrastText(theme.palette.primary.main)\n                }\n              }}\n                  tooltipTitle=\"Help\"\n                  onClick={() => setIsTourOpen(true)}\n                  icon={<FontAwesomeIcon icon={faQuestion} />}\n                />\n              )}\n            </SpeedDial>\n          )}\n        </HideOnScroll> */}\n        {/* <Collapse in={showFilter}>\n          <div style={{ marginTop: \"0.5em\", marginBottom: 0 }}>\n            <Form.Label style={{ marginBottom: 0 }}>\n              <b>{`Focus:`}</b>\n            </Form.Label>\n            <Form inline>\n              <FormGroup controlId=\"focus-filter\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label={\"Filter by currently selected focus\"}\n                  title=\"Filter by focus\"\n                  style={{ marginRight: \"5px\" }}\n                  color=\"primary\"\n                  checked={filterByFocus}\n                  onChange={(event) => setFilterByFocus(!filterByFocus)}\n                />\n              </FormGroup>\n            </Form>\n            <Form.Label style={{ marginBottom: 0 }}>\n              <b>{`Categories (OR):`}</b>\n            </Form.Label>\n            <Form inline>\n              {Object.keys(categories).map((categoryKey) => {\n                const category = categories[categoryKey];\n                return (\n                  <FormGroup controlId={`category-${category.name}`}>\n                    <Form.Check\n                      type=\"checkbox\"\n                      label={category.name}\n                      title=\"Update this faction from file.\"\n                      style={{ marginRight: \"5px\" }}\n                      color=\"primary\"\n                      checked={unitFilter.categories.has(categoryKey)}\n                      onChange={(event) =>\n                        toggleCategoryFilter(event, categoryKey)\n                      }\n                    />\n                  </FormGroup>\n                );\n              })}\n            </Form>\n            <Form.Label style={{ marginBottom: 0 }}>\n              <b>{`Keywords (AND):`}</b>\n            </Form.Label>\n            <Form inline>\n              {keywords.map((keyword) => (\n                <FormGroup check inline controlId={`keyword-${keyword}`}>\n                  <Form.Check\n                    inline\n                    type=\"checkbox\"\n                    label={keyword}\n                    title=\"Update this faction from file.\"\n                    style={{ marginRight: \"5px\" }}\n                    color=\"primary\"\n                    checked={unitFilter.keywords.has(keyword)}\n                    onChange={(event) => toggleKeywordFilter(event, keyword)}\n                  />\n                </FormGroup>\n              ))}\n            </Form>\n          </div>\n        </Collapse> */}\n      </Box>\n      <div>\n        {/* {Object.values(TABS).map((pane, index) => (\n          <div\n            id={`tab-${index}`}\n            tabId={index}\n            style={{ display: activeTab === index ? \"\" : \"none\" }}\n          >\n            {pane}\n          </div>\n        ))} */}\n        {Object.values(TABS)[activeTab]}\n      </div>\n      <Tour\n        accentColor={`rgb(57, 110, 158)`}\n        className=\"tour\"\n        key={activeTab}\n        steps={[...allSteps, ...(steps[activeTab] || [])]}\n        isOpen={isTourOpen}\n        onRequestClose={() => {\n          setIsTourOpen(false);\n        }}\n        rounded={5}\n        onAfterOpen={(target) => (document.body.style.overflowY = \"hidden\")}\n        onBeforeClose={(target) => (document.body.style.overflowY = \"auto\")}\n      />\n      <input\n        id=\"file-input\"\n        type=\"file\"\n        name=\"name\"\n        multiple\n        ref={fileDialog}\n        onChange={uploadFaction}\n        style={{ height: \"0\", overflow: \"hidden\", display: \"none\" }}\n      />\n    </Container>\n  );\n});\n","import { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Button, CardActionArea,\n  CardActions, CardHeader, Grid, Typography\n} from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Popover from '@mui/material/Popover';\nimport { Dropdown } from 'components/dropdown';\nimport { get, groupBy, sortBy } from 'lodash';\nimport React from 'react';\nimport { useNavigate } from 'react-router';\nimport { getTextColor, hexToRgb } from 'utils/colors';\nimport { DataAPI } from 'utils/data';\nimport './factions.css';\n\nexport const Factions = (props) => {\n  const { game, gameName, nameFilter, deleteFaction, rawData, userPrefs } = props;\n  const navigate = useNavigate();\n  const data = DataAPI(game);\n  const alliances = data.getRawAlliances();\n  const showBeta = userPrefs.showBeta;\n  const factions = sortBy(data.getFactions(gameName).filter(unit => nameFilter ? unit.name.toLowerCase().includes(nameFilter.toLowerCase()) : true), 'name').filter((game) => showBeta ? true : game.version && Number(game.version) >= 1);\n  const unitCategories = groupBy(factions, \"alliance\");\n  const categoryOrder = [...Object.keys(alliances), undefined].filter((cat) => unitCategories[cat] && unitCategories[cat].length);\n  const goToFaction = (faction) => navigate(`/games/${gameName}/${faction.id}`);\n  if (!data) {\n    return <p>{\"Ohai\"}</p>\n  }\n  return (\n    <>\n      {categoryOrder.map((allianceKey) => {\n        const factions = get(unitCategories, `[${allianceKey}]`, []);\n        const allianceData = data.getAlliance(allianceKey);\n        return (\n          <>\n            <Typography variant=\"h4\" gutterBottom align=\"center\" sx={{ my: 2 }}>\n              {allianceData.name || \"Unaligned\"}\n            </Typography>\n            <Grid\n              container\n              spacing={{ xs: 2, md: 3 }}\n              columns={{ xs: 4, sm: 8, md: 12 }}\n            >\n              {factions.map((faction, index) => {\n                const factionColor = faction.color;\n                const textColor = factionColor\n                  ? getTextColor(hexToRgb(factionColor))\n                  : \"white\";\n                const isModified = Object.values(\n                  get(\n                    rawData,\n                    `customData.games[${gameName}].factions[${faction.id}]`,\n                    {}\n                  )\n                ).length;\n                return (\n                  <Grid item sx={{ pb: 2 }} md={4} key={index}>\n                    <Card\n                      sx={{\n                        border: `2px solid ${factionColor}`,\n                      }}\n                    >\n                      <CardActionArea onClick={() => goToFaction(faction)}>\n                        <CardHeader\n                          sx={{ backgroundColor: factionColor, color: textColor, p: 1.5 }}\n                          title={\n                            <Typography\n                              variant=\"h5\"\n                              component=\"div\"\n                              align=\"center\"\n                            >\n                              {!!isModified && (\n                                <Dropdown>\n                                  {({ handleClose, open, handleOpen, anchorElement }) => (\n                                    <>\n                                      <span\n                                        aria-haspopup=\"true\"\n                                        onMouseEnter={handleOpen}\n                                        onMouseLeave={handleClose} style={{ marginRight: '5px' }}>\n                                        <FontAwesomeIcon\n                                          icon={faExclamationCircle}\n                                        />\n                                      </span>\n                                      <Popover\n                                        variant=\"warning\"\n                                        id=\"mouse-over-popover\"\n                                        sx={{\n                                          pointerEvents: 'none',\n                                        }}\n                                        open={open}\n                                        anchorEl={anchorElement}\n                                        anchorOrigin={{\n                                          vertical: 'top',\n                                          horizontal: 'center',\n                                        }}\n                                        transformOrigin={{\n                                          vertical: 'bottom',\n                                          horizontal: 'center',\n                                        }}\n                                        onClose={handleClose}\n                                        disableRestoreFocus\n                                      >\n                                        <Typography sx={{ p: 1 }}>Warning: Data Is Modified Locally</Typography>\n                                      </Popover>\n                                    </>\n                                  )}\n                                </Dropdown>\n                              )}\n                              {faction.name}\n                              <small style={{ marginLeft: '5px', fontSize: '1rem'}}>\n                                {game.version ? `(${game.version})` : \"\"}\n                              </small>\n                            </Typography>\n                          }\n                        />\n                        {!!faction.image && (\n                          <CardMedia\n                            component=\"img\"\n                            height=\"250\"\n                            image={game.image}\n                            alt=\"green iguana\"\n                          />\n                        )}\n                        <CardContent>\n                          <Typography>\n                            {faction.description || \" \"}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                      {!faction.url && (\n                        <CardActions>\n                          <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            onClick={(event) => {\n                              event.stopPropagation();\n                              deleteFaction(game.id);\n                            }}\n                          >\n                            Delete\n                          </Button>\n                        </CardActions>\n                      )}\n                    </Card>\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </>\n        );\n      })}\n    </>\n  );\n}","import { Sync } from \"@mui/icons-material\";\nimport {\n  Button, CardHeader, Checkbox, Divider, FormControlLabel, FormGroup, Grid, Typography\n} from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { getRandomItem, getRandomItems } from \"utils/math\";\n\nexport function MissionGenerator(props) {\n  const { nameFilter, data } = props;\n  const missions = data\n    .getMissionScenarios()\n    .filter((mission) =>\n      nameFilter\n        ? mission.name.toLowerCase().includes(nameFilter.toLowerCase())\n        : true\n    );\n  const weathers = data.getMissionWeather();\n  const secondaries = data.getMissionSecondaries();\n  const [randomMission, setRandomMission] = useState(getRandomItem(missions));\n  const [randomWeather, setRandomWeather] = useState(getRandomItem(weathers));\n  const [randomSecondary, setRandomSecondary] = useState(\n    getRandomItems(secondaries, 3)\n  );\n  const [enableWeather, setEnableWeather] = useState(false);\n  const generateNewMission = () => {\n    setRandomMission(getRandomItem(missions));\n    setRandomWeather(getRandomItem(weathers));\n    setRandomSecondary(getRandomItems(secondaries, 3));\n  };\n  return (\n    <>\n      <Typography sx={{ my: 2 }} variant=\"h4\" align=\"center\">\n        Scenarios\n      </Typography>\n      <Card\n        sx={{\n          border: `2px solid rgb(57, 110, 158)`,\n          mb: 2,\n        }}\n      >\n        <CardHeader\n          sx={{ backgroundColor: \"rgb(57, 110, 158)\", color: \"white\", p: 1 }}\n          title={\n            <Typography variant=\"h5\" component=\"div\" align=\"center\">\n              Options\n            </Typography>\n          }\n        />\n        <CardContent>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={enableWeather}\n                  onChange={() => setEnableWeather(!enableWeather)}\n                />\n              }\n              label=\"Twist\"\n            />\n          </FormGroup>\n          {/* <FormGroup check inline>\n          <Label style={{ display: 'inline' }}>\n            <Input type=\"checkbox\" title=\"\" style={{ marginLeft: '5px' }} color=\"primary\" checked={enableCondition} onChange={() => setEnableCondition(!enableCondition)} />\n            {'Fighting Condition'}\n          </Label>\n        </FormGroup> */}\n          <Button\n            variant=\"contained\"\n            onClick={generateNewMission}\n            startIcon={<Sync />}\n          >\n            New Scenario\n          </Button>\n        </CardContent>\n      </Card>\n      {!randomMission && (\n        <>\n          <div\n            className=\"rule-card unit-card\"\n            style={{ marginBottom: \"15px\", borderColor: \"rgb(57, 110, 158)\" }}\n          >\n            <div\n              className=\"unit-card-title\"\n              style={{ backgroundColor: \"rgb(57, 110, 158)\", color: \"white\" }}\n            >\n              <h5>None Found</h5>\n            </div>\n            <div className=\"unit-card-body\">\n              No missions found. Try rengerating...\n            </div>\n          </div>\n        </>\n      )}\n      {!!randomMission && (\n        <>\n          <Grid\n            container\n            spacing={{ xs: 2, md: 3 }}\n            columns={{ xs: 4, sm: 8, md: 12 }}\n          >\n            <Grid item sx={{ mb: 2 }} md={6}>\n              <Card\n                sx={{\n                  border: `2px solid rgb(57, 110, 158)`,\n                }}\n              >\n                <CardHeader\n                  sx={{\n                    backgroundColor: \"rgb(57, 110, 158)\",\n                    color: \"white\",\n                    p: 1,\n                  }}\n                  title={\n                    <Typography variant=\"h5\" component=\"div\" align=\"center\">\n                      {randomMission.name}\n                    </Typography>\n                  }\n                />\n                <CardMedia\n                  component=\"img\"\n                  image={randomMission.map}\n                  alt={randomMission.name}\n                />\n                <CardContent>\n                  <Typography variant=\"body\" color=\"text.primary\">\n                    <ReactMarkdown\n                      className=\"rule-text\"\n                      style={{ breakInside: \"avoid-column\" }}\n                      children={randomMission.victory_conditions}\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item sx={{ mb: 2 }} md={6}>\n              <Card\n                sx={{\n                  border: `2px solid rgb(57, 110, 158)`,\n                }}\n              >\n                <CardHeader\n                  sx={{\n                    backgroundColor: \"rgb(57, 110, 158)\",\n                    color: \"white\",\n                    p: 1,\n                  }}\n                  title={\n                    <Typography variant=\"h5\" component=\"div\" align=\"center\">\n                      Secondary Objectives\n                    </Typography>\n                  }\n                />\n                <CardContent>\n                  {randomSecondary.map((secondary) => (\n                    <div className=\"width-100\">\n                      <Typography variant=\"h5\" component=\"div\" gutterBottom>\n                        {secondary.name}\n                      </Typography>\n                      <div style={{ marginBottom: \"0.5em\" }}>\n                        <ReactMarkdown\n                          className=\"rule-text font-italic\"\n                          style={{ breakInside: \"avoid-column\" }}\n                          children={secondary.description}\n                        />\n                      </div>\n                      <ReactMarkdown\n                        className=\"rule-text\"\n                        style={{ breakInside: \"avoid-column\" }}\n                        children={secondary.rules}\n                      />\n                      <Divider />\n                    </div>\n                  ))}\n                </CardContent>\n              </Card>\n            </Grid>\n            {!!enableWeather && (\n              <Grid item sx={{ mb: 2 }} md={12}>\n                <Card\n                  sx={{\n                    border: `2px solid rgb(57, 110, 158)`,\n                  }}\n                >\n                  <CardHeader\n                    sx={{\n                      backgroundColor: \"rgb(57, 110, 158)\",\n                      color: \"white\",\n                    }}\n                    title={\n                      <Typography variant=\"h5\" component=\"div\" align=\"center\">\n                        Twist\n                      </Typography>\n                    }\n                  />\n                  <CardContent>\n                    <h4>{randomWeather.name}</h4>\n                    <div style={{ marginBottom: \"0.5em\" }}>\n                      <ReactMarkdown\n                        className=\"rule-text font-italic\"\n                        style={{ breakInside: \"avoid-column\" }}\n                        children={randomWeather.description}\n                      />\n                    </div>\n                    <ReactMarkdown\n                      className=\"rule-text\"\n                      style={{ breakInside: \"avoid-column\" }}\n                      children={randomWeather.rules}\n                    />\n                  </CardContent>\n                </Card>\n              </Grid>\n            )}\n          </Grid>\n        </>\n      )}\n    </>\n  );\n}\n","import {\n  CardHeader,\n  Typography\n} from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport React from 'react';\n\nexport const Overview = (props) => {\n  const { game } = props;\n  const background = game.description;\n  return (\n    <div>\n      <Typography sx={{ my: 2 }} variant=\"h4\" align=\"center\">Overview</Typography>\n      {!background && (\n        <div>\n          <p>{`No information available...`}</p>\n        </div>\n      )}\n      {!!background && (\n        <>\n          <Card\n            sx={{\n              border: `2px solid rgb(57, 110, 158)`,\n              mb: 2,\n            }}\n          >\n            <CardHeader\n              sx={{ backgroundColor: \"rgb(57, 110, 158)\", color: \"white\", py: 1 }}\n              title={\n                <Typography variant=\"h5\" component=\"div\">\n                  Background\n                </Typography>\n              }\n            />\n            <CardContent>\n              <Typography>{background}</Typography>\n            </CardContent>\n          </Card>\n        </>\n      )}\n    </div>\n  );\n}","import { Box, Button, Card, CardActionArea, CardContent, CardMedia, Link, Typography } from '@mui/material';\nimport React from 'react';\n\nconst sanitizeId = (id) => {\n  return id.replace(/\\s+/g, '');\n}\n\nexport const MarkdownRenderer = (options = {}) => {\n  return {\n    p: ({ children }) => <Typography paragraph>{children}</Typography>,\n    h1: (props) => {\n      const { children } = props;\n      const id = sanitizeId(children[0] ?? '').toLowerCase() ?? undefined;\n    return (\n      <Typography id={id} variant=\"h1\" gutterBottom>\n        {children}\n      </Typography>\n    )},\n    h2: (props) => {\n      const { children } = props;\n      const id = sanitizeId(children[0] ?? '').toLowerCase() ?? undefined;\n      return (\n      <Typography id={id} variant=\"h2\" gutterBottom>\n        {children}\n      </Typography>\n    )},\n    h3: (props) => {\n      const { children } = props;\n      const id = sanitizeId(children[0] ?? '').toLowerCase() ?? undefined;\n      return (\n      <Typography id={id} variant=\"h3\" gutterBottom>\n        {children}\n      </Typography>\n    )},\n    h4: (props) => {\n      const { children } = props;\n      const id = sanitizeId(children[0] ?? '').toLowerCase() ?? undefined;\n      return (\n      <Typography id={id} variant=\"h4\" gutterBottom>\n        {children}\n      </Typography>\n    )},\n    h5: (props) => {\n      const { children } = props;\n      const id = sanitizeId(children[0] ?? '').toLowerCase() ?? undefined;\n      return (\n      <Typography id={id} variant=\"h5\" gutterBottom>\n        {children}\n      </Typography>\n    )},\n    h6: (props) => {\n      const { children } = props;\n      const id = sanitizeId(children[0] ?? '').toLowerCase() ?? undefined;\n      return (\n      <Typography id={id} variant=\"h6\" gutterBottom>\n        {children}\n      </Typography>\n    )},\n    a: (props) => {\n      const { children, href } = props;\n      const id = sanitizeId(children[0] ?? '').toLowerCase() ?? undefined;\n      if (href === \"#\") {\n        return (\n        <Button\n          style={{ textTransform: 'none' }}\n          onClick={(el) => {\n            const offset = -150;\n            const element = document.getElementById(id);\n            const y = element?.getBoundingClientRect()?.top + window.pageYOffset + offset;\n            window.scrollTo({ behavior: 'smooth', top: y })\n          }}\n        >{children}</Button>\n      );\n      } else {\n        return <Link {...props}>{children}</Link>;\n      }\n    },\n    img: ({ alt, src, title }) => (\n      <Box\n        sx={{\n          backgroundColor: \"background.paper\",\n          my: 2,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Card fullWidth>\n          <CardContent style={{ padding: 0 }}>\n            <CardActionArea onClick={() => window.open(src, \"_blank\")}>\n              <CardMedia component=\"img\" alt={alt} image={src} title={title}\n                style={{ maxHeight: '600px' }} />\n            </CardActionArea>\n          </CardContent>\n        </Card>\n      </Box>\n    ),\n  };\n};\n\nexport const MaterialRenderer = (options = {}) => {\n  return {\n    p: ({ children }) => (<Typography paragraph>{children}</Typography>),\n    h1: ({ children }) => (<Typography variant=\"h1\" gutterBottom>{children}</Typography>),\n    h2: ({ children }) => (<Typography variant=\"h2\" gutterBottom>{children}</Typography>),\n    h3: ({ children }) => (<Typography variant=\"h3\" gutterBottom>{children}</Typography>),\n    h4: ({ children }) => (<Typography variant=\"h4\" gutterBottom>{children}</Typography>),\n    h5: ({ children }) => (<Typography variant=\"h5\" gutterBottom>{children}</Typography>),\n    h6: ({ children }) => (<Typography variant=\"h6\" gutterBottom>{children}</Typography>),\n    a: (props) => (<Link {...props}>{props.children}</Link>),\n    img: ({\n      alt,\n      src,\n      title,\n    }) => (\n      <div style={{ backgroundColor: 'rgba(0, 0, 0, 0.3)', borderRadius: '5px' }}>\n        <a href={src} rel=\"noreferrer\" target={\"_blank\"}>\n          <CardMedia\n            alt={alt}\n            image={src}\n            title={title}\n            style={{ margin: '5px auto', maxWidth: '700px' }}\n            className={\"d-block width-100 rules-image\"}\n          />\n        </a>\n      </div>\n    ),\n  }\n};","import RehypeToc from '@jsdevtools/rehype-toc';\nimport { Grid } from \"@mui/material\";\nimport Typography from \"@mui/material/Typography\";\nimport { get, isEqual, sortBy } from \"lodash\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport styled from \"styled-components\";\nimport { MarkdownRenderer } from \"utils/markdown\";\n\nconst StyledRules = styled.div`\n  h1 {\n    font-size: 22pt;\n    font-weight: bold;\n    border-bottom: 4px solid rgb(57, 110, 158);\n    padding-bottom: 0.25rem;\n  }\n  h2 {\n    font-size: 20pt;\n    border-bottom: 2px solid rgb(57, 110, 158);\n    padding-bottom: 0.25rem;\n  }\n  h3 {\n    font-size: 16pt;\n  }\n  h4 {\n    font-weight: bold;\n    font-size: 12pt;\n  }\n  h5 {\n    font-weight: bold;\n    font-size: 12pt;\n  }\n  p {\n    break-inside: \"avoid-column\";\n    page-break-inside: avoid; /* For Firefox. */\n    -webkit-column-break-inside: avoid; /* For Chrome & friends. */\n    break-inside: avoid; /* For standard browsers like IE. :-) */\n  }\n`;\n\nexport function Rules(props) {\n  const { rawData, game, data, nameFilter } = props;\n  const { gameRules, skirmishRules } = rawData;\n  const gameType = get(game, \"gameType\", \"battle\");\n  const gameTypeData = get(rawData, `gameData.gameTypes[${gameType}]`, {});\n  const gameTypeName = get(gameTypeData, \"name\", \"Unknown Game\");\n  const isSkirmish = isEqual(gameType, \"battle\");\n  const rules = isSkirmish ? gameRules : skirmishRules;\n  const mdRenderer = React.useMemo(() => MarkdownRenderer(), []);\n  const missions = data\n    .getMissionScenarios()\n    .filter((mission) =>\n      nameFilter\n        ? mission.name.toLowerCase().includes(nameFilter.toLowerCase())\n        : true\n    );\n  const weathers = data\n    .getMissionWeather()\n    .filter((mission) =>\n      nameFilter\n        ? mission.name.toLowerCase().includes(nameFilter.toLowerCase())\n        : true\n    );\n  const secondaries = data\n    .getMissionSecondaries()\n    .filter((mission) =>\n      nameFilter\n        ? mission.name.toLowerCase().includes(nameFilter.toLowerCase())\n        : true\n    );\n  const terrains = sortBy(\n    data\n      .getTerrain()\n      .filter((mission) =>\n        nameFilter\n          ? mission.name.toLowerCase().includes(nameFilter.toLowerCase())\n          : true\n      ),\n    \"name\"\n  );\n  return (\n    <>\n      <Typography\n        sx={{ my: 2 }}\n        variant=\"h4\"\n        align=\"center\"\n      >{`${gameTypeName} Rules`}</Typography>\n      <div\n        className=\"unit-card\"\n        style={{ marginBottom: \"15px\", borderColor: \"rgb(57, 110, 158)\" }}\n      >\n        <div className=\"unit-card-body\">\n          <StyledRules>\n            <ReactMarkdown components={mdRenderer} children={rules}\n              rehypePlugins={[[RehypeToc, { headings: [\"h1\", \"h2\", \"h3\"] }]]} />\n          </StyledRules>\n        </div>\n      </div>\n      <Typography variant=\"h4\" align=\"center\">Terrain Examples</Typography>\n      <hr className=\"hr-blue\" />\n      <div className=\"two-columns\">\n        {terrains.map((terrain) => (\n          <div\n            className=\"unit-card terrain-card\"\n            style={{ marginBottom: \"15px\", borderColor: \"rgb(57, 110, 158)\" }}\n          >\n            <div\n              className=\"unit-card-title\"\n              style={{ backgroundColor: \"rgb(57, 110, 158)\", color: \"white\" }}\n            >\n              <Typography variant=\"h5\" align=\"center\">{terrain.name}</Typography>\n            </div>\n            <div className=\"unit-card-body\">\n              <div>\n                <p style={{ breakInside: \"avoid-column\", marginBottom: \"0.5em\" }}>\n                  <i>{terrain.description}</i>\n                </p>\n                <ul className=\"ul-indent\">\n                  {get(terrain, \"rules\", []).map((rule) => (\n                    <li>{rule}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <span id=\"scenario-h1\">\n        <Typography variant=\"h4\" align=\"center\">Scenarios</Typography>\n        <hr className=\"hr-blue\" />\n        <Grid\n          container\n          rowSpacing={1}\n          sx={{ mt: 2 }}\n          columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n        >\n          {missions.map((mission, index) => (\n\n            <Grid item md={6} key={index}>\n              <div\n                className=\"unit-card mission-card\"\n                style={{ marginBottom: \"15px\", borderColor: \"rgb(57, 110, 158)\" }}\n              >\n                <div\n                  className=\"unit-card-title\"\n                  style={{ backgroundColor: \"rgb(57, 110, 158)\", color: \"white\" }}\n                >\n                  <Typography variant=\"h5\" align=\"center\">{mission.name}</Typography>\n                </div>\n                <div className=\"unit-card-body\">\n                  <a href={mission.map} rel=\"noreferrer\" target={\"_blank\"}>\n                    <img\n                      className={\"d-block width-100 rules-image\"}\n                      style={{ marginBottom: \"1rem\" }}\n                      src={mission.map}\n                      alt={mission.name}\n                    />\n                  </a>\n                  <div className=\"width-100\">\n                    {/* <h5>{'Setup'}</h5>\n                  <p style={{ breakInside: \"avoid-column\" }}>{mission.setup}</p>\n                  <h5>{'Deployment'}</h5>\n                  <p style={{ breakInside: \"avoid-column\" }}>{mission.deployment}</p> */}\n                    <ReactMarkdown\n                      className=\"rule-text\"\n                      style={{ breakInside: \"avoid-column\" }}\n                      children={mission.victory_conditions}\n                    />\n                  </div>\n                </div>\n              </div>\n            </Grid>\n          ))}\n\n        </Grid>\n      </span>\n      <Typography variant=\"h4\" align=\"center\">Secondary Objectives</Typography>\n      <hr className=\"hr-blue\" />\n      <div className=\"two-columns\">\n        {secondaries.map((condition, index) => (\n          <div key={index} style={{ breakInside: \"avoid\" }}>\n            <div\n              className=\"unit-card secondary-card\"\n              style={{\n                marginBottom: \"15px\",\n                borderColor: \"rgb(57, 110, 158)\",\n              }}\n            >\n              <div\n                className=\"unit-card-title\"\n                style={{\n                  backgroundColor: \"rgb(57, 110, 158)\",\n                  color: \"white\",\n                }}\n              >\n                <h3 className=\"text-center\">{condition.name}</h3>\n              </div>\n              <div className=\"unit-card-body\">\n                <div className=\"width-100\">\n                  <div style={{ marginBottom: \"0.5em\" }}>\n                    <ReactMarkdown\n                      className=\"rule-text  font-italic\"\n                      style={{ breakInside: \"avoid-column\" }}\n                      children={condition.description}\n                    />\n                  </div>\n                  <ReactMarkdown\n                    className=\"rule-text\"\n                    style={{ breakInside: \"avoid-column\" }}\n                    children={condition.rules}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <Typography variant=\"h4\" align=\"center\">Twists</Typography>\n      <hr className=\"hr-blue\" />\n      <div className=\"two-columns\">\n        {weathers.map((weather, index) => (\n          <div key={index} style={{ breakInside: \"avoid\" }}>\n            <div\n              className=\"unit-card twist-card\"\n              style={{\n                marginBottom: \"15px\",\n                borderColor: \"rgb(57, 110, 158)\",\n              }}\n            >\n              <div\n                className=\"unit-card-title\"\n                style={{\n                  backgroundColor: \"rgb(57, 110, 158)\",\n                  color: \"white\",\n                }}\n              >\n                <h3 className=\"text-center\">{weather.name}</h3>\n              </div>\n              <div className=\"unit-card-body\">\n                <div className=\"width-100\">\n                  <div style={{ marginBottom: \"0.5em\" }}>\n                    <ReactMarkdown\n                      className=\"rule-text  font-italic\"\n                      style={{ breakInside: \"avoid-column\" }}\n                      children={weather.description}\n                    />\n                  </div>\n                  <ReactMarkdown\n                    className=\"rule-text\"\n                    style={{ breakInside: \"avoid-column\" }}\n                    children={weather.rules}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","import {\n  faExclamationCircle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport UploadIcon from '@mui/icons-material/Upload';\nimport {\n  Container\n} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Popover from \"@mui/material/Popover\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Tab from \"@mui/material/Tab\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Typography from \"@mui/material/Typography\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport CustomCircularProgress from \"components/CustomCircularProgress\";\nimport { Dropdown } from \"components/dropdown\";\nimport { DataContext } from \"hooks\";\nimport { get, omitBy } from \"lodash\";\nimport { set } from \"lodash/fp\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useContext, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Tour from \"reactour\";\nimport { DataAPI, mergeGlobalData } from \"utils/data\";\nimport { readFileContent } from \"utils/files\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Factions } from \"./factions\";\nimport { MissionGenerator } from \"./mission_generator\";\nimport { Overview } from \"./overview\";\nimport { Rules } from \"./rules\";\n\n\nconst allSteps = [];\nconst steps = [\n  [\n    {\n      selector: \"#tab-0\",\n      content:\n        \"This is the module overview. This gives you background information and an overview of the game module.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-1\",\n      content:\n        \"These are the game rules. This gives you the core rules of the game module.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".terrain-card:first-of-type\",\n      content:\n        \"This is a piece of terrain. It contains a brief description of what it might look like and any assocaited rules.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".mission-card:first-of-type\",\n      content:\n        \"This is a scenario. Each scenario has its own way to score victory points and deployment conditions.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".secondary-card:first-of-type\",\n      content:\n        \"This is a secondary objective. Player can select one of these to be the secondary objective for the mission.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".twist-card:first-of-type\",\n      content:\n        \"This is a twist. Player can select one of these to add an interesting twist to the mission.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-4\",\n      content:\n        \"This is the factions list. This gives you a list of all factions in the module. Factions can sometimes be grouped into alliances.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".faction-card:first-of-type\",\n      content:\n        \"This is a faction. It contains a brief description of the faction and clicking on it will bring you to the roster for that faction.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-3\",\n      content:\n        \"This is the scenarios tab. It can give you a random scenario to play with optional parameters.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \"#generateScenario\",\n      content:\n        \"Pressing this button will generate a new scenario for you to play with a random mission, secondary and optional twist.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-4\",\n      content:\n        \"This is the rosters tab. It allows you to create rosters to play this game module.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \"#createList\",\n      content:\n        \"Pressing this button will open the force creator and allow you to give the force a name and choose a type.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \"#importList\",\n      content:\n        \"Pressing this button will allow you to import a force from a file into the force manager.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \"#list-manager\",\n      content:\n        \"This is the force manager. It contains all your previously created lists. You can click on the name of a list to go to it or click the ellipses to edit or delete the list properties.\",\n      stepInteraction: false,\n    },\n  ],\n];\n\nconst FactionsMain = () => {\n  const { gameName } = useParams();\n  const [\n    {\n      data: nope,\n      coreData,\n      fetchGame,\n      setData,\n      refreshData,\n      isLoading,\n      appState,\n      setAppState,\n      userPrefs,\n    },\n  ] = useContext(DataContext);\n  const nameFilter = appState?.searchText;\n  const [isTourOpen, setIsTourOpen] = useState(false);\n  const fileDialog = React.useRef();\n  // const navigate = useNavigate();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  // const addList = (listName, data) => {\n  //   const listId = uuidv4();\n  //   setLists({\n  //     ...lists,\n  //     [listId]: {\n  //       name: listName,\n  //       ...data,\n  //     },\n  //   });\n  //   goToList(listId);\n  // };\n  // const goToList = (listId) =>\n  //   navigate(`/games/${gameName}/lists/${listId}`);\n  const handleClick = () => {\n    fileDialog.current.click();\n  };\n  const game = get(nope, `gameData.games[${gameName}]`, {});\n  const coreGame = get(coreData, `gameData.games[${gameName}]`, {});\n  React.useEffect(() => {\n    if (!game.factions || (!coreGame.factions && !isLoading)) {\n      fetchGame(gameName);\n    }\n  }, [coreData, coreGame.factions, fetchGame, game.factions, gameName, isLoading]);\n  // Default active tab!!!\n  const [activeTab, setActiveTab] = useState(get(appState, \"factionTab\", 2));\n  const globalData = mergeGlobalData(game, nope);\n  const data = DataAPI(game, globalData);\n  const { enqueueSnackbar } = useSnackbar();\n  const lists = get(nope, `lists[${gameName}]`, []);\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n    setAppState({ ...appState, factionTab: tab });\n  };\n  const uploadFile = (event) => {\n    if (activeTab === 4) {\n      uploadList(event);\n    } else {\n      uploadFaction(event);\n    }\n  };\n  const uploadList = (event) => {\n    event.preventDefault();\n    const file = get(event, \"target.files[0]\");\n    if (file) {\n      readFileContent(file)\n        .then((content) => {\n          let listObject = {};\n          try {\n            listObject = JSON.parse(content);\n          } catch (e) {\n            return Promise.reject(e);\n          }\n          if (listObject.forces) {\n            const newArmyData = {\n              ...listObject,\n            };\n            const listName = listObject.name;\n            const listId = uuidv4();\n            setLists({\n              ...lists,\n              [listId]: {\n                name: listName,\n                ...newArmyData,\n              },\n            });\n            enqueueSnackbar(`List successfully imported.`, {\n              appearance: \"success\",\n            });\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(`List failed to import. ${error.message}`, {\n            appearance: \"error\",\n          });\n        });\n    }\n    fileDialog.current.value = null;\n  };\n  const uploadFaction = (event) => {\n    const file = get(event, \"target.files[0]\");\n    if (file) {\n      readFileContent(file)\n        .then((content) => {\n          let armyObject = {};\n          try {\n            armyObject = JSON.parse(content);\n          } catch (e) {\n            return Promise.reject(e);\n          }\n          if (armyObject.games) {\n            const newArmyData = {\n              ...armyObject,\n            };\n            setCustomData(newArmyData);\n            enqueueSnackbar(`Core data successfully imported.`, {\n              appearance: \"success\",\n            });\n          } else if (armyObject.factions) {\n            const newData = set(\n              `games[${gameName}]`,\n              { ...get(nope, `customData.games[${gameName}]`), ...armyObject },\n              get(nope, \"customData\", {})\n            );\n            setCustomData(newData);\n            enqueueSnackbar(`Core data successfully imported.`, {\n              appearance: \"success\",\n            });\n          } else if (armyObject.id) {\n            const newData = set(\n              `games[${gameName}].factions[${armyObject.id}]`,\n              {\n                ...get(`games[${gameName}].factions[${armyObject.id}]`, {}),\n                ...armyObject,\n              },\n              get(nope, \"customData\", {})\n            );\n            setCustomData(newData);\n            enqueueSnackbar(`${armyObject.name} successfully imported.`, {\n              appearance: \"success\",\n            });\n          } else {\n            enqueueSnackbar(`Faction failed to find data to import.`, {\n              appearance: \"error\",\n            });\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(`Faction failed to import. ${error.message}`, {\n            appearance: \"error\",\n          });\n        });\n    }\n    fileDialog.current.value = null;\n  };\n  const deleteFaction = (factionId) => {\n    const newFactionList = omitBy(\n      get(nope, `customData.games[${gameName}].factions`, {}),\n      (faction) => faction.id === factionId\n    );\n    const armyData = {\n      ...get(nope, \"customData\", {}),\n      games: {\n        ...get(nope, \"customData.games\", {}),\n        [gameName]: {\n          ...get(nope, `customData.games[${gameName}]`, {}),\n          factions: newFactionList,\n        },\n      },\n    };\n    enqueueSnackbar(\n      `${data.getFaction(factionId).name} successfully deleted.`,\n      {\n        appearance: \"success\",\n      }\n    );\n    setCustomData(armyData);\n  };\n  const refreshFactions = () => {\n    refreshData(gameName)\n      .then(() => {\n        enqueueSnackbar(`Game data successfully updated.`, {\n          appearance: \"success\",\n        });\n      })\n      .catch((error) => {\n        enqueueSnackbar(`Game failed to fetch factions. ${error.message}`, {\n          appearance: \"error\",\n        });\n      });\n  };\n  const setLists = (listData) => {\n    const newGameData = {\n      ...coreData,\n      lists: {\n        ...get(nope, \"lists\", {}),\n        [gameName]: {\n          ...listData,\n        },\n      },\n    };\n    setData(newGameData);\n  };\n  const setCustomData = (passedData) => {\n    const newGameData = {\n      ...coreData,\n      customData: {\n        ...get(nope, \"customData\", {}),\n        ...passedData,\n      },\n    };\n    setData(newGameData);\n  };\n  React.useEffect(() => {\n    setAppState({\n      enableSearch: true,\n      contextActions: [\n        {\n          name: 'Refresh',\n          icon: <RefreshIcon />,\n          onClick: () => refreshFactions()\n        },\n        ...(!!userPrefs.developerMode ? [\n          {\n            name: 'Import',\n            icon: <UploadIcon />,\n            onClick: () => handleClick()\n          }\n        ] : []),\n        ...(!!game.reportUrl ? [\n          {\n            name: 'Report',\n            icon: <BugReportIcon />,\n            onClick: () => window.open(game.reportUrl, \"_blank\")\n          }\n        ] : [])\n      ]\n    })\n    return () => {\n      setAppState({\n        contextActions: []\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ userPrefs.developerMode ]);\n  // const [dialOpen, setDialOpen] = React.useState(false);\n  if (!data) {\n    return (\n      <Box sx={{ textAlign: \"center\" }}>\n        <CustomCircularProgress />\n        <input\n          id=\"file-Form.Control\"\n          type=\"file\"\n          name=\"name\"\n          multiple\n          ref={fileDialog}\n          onChange={uploadFile}\n          style={{ height: \"0px\", overflow: \"hidden\" }}\n        />\n      </Box>\n    );\n  }\n  let TABS = {\n    Overview: <Overview data={data} game={game} />,\n    Rules: (\n      <Rules\n        data={data}\n        game={game}\n        rawData={nope}\n        gameName={gameName}\n        nameFilter={nameFilter}\n      />\n    ),\n    Factions: (\n      <Factions\n        data={data}\n        game={game}\n        gameName={gameName}\n        setData={setData}\n        rawData={nope}\n        userPrefs={userPrefs}\n        deleteFaction={deleteFaction}\n        nameFilter={nameFilter}\n      />\n    ),\n    Scenarios: (\n      <MissionGenerator\n        data={data}\n        game={game}\n        gameName={gameName}\n        setData={setData}\n        rawData={nope}\n        nameFilter={nameFilter}\n      />\n    )\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n  const handleChange = (event, newValue) => {\n    toggle(newValue);\n  };\n  const isModified = Object.values(\n    get(nope, `customData.games[${gameName}]`, {})\n  ).length;\n  return (\n    <Container>\n      {/* {!bannerHidden && (\n        <Alert sx={{ mb: 2 }} severity=\"info\" variant=\"filled\" onClose={hideBanner}> <Link onClick={() => {\n          setActiveTab(4);\n          hideBanner();\n        }} color=\"inherit\">Click here to try the new Roster creator to create a list.</Link>\n        </Alert>\n      )} */}\n      <Typography variant=\"h3\" align=\"center\" sx={{ mb: 2 }}>\n        {!!isModified && (\n          <Dropdown>\n            {({ handleClose, open, handleOpen, anchorElement }) => (\n              <>\n                <span\n                  aria-haspopup=\"true\"\n                  onMouseEnter={handleOpen}\n                  onMouseLeave={handleClose} style={{ marginRight: '5px' }}>\n                  <FontAwesomeIcon\n                    size=\"sm\"\n                    icon={faExclamationCircle}\n                  />\n                </span>\n                <Popover\n                  variant=\"warning\"\n                  id=\"mouse-over-popover\"\n                  sx={{\n                    pointerEvents: 'none',\n                  }}\n                  open={open}\n                  anchorEl={anchorElement}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                  }}\n                  transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                  }}\n                  onClose={handleClose}\n                  disableRestoreFocus\n                >\n                  <Typography sx={{ p: 1 }}>Warning: Data Is Modified Locally</Typography>\n                </Popover>\n              </>\n            )}\n          </Dropdown>\n        )}\n        {/* {!!game.author && (\n          <Dropdown>\n            {({ handleClose, open, handleOpen, anchorElement }) => (\n              <>\n                <IconButton\n                  aria-haspopup=\"true\"\n                  onClick={handleOpen}\n                  onMouseEnter={handleOpen}\n                  onMouseLeave={handleClose} style={{ marginRight: '5px' }}>\n                  <PersonIcon />\n                </IconButton>\n                <Popover\n                  variant=\"warning\"\n                  id=\"mouse-over-popover\"\n                  sx={{\n                    pointerEvents: 'none',\n                  }}\n                  open={open}\n                  anchorEl={anchorElement}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                  }}\n                  transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                  }}\n                  onClose={handleClose}\n                  disableRestoreFocus\n                >\n                  <Typography sx={{ p: 1 }}>{`Written by ${game.author}`}</Typography>\n                </Popover>\n              </>\n            )}\n          </Dropdown>\n        )} */}\n        {game.name}\n        <small style={{ marginLeft: '5px', fontSize: '1rem' }}> {game.version ? `(${game.version})` : \"\"}</small>\n      </Typography>\n      <Box\n        className=\"sticky\"\n        sx={{\n          width: \"100%\",\n          bgcolor: \"background.paper\",\n          top: isMobile ? \"56px\" : \"64px\",\n        }}\n      >\n        <Box sx={{ width: \"100%\", bgcolor: \"background.paper\", pb: 0 }}>\n          <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n            <Tabs\n              variant=\"scrollable\"\n              value={activeTab}\n              onChange={handleChange}\n            >\n              {Object.keys(TABS).map((tab, index) => (\n                <Tab\n                  sx={{ textTransform: \"none\" }}\n                  label={tab}\n                  {...a11yProps(0)}\n                />\n              ))}\n            </Tabs>\n          </Box>\n        </Box>\n      </Box>\n      <div>\n        {Object.values(TABS)[activeTab]}\n      </div>\n      <Tour\n        accentColor={`rgb(57, 110, 158)`}\n        className=\"tour\"\n        key={activeTab}\n        steps={[...allSteps, ...(steps[activeTab] || [])]}\n        isOpen={isTourOpen}\n        onRequestClose={() => {\n          setIsTourOpen(false);\n        }}\n        rounded={5}\n        onAfterOpen={(target) => (document.body.style.overflowY = \"hidden\")}\n        onBeforeClose={(target) => (document.body.style.overflowY = \"auto\")}\n      />\n      <input\n        id=\"file-Form.Control\"\n        type=\"file\"\n        name=\"name\"\n        multiple\n        ref={fileDialog}\n        onChange={uploadFile}\n        style={{ height: \"0px\", overflow: \"hidden\" }}\n      />\n    </Container>\n  );\n};\n\nexport default FactionsMain;\n","import * as React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nexport default function useQueryParam(\n  key,\n  defaultValue\n) {\n  let [searchParams, setSearchParams] = useSearchParams();\n  let paramValue = searchParams.get(key);\n\n  let value = React.useMemo(() => paramValue ?? defaultValue ?? 0, [paramValue, defaultValue]);\n\n  let setValue = React.useCallback(\n    (newValue, options) => {\n      let newSearchParams = new URLSearchParams(searchParams);\n      newSearchParams.set(key, newValue + '');\n      setSearchParams(newSearchParams, options);\n    },\n    [key, searchParams, setSearchParams]\n  );\n\n  return [value, setValue];\n}","import {\n  faCheckCircle, faExclamationCircle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BugReportIcon from '@mui/icons-material/BugReport';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport UploadIcon from '@mui/icons-material/Upload';\nimport {\n  Button, CardActionArea,\n  CardActions, CardHeader, Grid\n} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Container from \"@mui/material/Container\";\nimport Popover from \"@mui/material/Popover\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Tab from \"@mui/material/Tab\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Typography from \"@mui/material/Typography\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { Dropdown } from \"components/dropdown\";\nimport { DataContext } from \"hooks\";\nimport { get, groupBy, omit, sortBy } from \"lodash\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport Tour from \"reactour\";\nimport { readFileContent } from \"utils/files\";\nimport \"./games.css\";\nimport useQueryParams from 'hooks/use-query-params';\n\nconst steps = [\n  {\n    selector: \"#gameTypeTabs\",\n    content:\n      \"This is the list of game types. Each game type has its own core rules set and all modules share the same core rules.\",\n    stepInteraction: false,\n  },\n  {\n    selector: \"#gameList\",\n    content:\n      \"This is the list of game modules. Modules are split into different settings. They are all cross-compatible.\",\n    stepInteraction: false,\n  },\n  {\n    selector: \".game-card:first-of-type\",\n    content:\n      \"Clicking on a game module will bring you to that module where you can explore all the game data.\",\n    stepInteraction: false,\n  },\n];\n\nconst Games = (props) => {\n  const [\n    {\n      data: nope,\n      setData,\n      coreData,\n      refreshAllData,\n      appState,\n      setAppState,\n      userPrefs\n    },\n  ] = React.useContext(DataContext);\n  let [ activeTab, setActiveTab ] = useQueryParams(\"tab\", 0);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const { enqueueSnackbar } = useSnackbar();\n  const navigate = useNavigate();\n  const nameFilter = appState?.searchText;\n  const [isTourOpen, setIsTourOpen] = useState(false);\n  const showBeta = userPrefs.showBeta;\n  const gameTypesRaw = {\n    all: { name: \"All\" },\n    ...get(nope, \"gameData.gameTypes\", {}),\n  };\n  const gamesUnsorted = Object.values(get(nope, `gameData.games`, {})).filter(\n    (game) => (showBeta ? true : game.version && Number(game.version) >= 1)\n  );\n  const gameTypes = [\n    ...Object.keys(gameTypesRaw).filter(\n      (gameType) =>\n        gamesUnsorted.filter((game) => game.gameType === gameType).length\n    ),\n  ];\n  const games = sortBy(\n    Object.values(get(nope, `gameData.games`, {}))\n      .filter((game) =>\n        showBeta ? true : game.version && Number(game.version) >= 1\n      )\n      .filter((unit) =>\n        nameFilter\n          ? unit.name.toLowerCase().includes(nameFilter.toLowerCase())\n          : true\n      ),\n    \"name\"\n  ).filter((game) =>\n    gameTypes[activeTab] === \"all\"\n      ? true\n      : game.gameType === gameTypes[activeTab]\n  );\n  const gameCategories = get(nope, \"gameData.categories\", {});\n  const unitCategories = groupBy(games, \"category\");\n  const categoryOrder = [...Object.keys(gameCategories), undefined].filter(\n    (cat) => unitCategories[cat] && unitCategories[cat].length\n  );\n  const reportUrl = get(nope, \"gameData.reportUrl\");\n  const fileDialog = React.useRef();\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n  const setCustomData = (passedData) => {\n    const newGameData = {\n      ...coreData,\n      customData: {\n        ...get(nope, \"customData\", {}),\n        ...passedData,\n      },\n    };\n    setData(newGameData);\n  };\n  const uploadFaction = (event) => {\n    const file = get(event, \"target.files[0]\");\n    if (file) {\n      readFileContent(file)\n        .then((content) => {\n          let armyObject = {};\n          try {\n            armyObject = JSON.parse(content);\n          } catch (e) {\n            return Promise.reject(e);\n          }\n          if (armyObject.games) {\n            const newArmyData = {\n              ...armyObject,\n            };\n            setCustomData(newArmyData);\n            enqueueSnackbar(`Core data successfully imported.`, {\n              appearance: \"success\",\n            });\n          } else if (armyObject.id && armyObject.factions) {\n            const newArmyData = {\n              games: {\n                ...get(nope, \"customData.games\", {}),\n                [armyObject.id]: {\n                  ...armyObject,\n                },\n              },\n            };\n            setCustomData(newArmyData);\n            enqueueSnackbar(`${armyObject.name} successfully imported.`, {\n              appearance: \"success\",\n            });\n          } else {\n            enqueueSnackbar(`Game failed to find data to import.`, {\n              appearance: \"error\",\n            });\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(`Core game data failed to import. ${error.message}`, {\n            appearance: \"error\",\n          });\n        });\n    }\n    fileDialog.current.value = null;\n  };\n  const deleteGame = (gameId) => {\n    const newArmyData = {\n      ...get(nope, \"customData\", {}),\n      games: {\n        ...omit(get(nope, \"customData.games\", {}), gameId),\n      },\n    };\n    enqueueSnackbar(\n      `${get(\n        nope,\n        `customData.games[${gameId}].name`,\n        {}\n      )} successfully deleted.`,\n      { appearance: \"success\" }\n    );\n    setCustomData(newArmyData);\n  };\n  const goToFaction = (faction) => navigate(`/games/${faction.id}`);\n  const refreshFactions = React.useCallback(() => {\n    refreshAllData(true)\n      .then(() => {\n        enqueueSnackbar(`All games data successfully updated.`, {\n          appearance: \"success\",\n        });\n      })\n      .catch((error) => {\n        enqueueSnackbar(`All games data failed to fetch. ${error.message}`, {\n          appearance: \"error\",\n        });\n      });\n  }, [ enqueueSnackbar, refreshAllData ]);\n  const handleClick = () => {\n    fileDialog.current.click();\n  };\n\n  const handleChange = (event, newValue) => {\n    toggle(newValue);\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n  React.useEffect(() => {\n    setAppState({\n      enableSearch: true,\n      contextActions: [\n        {\n          name: 'Refresh',\n          icon: <RefreshIcon />,\n          onClick: () => {\n            refreshFactions()\n          }\n        },\n        ...(!!userPrefs.developerMode ? [\n          {\n            name: 'Import',\n            icon: <UploadIcon />,\n            onClick: () => {\n              handleClick();\n            }\n          }\n        ] : []),\n        ...(!!reportUrl ? [\n          {\n            name: 'Report',\n            icon: <BugReportIcon />,\n            onClick: () => window.open(reportUrl, \"_blank\")\n          }\n        ] : [])\n      ]\n    })\n    return () => {\n      setAppState({\n        contextActions: []\n      })\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ userPrefs.developerMode ]);\n  // const [dialOpen, setDialOpen] = React.useState(false);\n  if (!games) {\n    return (\n      <p><input\n        id=\"file-input\"\n        type=\"file\"\n        name=\"name\"\n        multiple\n        ref={fileDialog}\n        onChange={uploadFaction}\n        style={{ height: \"0px\", overflow: \"hidden\" }}\n      /></p>\n    );\n  }\n  return (\n    <Container>\n      <Typography variant=\"h3\" align=\"center\" sx={{ mb: 2 }}>\n        Games Modules\n      </Typography>\n      <Box\n        className=\"sticky\"\n        sx={{\n          width: \"100%\",\n          bgcolor: \"background.paper\",\n          top: isMobile ? \"56px\" : \"64px\",\n        }}\n      >\n        {!!gameTypes && !!gameTypes.length && (\n          <Box sx={{ width: \"100%\", bgcolor: \"background.paper\", pb: 0 }}>\n            <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n              <Tabs\n                variant=\"scrollable\"\n                value={parseInt(activeTab) || 0}\n                onChange={handleChange}\n                aria-label=\"basic tabs example\"\n              >\n                {gameTypes.map((tab, index) => {\n                  const gameTypeData = gameTypesRaw[tab];\n                  return (\n                    <Tab\n                      key={index}\n                      sx={{ textTransform: \"none\" }}\n                      label={gameTypeData.name}\n                      {...a11yProps(0)}\n                    />\n                  );\n                })}\n              </Tabs>\n            </Box>\n          </Box>\n        )}\n      </Box>\n      {/* <HideOnScroll>\n        {({ show }) => (\n          <SpeedDial\n            ariaLabel=\"SpeedDial tooltip example\"\n            sx={{ position: \"fixed\", bottom: 16, right: 16 }}\n            icon={<SpeedDialIcon />}\n            onClose={(event) => {\n              if (event.type === 'click' || event.type === 'blur') {\n                setDialOpen(false);\n              }\n            }}\n            onOpen={(event) => {\n              if (event.type === 'click') {\n                setDialOpen(true);\n              }\n            }}\n            open={dialOpen && show}\n            hidden={!show}\n          >\n            <SpeedDialAction\n              FabProps={{\n                sx: { backgroundColor: 'primary.main', color: theme.palette.getContrastText(theme.palette.primary.main) }\n              }}\n              tooltipOpen\n              id=\"refreshGame\"\n              tooltipTitle=\"Refresh\"\n              onClick={refreshFactions}\n              icon={<RefreshIcon />}\n            />\n            {!!userPrefs.developerMode && (\n              <SpeedDialAction\n                FabProps={{\n                  sx: {\n                    backgroundColor: 'primary.main',\n                    color: theme.palette.getContrastText(theme.palette.primary.main)\n                  }\n                }}\n                tooltipOpen\n                id=\"importGameData\"\n                tooltipTitle=\"Import\"\n                onClick={handleClick}\n                icon={<UploadIcon />}\n              />\n            )}\n            {!!reportUrl && (\n              <SpeedDialAction\n                FabProps={{\n                  sx: {\n                    backgroundColor: 'primary.main',\n                    color: theme.palette.getContrastText(theme.palette.primary.main)\n                  }\n                }}\n                tooltipOpen\n                id=\"reportGameIssue\"\n                tooltipTitle=\"Issue\"\n                onClick={() => window.open(reportUrl, \"_blank\")}\n                icon={<BugReportIcon />}\n              />\n            )}\n            <SpeedDialAction\n              tooltipOpen\n              FabProps={{\n                sx: {\n                  backgroundColor: theme.palette.primary.main,\n                  color: theme.palette.getContrastText(theme.palette.primary.main)\n                }\n              }}\n              tooltipTitle=\"Top\"\n              color=\"primary\"\n              onClick={scrollToTop}\n              icon={<KeyboardArrowUpIcon />}\n            />\n            <SpeedDialAction\n              tooltipOpen\n              FabProps={{\n                sx: {\n                  backgroundColor: theme.palette.primary.main,\n                  color: theme.palette.getContrastText(theme.palette.primary.main)\n                }\n              }}\n              tooltipTitle=\"Help\"\n              icon={<FontAwesomeIcon icon={faQuestion} />}\n              onClick={() => setIsTourOpen(true)}\n            />\n          </SpeedDial>\n        )}\n      </HideOnScroll> */}\n      <div id=\"gameList\">\n        {categoryOrder.map((gameKey, idx) => {\n          const games = get(unitCategories, `[${gameKey}]`, []);\n          const categoryData = get(nope, `gameData.categories[${gameKey}]`, {});\n          return (\n            <>\n              <Typography variant=\"h4\" gutterBottom align=\"center\" sx={{ my: 2 }}>\n                {categoryData.name || \"No Category\"}\n              </Typography>\n              <Grid\n                container\n                spacing={{ xs: 2, md: 3 }}\n                key={idx}\n              >\n                {games.map((game, index) => {\n                  const factionColor = game.color;\n                  const isModified = Object.values(\n                    get(nope, `customData.games[${game.id}]`, {})\n                  ).length;\n                  return (\n                    <Grid\n                      item\n                      sx={{ pb: 2 }}\n                      md={games.length > 1 ? \"6\" : \"12\"}\n                      key={index}\n                    >\n                      <Card\n                        sx={{\n                          border: `2px solid ${factionColor}`,\n                        }}\n                      >\n                        <CardActionArea onClick={() => goToFaction(game)}>\n                          <CardHeader\n                            sx={{\n                              backgroundColor: factionColor,\n                              color: \"white\",\n                            }}\n                            title={\n                              <Typography\n                                variant=\"h5\"\n                                component=\"div\"\n                                align=\"center\"\n                              >\n                                {!!isModified && (\n                                  <Dropdown>\n                                    {({ handleClose, open, handleOpen, anchorElement }) => (\n                                      <>\n                                        <span\n                                          aria-haspopup=\"true\"\n                                          onMouseEnter={handleOpen}\n                                          onMouseLeave={handleClose} style={{ marginRight: '5px' }}>\n                                          <FontAwesomeIcon\n                                            size=\"sm\"\n                                            icon={faExclamationCircle}\n                                          />\n                                        </span>\n                                        <Popover\n                                          variant=\"warning\"\n                                          id=\"mouse-over-popover\"\n                                          sx={{\n                                            pointerEvents: 'none',\n                                          }}\n                                          open={open}\n                                          anchorEl={anchorElement}\n                                          anchorOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'center',\n                                          }}\n                                          transformOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'center',\n                                          }}\n                                          onClose={handleClose}\n                                          disableRestoreFocus\n                                        >\n                                          <Typography sx={{ p: 1 }}>Warning: Data Is Modified Locally</Typography>\n                                        </Popover>\n                                      </>\n                                    )}\n                                  </Dropdown>\n                                )}\n                                {!isModified && (\n                                  <Dropdown>\n                                    {({ handleClose, open, handleOpen, anchorElement }) => (\n                                      <>\n                                        <span\n                                          aria-haspopup=\"true\"\n                                          onMouseEnter={handleOpen}\n                                          onMouseLeave={handleClose} style={{ marginRight: '5px' }}>\n                                          <FontAwesomeIcon size=\"sm\" icon={faCheckCircle} />\n                                        </span>\n                                        <Popover\n                                          variant=\"warning\"\n                                          id=\"mouse-over-popover\"\n                                          sx={{\n                                            pointerEvents: 'none',\n                                          }}\n                                          open={open}\n                                          anchorEl={anchorElement}\n                                          anchorOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'center',\n                                          }}\n                                          transformOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'center',\n                                          }}\n                                          onClose={handleClose}\n                                          disableRestoreFocus\n                                        >\n                                          <Typography sx={{ p: 1 }}>Official Game Module</Typography>\n                                        </Popover>\n                                      </>\n                                    )}\n                                  </Dropdown>\n                                )}\n                                {game.name}\n                                <small style={{ marginLeft: '5px', fontSize: '1rem' }}>\n                                  {game.version ? `(${game.version})` : \"\"}\n                                </small>\n                              </Typography>\n                            }\n                          />\n                          {!!game.image && (\n                            <CardMedia\n                              component=\"img\"\n                              height=\"250\"\n                              image={game.image}\n                              alt=\"green iguana\"\n                            />\n                          )}\n                          <CardContent>\n                            <Typography>{game.description || \" \"}</Typography>\n                          </CardContent>\n                        </CardActionArea>\n                        {!game.url && (\n                          <CardActions>\n                            <Button\n                              size=\"small\"\n                              color=\"primary\"\n                              onClick={(event) => {\n                                event.stopPropagation();\n                                deleteGame(game.id);\n                              }}\n                            >\n                              Delete\n                            </Button>\n                          </CardActions>\n                        )}\n                      </Card>\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </>\n          );\n        })}\n      </div>\n      <Tour\n        accentColor={`rgb(57, 110, 158)`}\n        className=\"tour\"\n        steps={steps}\n        isOpen={isTourOpen}\n        onRequestClose={() => {\n          setIsTourOpen(false);\n        }}\n        rounded={5}\n        onAfterOpen={(target) => (document.body.style.overflowY = \"hidden\")}\n        onBeforeClose={(target) => (document.body.style.overflowY = \"auto\")}\n      />\n      <input\n        id=\"file-input\"\n        type=\"file\"\n        name=\"name\"\n        multiple\n        ref={fileDialog}\n        onChange={uploadFaction}\n        style={{ height: \"0px\", overflow: \"hidden\" }}\n      />\n    </Container>\n  );\n};\n\nexport default Games;\n","import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { IconButton, Stack, TextField } from \"@mui/material\";\nimport { isNil, toNumber } from \"lodash\";\nimport React from \"react\";\n\n\nexport const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <span\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </span>\n));\n\nexport const InputNumber = (props) => {\n  const {\n    onChange = () => {},\n    value,\n    max,\n    min,\n    style = {},\n    defaultValue = 0,\n    allowReset,\n    disabled = false,\n    label,\n    fullWidth = false\n  } = props;\n  const changeValue = (newValue) => {\n    if (!isNil(max) && newValue > max) {\n      onChange(max);\n      return;\n    } else if (!isNil(min) && newValue < min) {\n      onChange(min);\n      return;\n    }\n    onChange(newValue);\n  };\n  return (\n    <span style={style}>\n      <Stack direction=\"row\">\n        {!!allowReset && (\n          <IconButton\n            variant=\"contained\"\n            disabled={disabled}\n            size=\"small\"\n            sx={{ mr: 1 }}\n            onClick={() => changeValue(defaultValue)}\n          >\n            <RefreshIcon />\n          </IconButton>\n        )}\n        <TextField\n          fullWidth={fullWidth}\n          label={label}\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          size=\"small\"\n          type=\"number\"\n          sx={{ mr: 1 }}\n          {...props}\n          onChange={(event) => {\n            changeValue(toNumber(event.target.value));\n          }}\n        />\n        <IconButton\n          variant=\"contained\"\n          sx={{ mr: 1 }}\n          disabled={disabled || value === min}\n          size=\"small\"\n          onClick={() => changeValue(value - 1)}\n        >\n          <KeyboardArrowDownIcon />\n        </IconButton>\n        <IconButton\n          sx={{  }}\n          variant=\"contained\"\n          disabled={disabled || value === max}\n          size=\"small\"\n          onClick={() => changeValue(value + 1)}\n        >\n          <KeyboardArrowUpIcon />\n        </IconButton>\n      </Stack>\n    </span>\n  );\n};\n","import React, { useState } from 'react';\nimport { getTextColor, hexToRgb } from 'utils/colors';\nimport { get } from 'lodash';\nimport { RuleList } from 'components/roster/rule-list';\nimport Button from '@mui/material/Button';\nimport Collapse from '@mui/material/Collapse';\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport { StyledTableRow } from \"components/styled-table\";\n\nexport const WeaponList = (props) => {\n  const { weapons, faction, data, toggler, rules, twoColumns = true } = props;\n  const { color: factionColor, secondary_color: factionSecondaryColor } = faction;\n  const textColor = factionColor ? getTextColor(hexToRgb(factionColor)) : 'white';\n  const textColorSecondary = factionSecondaryColor ? getTextColor(hexToRgb(factionSecondaryColor)) : 'white';\n  const borderColor = (textColor !== 'white') ? textColor : factionColor;\n  const btnStyle = { borderColor };\n  const thStyle = { backgroundColor: factionSecondaryColor || factionColor, color: factionSecondaryColor ? textColorSecondary : textColor };\n  const [showWeapons, setShowWeapons] = useState(false);\n  const renderRules = (rules) => {\n    if (!rules || !rules.length) {\n      return;\n    }\n    return (\n      <div>\n        <RuleList twoColumn={twoColumns} faction={faction} rules={rules} />\n      </div>\n    )\n  }\n  return (\n    <div>\n      {!!toggler && <div className=\"text-center\">\n        <div style={{ marginBottom: '0.5rem' }}>\n          <Button variant=\"outline-primary\" size=\"sm\" block style={btnStyle} onClick={() => setShowWeapons(!showWeapons)}>{showWeapons ? 'Hide' : 'Weapons'}</Button>\n        </div>\n      </div>}\n      <Collapse in={!toggler || showWeapons}>\n        <div>\n          <TableContainer>\n            <Table size=\"small\" aria-label=\"simple table\" style={{ padding: 0 }}>\n              <TableHead>\n                <StyledTableRow style={thStyle}>\n                  <TableCell>{\"Weapon\"}</TableCell>\n                  <TableCell className=\"text-center\">{\"Range\"}</TableCell>\n                  <TableCell className=\"text-center\">{\"A\"}</TableCell>\n                  <TableCell className=\"text-center\">{\"AP\"}</TableCell>\n                  <TableCell>{\"Special\"}</TableCell>\n                </StyledTableRow>\n              </TableHead>\n              <TableBody>\n                {weapons.map((weapon) => {\n                  if (weapon.profiles) {\n                    return weapon.profiles.map((weaponProfile) => {\n                      return (\n                        <StyledTableRow>\n                          <TableCell>\n                            {`${weapon.name} (${weaponProfile.name})`}\n                          </TableCell>\n                          <TableCell className=\"text-center\">\n                            {`${weapon.short !== \"Melee\" ? `${weaponProfile.short}\"` : weaponProfile.short || '-'}/${weaponProfile.medium ? `${weaponProfile.medium}\"` : '-'}`}\n                          </TableCell>\n                          <TableCell className=\"text-center\">\n                            {weaponProfile.attacks ? weaponProfile.attacks : '-'}\n                          </TableCell>\n                          <TableCell className=\"text-center\">\n                            {weaponProfile.ap || '-'}\n                          </TableCell>\n                          <TableCell>\n                            {[...get(weapon, 'rules', []), ...get(weaponProfile, 'rules', [])].map((rule) => {\n                              const ruleData = data.getRule(rule.id || rule, faction);\n                              return (ruleData.inputs ? `${ruleData.name}(${ruleData.inputs.map((input) => rule[input]).join(', ')})` : ruleData.name);\n                            }).join(', ') || \"-\"}\n                          </TableCell>\n                        </StyledTableRow>\n                      )\n                    })\n                  }\n                  return (\n                    <StyledTableRow>\n                      <TableCell>\n                        {weapon.name}\n                      </TableCell>\n                      <TableCell className=\"text-center\">\n                        {`${weapon.short !== \"Melee\" ? `${weapon.short}\"` : weapon.short || '-'}/${weapon.medium ? `${weapon.medium}\"` : '-'}`}\n                      </TableCell>\n                      <TableCell className=\"text-center\">\n                        {weapon.attacks ? weapon.attacks : '-'}\n                      </TableCell>\n                      <TableCell className=\"text-center\">\n                        {weapon.ap || '-'}\n                      </TableCell>\n                      <TableCell>\n                        {get(weapon, 'rules', []).map((rule) => {\n                          const ruleData = data.getRule(rule.id || rule, faction);\n                          return (ruleData.inputs ? `${ruleData.name}(${ruleData.inputs.map((input) => rule[input]).join(', ')})` : ruleData.name);\n                        }).join(', ') || \"-\"}\n                      </TableCell>\n                    </StyledTableRow>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {!!(rules && rules.length) && <>\n            {renderRules(rules)}\n          </>\n          }\n        </div>\n      </Collapse>\n    </div>\n  );\n}","import { Box, Table, TableBody, TableCell, TableContainer, TableHead, Typography } from '@mui/material';\nimport { WeaponList } from 'components/print/weapon-list';\nimport { RelicCard } from 'components/roster/relic-card';\nimport { RuleList } from 'components/roster/rule-list';\nimport { UnitCard } from 'components/roster/unit-card';\nimport { StyledTableRow } from 'components/styled-table';\nimport { find, get, orderBy, sortBy, sum, uniqBy } from 'lodash';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { getTextColor, hexToRgb } from 'utils/colors';\n\nexport const PrintView = (props) => {\n  const { list, forces, data } = props;\n  const LIST_TYPES = [\n    { label: 'Competitive', value: 'competitive' },\n    { label: 'Narrative', value: 'narrative' },\n    { label: 'Campaign', value: 'campaign' }\n  ];\n  const listType = list.type || 'competitive';\n  const listTypeName = (find(LIST_TYPES, myType => myType.value === list.type) || {}).label || 'Competitive';\n  const totalForcePoints = sum(forces.map((force) => {\n    const unitPoints = sum(get(force, 'units', []).map((unit) => unit.points));\n    const legendPoints = sum(get(force, 'legends', []).map((legend) => legend.points));\n    return unitPoints + legendPoints;\n  }));\n  const totalSP = (1 + Math.ceil(totalForcePoints / 500)) - sum(forces.map((force) => force.cost));\n  const totalForceReservePoints = sum(forces.map((force) => {\n    const unitPoints = sum(get(force, 'reserves', []).map((unit) => unit.points));\n    return unitPoints;\n  }));\n  const legendLimit = Math.ceil(totalForcePoints / 500);\n  return (\n    <div>\n      <div>\n        <div>\n          <Typography\n            variant=\"h3\"\n            align=\"center\"\n            sx={{ mb: 2 }}\n          >{`${list.name}`}</Typography>\n          <Typography align=\"center\" sx={{ mb: 4 }}>\n            {`${listTypeName}, ${totalForcePoints} pts`},\n            {listType === \"campaign\"\n              ? ` ${totalForceReservePoints} pts of reserves,`\n              : \"\"}\n            {` ${totalSP} SP`},{\" \"}\n            {`${legendLimit} Legend${legendLimit > 1 ? \"s\" : \"\"}`}\n          </Typography>\n        </div>\n      </div>\n      <div>\n        {forces.map((force, index) => {\n          const forceFactionId = get(force, 'faction.id');\n          const forceSubFactionId = get(force, 'subFactionId');\n          const forceFaction = data.getFactionWithSubfaction(forceFactionId, forceSubFactionId || 'none');\n          // const forceSubfaction = data.getSubfaction(forceFactionId, forceSubFactionId || 'none');\n          const { color: factionColor, secondary_color: factionSecondaryColor } = forceFaction;\n          const textColor = factionColor ? getTextColor(hexToRgb(factionColor)) : 'white';\n          const textColorSecondary = factionSecondaryColor ? getTextColor(hexToRgb(factionSecondaryColor)) : 'white';\n          const borderColor = (textColor !== 'white') ? textColor : factionColor;\n          const btnStyle = { borderColor };\n          const thStyle = { backgroundColor: factionColor, color: textColor };\n          const thStyle2 = {\n            backgroundColor: factionSecondaryColor || factionColor,\n            color: factionSecondaryColor ? textColorSecondary : textColor,\n          };\n          const forceCategories = Object.keys(get(force, 'categories', {}));\n          const forceUnits = get(force, 'units', []);\n          const factionRelics = data.getRelics(forceFaction);\n          // const factionPowers = data.getPowers(forceFaction);\n          // const hasPowers = !isNil(forceFaction.powers) && !isEqual(forceFaction.powers, {})\n          // const factionStrategies = data.getStrategies(forceFaction);\n          const units = forceUnits || [];\n          const forceLegends = get(force, 'legends', []);\n          const filteredCategories = forceCategories.filter((catKey) => forceUnits.filter((myUnit) => myUnit.category === catKey).length);\n          const faction = forceFaction;\n          const flatWeps = units.map((unit) => {\n            return data.getWeaponList(get(unit, 'selectedWeapons', []), faction);\n          }).flat();\n          const allWeapons = uniqBy(flatWeps, (rule) => rule.id || rule);\n          const rules = uniqBy(units.map((unit) => {\n            return data.getRulesList(get(unit, 'selectedRules', []), faction)\n          }).flat(), (rule) => rule.id || rule);\n          const allWeaponRules = data.getAllWeaponRules(allWeapons, faction);\n          const weaponsRules = uniqBy(allWeaponRules, (rule) => rule.id || rule);\n          const allRules = uniqBy([...weaponsRules, ...rules], (rule) => rule.id || rule);\n          const allSortedRules = sortBy(allRules, (rule) => rule.name || rule);\n          const allSortedWeapons = sortBy(allWeapons, (weapon) => weapon.name || weapon);\n          const powerCategories = { ...data.getRawPowerCategories(faction) };\n          const allPowerSpecialties = [];\n          forces.forEach((force) => {\n            force?.units.forEach((unit) => {\n              const powerSp = unit?.powerSpecialty;\n              if (powerSp) {\n                allPowerSpecialties.push(powerSp);\n              }\n            })\n          });\n          const powerSpecialtySet = new Set(allPowerSpecialties);\n          const powers = data.getPowers(faction).filter((power) => powerSpecialtySet.has(power?.category) || !power?.category);\n          const sortedPowers = sortBy(powers, ['category', 'charge']).reverse();\n          const strategies = orderBy(data.getStrategies(faction), ['phase', 'cost'], ['desc', 'asc']);\n          const phases = { ...data.getRawPhases() };\n          return (\n            <div>\n              <div>\n                {/* <div className=\"d-flex justify-content-between align-items-center\">\n                  <h4 className=\"text-left\">{`${forceFaction.name} ${(!forceSubFactionId || forceSubFactionId === \"none\") ? '' : `(${forceSubfaction.name})`} - ${force.name}`}<small>{` (${force.cost} SP)`}</small></h4>\n                </div> */}\n                <div>\n                  {((factionRelics.length) && (!!forceLegends.length)) && <>\n                    {forceLegends.map((relic, unitIdx) => {\n\n                      return (\n                        <Box sx={{ mb: 2 }}>\n                          <RelicCard printMode faction={faction} relic={relic} data={data} />\n                        </Box>\n                      )\n                    })}\n                  </>}\n                  {filteredCategories.map((catKey, catIndex) => {\n                    // const category = data.getCategory(catKey);\n                    // const categoryData = data.getOrganizationCategory(force, catKey);\n                    // const unitCatCount = forceUnits.filter((myUnit) => myUnit.category === catKey).length;\n                    return (\n                      <>\n                        {/* <div className=\"d-flex justify-content-between  align-items-center\">\n                          <h4 style={{ margin: '0', padding: '8px 0' }} className=\"text-left\">{category.name} {listType !== 'narrative' ? `${`(${categoryData.min || 0}-${categoryData.max})`}` : ''}</h4>\n                        </div> */}\n                        {forceUnits.filter((unit) => unit.category === catKey).map((unit, unitIdx) => {\n                          // const unitOptions = get(unit, 'optionList', []);\n                          // const unitCopy = get(list, `forces[${index}].units[${unit.id}]`);\n                          const models = [...get(unit, 'models', []), ...data.getModelList(unit.selectedModels, faction)];\n                          const weapons = data.getWeaponList(unit.selectedWeapons, faction);\n                          const rules = data.getRulesList(unit.selectedRules, faction);\n                          const allWeaponRules = data.getAllWeaponRules(weapons, faction);\n                          const weaponsRules = uniqBy(allWeaponRules, (rule) => rule.id || rule);\n                          const unitSetbacks = get(unit, 'selectedSetbacks', []).map((setback) => data.getSetback(faction, setback));\n                          const unitPerks = get(unit, 'selectedPerks', []).map((perk) => data.getPerk(faction, perk));\n                          const unitLevel = Math.floor((unit.experience || 0) / 5);\n                          return (\n                            <div style={{ marginBottom: '0.5em' }}>\n                              <UnitCard\n                                printMode\n                                perks={unitPerks}\n                                level={unitLevel}\n                                setbacks={unitSetbacks}\n                                points={unit.points}\n                                models={models}\n                                weapons={weapons}\n                                faction={faction}\n                                data={data}\n                                unit={unit}\n                                rules={rules}\n                                weaponRules={weaponsRules}\n                                showOptions={false}\n                                embeddedOptions={true}\n                                unitOptions={unit.selectedOptionsList}\n                              />\n                            </div>\n                          )\n                        })}\n                      </>\n                    );\n                  })}\n                  {!!allSortedWeapons.length && <div style={{ breakInside: 'avoid', marginBottom: '15px' }}>\n                    <div className=\"unit-card\" style={btnStyle}>\n                      <div style={thStyle} className=\"unit-card-title\">\n                        <h4>Weapons</h4>\n                      </div>\n                      <div>\n                        <WeaponList faction={faction} data={data} weapons={allSortedWeapons} />\n                      </div>\n                    </div>\n                  </div>}\n                  {!!allSortedRules.length && <div style={{ breakInside: 'avoid', marginBottom: '15px' }}>\n                    <div className=\"unit-card\" style={btnStyle}>\n                      <div style={thStyle} className=\"unit-card-title\">\n                        <h4>Rules</h4>\n                      </div>\n                      <div className=\"unit-card-body\">\n                        {allSortedRules.map((rule) => (\n                          <div>\n                            <RuleList faction={faction} twoColumn={false} rules={[rule]} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>}\n                  {!!powers.length && <div style={{ breakInside: 'avoid', marginBottom: '15px' }}>\n                    <div className=\"unit-card\" style={btnStyle}>\n                      <div style={thStyle} className=\"unit-card-title\">\n                        <h4>Powers</h4>\n                      </div>\n                      <div>\n                        <TableContainer>\n                          <Table size=\"small\" aria-label=\"simple table\" style={{ padding: 0 }}>\n                            <TableHead>\n                              <StyledTableRow style={thStyle2}>\n                                <TableCell>{\"Power\"}</TableCell>\n                                <TableCell>{\"Specialty\"}</TableCell>\n                                <TableCell align=\"center\">{\"Charge\"}</TableCell>\n                                <TableCell>{\"Description\"}</TableCell>\n                              </StyledTableRow>\n                            </TableHead>\n                            <TableBody>\n                              {sortedPowers.map((power) => {\n                                return (\n                                  <StyledTableRow>\n                                    <TableCell>\n                                      {power.name}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                      {get(powerCategories, `[${power.category}].name`, 'Any')}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                      {power.charge}\n                                    </TableCell>\n                                    <TableCell>\n                                      <ReactMarkdown children={power.description} className=\"rule-text\" />\n                                    </TableCell>\n                                  </StyledTableRow>\n                                )\n                              })}\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                      </div>\n                    </div>\n                  </div>}\n                  {!!strategies.length && <div style={{ breakInside: 'avoid', marginBottom: '15px' }}>\n                    <div className=\"unit-card\" style={btnStyle}>\n                      <div style={thStyle} className=\"unit-card-title\">\n                        <h4>Strategies</h4>\n                      </div>\n                      <div>\n                      <TableContainer>\n                        <Table size=\"small\" aria-label=\"simple table\" style={{ padding: 0 }}>\n                          <TableHead>\n                            <StyledTableRow style={thStyle2}>\n                              <TableCell>{\"Strategy\"}</TableCell>\n                              <TableCell align=\"center\">{\"SP\"}</TableCell>\n                              <TableCell>{\"Phase\"}</TableCell>\n                              <TableCell>{\"Description\"}</TableCell>\n                            </StyledTableRow>\n                          </TableHead>\n                          <TableBody>\n                            {strategies.map((strategy) => {\n                              return (\n                                <StyledTableRow>\n                                  <TableCell>\n                                    {strategy.name}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    {strategy.cost}\n                                  </TableCell>\n                                  <TableCell>\n                                    {get(phases, `[${strategy.phase}].name`, 'Activation')}\n                                  </TableCell>\n                                  <TableCell>\n                                    <ReactMarkdown children={strategy.description} className=\"rule-text\" />\n                                  </TableCell>\n                                </StyledTableRow>\n                              )\n                            })}\n                          </TableBody>\n                        </Table>\n                        </TableContainer>\n                      </div>\n                    </div>\n                  </div>}\n                  {!filteredCategories.length && <>\n                    <p>Force is empty...</p>\n                  </>}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  )\n}","import {\n  Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormControlLabel, FormLabel, Radio, RadioGroup, Stack, TextField\n} from \"@mui/material\";\nimport {\n  get\n} from \"lodash\";\nimport React, {\n  useState\n} from \"react\";\n\nconst LIST_TYPES = [\n  { label: \"Competitive\", value: \"competitive\" },\n  { label: \"Narrative\", value: \"narrative\" },\n  // { label: \"Campaign\", value: \"campaign\" },\n];\nexport const AddList = (props) => {\n  const { hideModal, addList } = props;\n  const [listName, setListName] = useState(\"\");\n  const [listType, setListType] = useState(\"competitive\");\n  return (\n    <>\n      <Dialog open maxWidth=\"md\" fullWidth onClose={hideModal}>\n        <DialogTitle closeButton>Create Roster</DialogTitle>\n        <DialogContent>\n          <Stack spacing={2} sx={{ mt: 1 }}>\n            <FormControl>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Force Name\"\n                variant=\"outlined\"\n                onChange={(value) => setListName(value.target.value)}\n                value={listName}\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel component=\"legend\">List Type</FormLabel>\n              <RadioGroup\n                row\n                aria-label=\"gender\"\n                name=\"row-radio-buttons-group\"\n                onChange={(event) => setListType(event.target.value)}\n                value={listType}\n              >\n                {LIST_TYPES.map((type, index) => (\n                  <FormControlLabel\n                    key={index}\n                    value={type.value}\n                    control={<Radio />}\n                    label={type.label}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\" onClick={hideModal}>\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              if (listName) {\n                addList(listName, { type: listType });\n                hideModal();\n              }\n            }}\n          >\n            Create\n          </Button>{\" \"}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const UpdateList = (props) => {\n  const { hideModal, updateList, listId, lists } = props;\n  const oldListName = get(lists, `[${listId}].name`, \"\");\n  const oldListType = get(lists, `[${listId}].type`, \"\");\n  const [listName, setListName] = useState(oldListName);\n  const [listType, setListType] = useState(oldListType || \"competitive\");\n  return (\n    <>\n      <Dialog open maxWidth=\"md\" fullWidth onClose={hideModal}>\n        <DialogTitle>\n          Edit Roster\n        </DialogTitle>\n        <DialogContent>\n          <Stack spacing={2} sx={{ mt: 1 }}>\n            <FormControl>\n              <TextField\n                size=\"small\"\n                id=\"standard-basic\"\n                label=\"Force Name\"\n                variant=\"outlined\"\n                onChange={(value) => setListName(value.target.value)}\n                value={listName}\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel component=\"legend\">List Type</FormLabel>\n              <RadioGroup\n                row\n                aria-label=\"gender\"\n                name=\"row-radio-buttons-group\"\n                onChange={(event) => setListType(event.target.value)}\n                value={listType}\n              >\n                {LIST_TYPES.map((type, index) => (\n                  <FormControlLabel\n                    key={index}\n                    value={type.value}\n                    control={<Radio />}\n                    label={type.label}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\" onClick={hideModal}>\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              if (listName) {\n                updateList(listId, {\n                  name: listName,\n                  type: listType,\n                });\n                hideModal();\n              }\n            }}\n          >\n            Save\n          </Button>{\" \"}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n","export const BASE_THEME = {\n  components: {\n    MuiCardContent: {\n      styleOverrides: {\n        // Name of the slot\n        root: {\n          ':last-child': {\n            paddingBottom: '16px'\n          }\n        }\n      }\n    },\n    MuiTabScrollButton: {\n      styleOverrides: {\n        root: {\n          width: 25,\n        }\n      }\n    }\n  },\n  typography: {\n    fontFamily: [\n      'Noto Sans JP'\n    ],\n    h1: {\n      fontSize: '4rem',\n      fontWeight: 'bold'\n    },\n    h2: {\n      fontSize: '3rem',\n      fontWeight: 'bold'\n    },\n    h3: {\n      fontSize: '2.5rem',\n      fontWeight: 'bold'\n    },\n    h4: {\n      fontSize: '2rem',\n      fontWeight: 'bold'\n    },\n    h5: {\n      fontSize: '1.5rem',\n      fontWeight: 'bold'\n    },\n    h6: {\n      fontSize: '1rem',\n    }\n  },\n};","import {\n  faCheck, faChevronDown,\n  faChevronUp, faDice, faTimes\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AddIcon from '@mui/icons-material/Add';\nimport {\n  Button, Checkbox, Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle, Divider, FormControl,\n  FormControlLabel, FormGroup, IconButton, InputLabel, List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  ListSubheader, MenuItem, Paper, Select, TextField, Typography\n} from \"@mui/material\";\nimport Collapse from \"@mui/material/Collapse\";\nimport ProgressBar from '@mui/material/LinearProgress';\nimport useTheme from \"@mui/material/styles/useTheme\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { Box } from \"@mui/system\";\nimport { InputNumber } from \"components/bootstrap\";\nimport { PowerCard } from \"components/roster/power-card\";\nimport { RelicCard } from \"components/roster/relic-card\";\nimport { StrategyCard } from 'components/roster/strategy-card';\nimport { UnitCard } from \"components/roster/unit-card\";\nimport {\n  find, get, groupBy, isEqual, sortBy, sum,\n  toNumber, uniqBy\n} from \"lodash\";\nimport React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport styled from \"styled-components\";\nimport { formatLevel } from \"utils/format\";\nimport { MarkdownRenderer } from \"utils/markdown\";\nimport { getRandomItem } from \"utils/math\";\n\nconst PowerSpecialtySelector = (props) => {\n  const { data: nope, faction, onChange = () => { }, value = 'none' } = props;\n  const powerCats = { 'none': { name: 'None' }, ...nope.getRawPowerCategories(faction) };\n  const specialtyOptions = Object.keys(powerCats).map((cat, index) => {\n    return <MenuItem key={index} value={cat}>{powerCats[cat]?.name}</MenuItem>;\n  });\n  return (\n    <FormGroup sx={{ my: 1 }}>\n      <FormControl>\n        <InputLabel id=\"specialty-label\">Power Specialty</InputLabel>\n        <Select\n          size=\"small\"\n          labelId=\"specialty-label\"\n          id=\"specialty\"\n          value={value}\n          label=\"Power Specialty\"\n          onChange={onChange}\n        >\n          {specialtyOptions}\n        </Select>\n      </FormControl>\n    </FormGroup>\n  );\n};\n\nexport const ChooseSubFaction = (props) => {\n  const { hideModal, setSubFaction, forceId, faction } = props;\n  const rawSubfactions = Object.values(faction.subfactions || []);\n  const subfactions = [\n    {\n      id: \"none\",\n      name: \"No Focus\",\n      description:\n        \"A generalist force which can take on many different enemies.\",\n    },\n    ...rawSubfactions,\n  ];\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return (\n    <>\n      <Dialog open onClose={hideModal} fullScreen={fullScreen} maxWidth=\"lg\" fullWidth>\n        <DialogTitle closeButton>Change Focus</DialogTitle>\n        <DialogContent style={{ padding: 0 }} sx={{ backgroundColor: \"background.paper\" }}>\n          <List style={{ height: '100%' }}>\n            {subfactions.map((subfaction) => {\n              return (\n                <ListItem\n                  disablePadding\n                  secondaryAction={\n                    <IconButton\n                      sx={{}}\n                      onClick={() => {\n                        setSubFaction(forceId, subfaction.id);\n                        hideModal();\n                      }}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemButton\n                    onClick={() => {\n                      setSubFaction(forceId, subfaction.id);\n                      hideModal();\n                    }}\n                  >\n                    <ListItemText\n                      primary={`${subfaction.name}`}\n                      secondary={`${subfaction.description}`}\n                    />\n                  </ListItemButton>\n                </ListItem>\n              );\n            })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={hideModal}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const AddLegend = (props) => {\n  const { hideModal, data, forceId, faction, addLegend, list } = props;\n  const legends = data.getRelics(faction);\n  const RELIC_TYPES = {\n    equipment: \"Equipment\",\n    ability: \"Abilities\",\n  };\n  const sortedLegends = sortBy(\n    legends.map((legend) => ({\n      ...legend,\n      points: data.getRelicCost(legend, faction),\n    })),\n    [\"points\", \"name\"]\n  );\n  const listType = list.type || \"competitive\";\n  const listLegendSet = new Set(\n    get(list, \"forces\", [])\n      .map((force) => get(force, \"legends\", []).map((legend) => legend.id))\n      .flat()\n  );\n  const filteredLegends =\n    listType === \"narrative\"\n      ? sortedLegends\n      : sortedLegends.filter((legend) => !listLegendSet.has(legend.id));\n  const groupedRelics = groupBy(filteredLegends, (relic) =>\n    relic.type || relic.rule ? \"ability\" : \"equipment\"\n  );\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return (\n    <>\n      <Dialog open onClose={hideModal} fullScreen={fullScreen} maxWidth=\"lg\" fullWidth>\n        <DialogTitle>Add Legend</DialogTitle>\n        <DialogContent style={{ padding: 0 }} sx={{ backgroundColor: \"background.paper\" }}>\n          <Paper  style={{ height: '100%', borderRadius: 0, overflowY: 'auto' }}>\n            {Object.keys(RELIC_TYPES)\n              .filter(\n                (type) => !!groupedRelics[type] && !!groupedRelics[type].length\n              )\n              .map((relicType) => {\n                const relicsType = get(groupedRelics, `[${relicType}]`, []);\n                const sortedRelics = sortBy(relicsType, (relic) =>\n                  data.getRelicCost(relic, faction)\n                );\n                return (\n                  <>\n                    <ListSubheader sx={{ flex: 1, backgroundColor: 'background.paper', color: 'inherit' }}>\n                      <Typography\n                        sx={{ py: 1 }}\n                        fontWeight=\"bold\"\n                        variant=\"h5\"\n                      >\n                        {RELIC_TYPES[relicType]}\n                      </Typography>\n                    </ListSubheader>\n                    {sortedRelics.map((relic) => {\n                      return (\n                        <div key={relic.id}>\n                          <ListItem\n                            disablePadding\n                            // secondaryAction={\n                            //   <IconButton\n                            //     sx={{}}\n                            //     onClick={() => {\n                            //       addLegend(forceId, { id: relic.id });\n                            //       hideModal();\n                            //     }}\n                            //   >\n                            //     <AddIcon />\n                            //   </IconButton>\n                            // }\n                          >\n                            <ListItemButton\n                              onClick={() => {\n                                addLegend(forceId, { id: relic.id });\n                                hideModal();\n                              }}\n                            >\n                              <ListItemText\n                                primary={<Typography fontWeight=\"bold\">{`${relic.name} (${relic.points} pts)`}</Typography>}\n                                secondary={<Typography variant=\"body2\"><ReactMarkdown\n                                  children={relic.description}\n                                  className=\"rule-text\"\n                                /></Typography>}\n                              />\n                            </ListItemButton>\n                          </ListItem>\n                        </div>\n                      );\n                    })}\n                  </>\n                );\n              })}\n          </Paper>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={hideModal}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const AddForce = (props) => {\n  const { data, addForce, list, hideModal, userPrefs } = props;\n  const showBeta = userPrefs.showBeta;\n  const [faction, setFaction] = useState(\"\");\n  const [subFaction, setSubFaction] = useState(\"\");\n  const forces = get(list, \"forces\", []);\n  const factions = data\n    .getFactions()\n    .filter((game) =>\n      showBeta ? true : game.version && Number(game.version) >= 1\n    );\n  const organizations = data.getRawOrganizations();\n  const alliances = data.getRawAlliances();\n  const firstFaction = get(list, \"forces[0].factionId\", \"\");\n  const listAlliance = data.getFaction(firstFaction).alliance;\n  const unitCategories = groupBy(factions, \"alliance\");\n  let filteredAlliances = [...Object.keys(alliances), \"mercenaries\", undefined];\n  if (!listAlliance && forces.length > 0 && list.type !== \"narrative\") {\n    filteredAlliances = [\"mercenaries\", undefined];\n  } else if (listAlliance && forces.length > 0 && list.type !== \"narrative\") {\n    filteredAlliances = [\n      ...Object.keys(alliances).filter((alliance) => alliance === listAlliance),\n      \"mercenaries\",\n    ];\n  }\n  const categoryOrder = filteredAlliances.filter(\n    (cat) => unitCategories[cat] && unitCategories[cat].length\n  );\n  // Subfactions\n  const rawSubfactions = Object.values(\n    data.getFaction(faction).subfactions || []\n  );\n  const hasSubfactions = !!rawSubfactions.length;\n  const subfactions = [\n    {\n      id: \"none\",\n      name: \"No Focus\",\n      description:\n        \"A generalist force which can take on many different enemies.\",\n    },\n    ...rawSubfactions,\n  ];\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return (\n    <>\n      <Dialog\n        open\n        fullScreen={fullScreen}\n        fullWidth\n        onClose={hideModal}\n        maxWidth=\"lg\"\n      >\n        {!faction && (\n          <>\n            <DialogTitle closeButton>Choose Faction</DialogTitle>\n            <DialogContent style={{ padding: 0 }}>\n              <Paper  style={{ height: '100%', borderRadius: 0, overflowY: 'auto' }}>\n                <>\n                  {categoryOrder.map((allianceKey) => {\n                    const theFactions = sortBy(\n                      get(unitCategories, `[${allianceKey}]`, []),\n                      \"name\"\n                    );\n                    const filteredFactions =\n                      forces.length > 0 &&\n                        !listAlliance &&\n                        list.type !== \"narrative\"\n                        ? theFactions.filter(\n                          (faction) => faction.id === firstFaction\n                        )\n                        : theFactions;\n                    const allianceData = data.getAlliance(allianceKey);\n                    return (\n                      <>\n                        <ListSubheader sx={{ flex: 1, color: 'inherit' }}>\n                          <Typography\n                            sx={{ py: 1 }}\n                            fontWeight=\"bold\"\n                            variant=\"h5\"\n                          >\n                            {allianceData.name || \"Unaligned\"}\n                          </Typography>\n                        </ListSubheader>\n                        {Object.keys(filteredFactions).map((orgKey) => {\n                          const org = filteredFactions[orgKey];\n                          return (\n                            <ListItem\n                              disablePadding\n                              // secondaryAction={\n                              //   <IconButton\n                              //     sx={{}}\n                              //     onClick={() => {\n                              //       setFaction(org.id);\n                              //     }}\n                              //   >\n                              //     <AddIcon />\n                              //   </IconButton>\n                              // }\n                            >\n                              <ListItemButton\n                                onClick={() => {\n                                  setFaction(org.id);\n                                }}\n                              >\n                                <ListItemText\n                                  primary={\n                                    <Typography fontWeight=\"bold\">\n                                      {`${org.name}`}\n                                      <small>\n                                        {org.version ? ` (${org.version})` : \"\"}\n                                      </small>\n                                    </Typography>\n                                  }\n                                  secondary={<Typography variant=\"body2\">{`${org.description || \"\"}`}</Typography>}\n                                />\n                              </ListItemButton>\n                            </ListItem>\n                          );\n                        })}\n                      </>\n                    );\n                  })}\n                </>\n              </Paper>\n            </DialogContent>\n            <DialogActions>\n              <Button color=\"primary\" onClick={hideModal}>\n                Cancel\n              </Button>\n            </DialogActions>\n          </>\n        )}\n        {!!faction && (subFaction || !hasSubfactions) && (\n          <>\n            <DialogTitle closeButton>Add Force Organization</DialogTitle>\n            <DialogContent style={{ padding: 0 }} sx={{ backgroundColor: \"background.paper\" }}>\n              <Paper style={{ height: '100%', borderRadius: 0, overflowY: 'auto' }}>\n                {Object.keys(organizations).map((orgKey) => {\n                  const org = organizations[orgKey];\n                  return (\n                    <ListItem\n                      disablePadding\n                      // secondaryAction={\n                      //   <IconButton\n                      //     sx={{}}\n                      //     onClick={() => {\n                      //       addForce({\n                      //         id: orgKey,\n                      //         factionId: faction,\n                      //         subFactionId: subFaction || \"none\",\n                      //       });\n                      //       hideModal();\n                      //     }}\n                      //   >\n                      //     <AddIcon />\n                      //   </IconButton>\n                      // }\n                    >\n                      <ListItemButton\n                        onClick={() => {\n                          addForce({\n                            id: orgKey,\n                            factionId: faction,\n                            subFactionId: subFaction || \"none\",\n                          });\n                          hideModal();\n                        }}\n                      >\n                        <ListItemText\n                          primary={<Typography fontWeight=\"bold\">{`${org.name} (Cost ${org.cost})`}</Typography>}\n                          secondary={<Typography variant=\"body2\">{org.description}</Typography>}\n                        />\n                      </ListItemButton>\n                    </ListItem>\n                  );\n                })}\n              </Paper>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color=\"secondary\"\n                onClick={() => {\n                  hasSubfactions ? setSubFaction(\"\") : setFaction(\"\");\n                }}\n              >\n                Back\n              </Button>\n              <Button color=\"primary\" onClick={hideModal}>\n                Cancel\n              </Button>\n            </DialogActions>\n          </>\n        )}\n        {hasSubfactions && !subFaction && !!faction && (\n          <>\n            <DialogTitle closeButton>Choose Focus</DialogTitle>\n            <DialogContent style={{ padding: 0 }} sx={{ backgroundColor: \"background.paper\" }}>\n              <Paper style={{ height: '100%', borderRadius: 0, overflowY: 'auto' }}>\n                {subfactions.map((subfaction) => {\n                  return (\n                    <ListItem\n                      disablePadding\n                      secondaryAction={\n                        <IconButton\n                          sx={{}}\n                          onClick={() => {\n                            setSubFaction(subfaction.id);\n                          }}\n                        >\n                          <AddIcon />\n                        </IconButton>\n                      }\n                    >\n                      <ListItemButton\n                        onClick={() => {\n                          setSubFaction(subfaction.id);\n                        }}\n                      >\n                        <ListItemText\n                          primary={<Typography fontWeight=\"bold\">{subfaction.name}</Typography>}\n                          secondary={<Typography variant=\"body2\">{subfaction.description}</Typography>}\n                        />\n                      </ListItemButton>\n                    </ListItem>\n                  );\n                })}\n              </Paper>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color=\"secondary\"\n                onClick={() => {\n                  setFaction(\"\");\n                }}\n              >\n                Back\n              </Button>\n              <Button color=\"primary\" onClick={hideModal}>\n                Cancel\n              </Button>\n            </DialogActions>\n          </>\n        )}\n      </Dialog>\n    </>\n  );\n};\n\nexport const AddUnit = (props) => {\n  const { hideModal, data, units, faction, addUnit, forceId } = props;\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const sortedUnits = sortBy(\n    units.map((unit) => ({\n      ...unit,\n      points: data.getUnitPoints(unit, faction),\n    })),\n    [\"points\", \"name\"]\n  );\n  return (\n    <>\n      <Dialog open onClose={hideModal} fullScreen={fullScreen} maxWidth=\"lg\" fullWidth>\n        <DialogTitle closeButton>\n          Add Unit\n        </DialogTitle>\n        <DialogContent style={{ padding: 0 }}>\n          <Paper style={{ height: '100%', borderRadius: 0, overflowY: 'auto' }}>\n            {sortedUnits.map((unit, index) => {\n              return (\n                <ListItem\n                  key={index}\n                  disablePadding\n                  // secondaryAction={\n                  //   <IconButton\n                  //     sx={{}}\n                  //     onClick={() => {\n                  //       addUnit(forceId, { id: unit.id });\n                  //       hideModal();\n                  //     }}\n                  //   >\n                  //     <AddIcon />\n                  //   </IconButton>\n                  // }\n                >\n                  <ListItemButton\n                    onClick={() => {\n                      addUnit(forceId, { id: unit.id });\n                      hideModal();\n                    }}\n                  >\n                    <ListItemText\n                      primary={<Typography fontWeight=\"bold\">{`${unit.name} (${unit.points} pts)`}</Typography>}\n                      secondary={<Typography variant=\"body2\">{unit.description}</Typography>}\n                    />\n                  </ListItemButton>\n                </ListItem>\n              );\n            })}\n          </Paper>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={hideModal}>\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const ViewStrategies = (props) => {\n  const { hideModal, data, faction } = props;\n  const strategies = data.getStrategies(faction);\n  const phases = { ...data.getRawPhases() };\n  const unitPhases = { ...groupBy(strategies, \"phase\") };\n  const phaseOrder = [...Object.keys(phases), undefined].filter(\n    (cat) => unitPhases[cat] && unitPhases[cat]\n  );\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return (\n    <>\n      <Dialog open onClose={hideModal} maxWidth=\"lg\" fullWidth fullScreen={fullScreen}>\n        <DialogTitle closeButton>\n          Strategies\n        </DialogTitle>\n        <DialogContent sx={{ backgroundColor: \"background.paper\" }}>\n          {phaseOrder.map((phaseId, phaseIndex) => {\n            const phaseStrategies = get(unitPhases, `[${phaseId}]`, []).map(\n              (strat) => ({ ...strat, sourceLength: strat.source.length })\n            );\n            const sortedStrategies = sortBy(phaseStrategies, [\n              \"sourceLength\",\n              \"source\",\n              \"cost\",\n            ]);\n            const phaseData = data.getPhase(phaseId);\n            return (\n              <div key={phaseIndex}>\n                <Typography\n                  sx={{ my: 2 }}\n                  variant=\"h5\"\n                  component=\"div\"\n                  align=\"center\"\n                >\n                  {phaseData.name || \"Any Phase\"}\n                </Typography>\n                <div className=\"two-columns\">\n                  {sortedStrategies.map((strategy, index) => (\n                    <div key={index} className=\"no-break\">\n                      <Box sx={{ mb: 2 }}>\n                        <StrategyCard strategy={strategy} faction={faction} />\n                      </Box>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            );\n          })}\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={hideModal}>\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const ViewPowers = (props) => {\n  const { hideModal, data, faction, powerSpecialties } = props;\n  const powerCatSet = new Set(powerSpecialties);\n  const strategies = data.getPowers(faction);\n  const phases = { ...data.getRawPowerCategories(faction) };\n  const unitPhases = { ...groupBy(strategies, \"category\") };\n  const phaseOrder = [undefined, ...Object.keys(phases)].filter(\n    (cat) => unitPhases[cat] && unitPhases[cat]\n  ).filter((cat) => powerCatSet.has(cat) || !cat);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n  return (\n    <Dialog open onClose={hideModal} maxWidth=\"lg\" fullWidth fullScreen={fullScreen}>\n      <DialogTitle closeButton>\n        Powers\n      </DialogTitle>\n      <DialogContent sx={{ backgroundColor: 'background.paper' }}>\n        <>\n          {!strategies.length && <p>{\"No strategies found...\"}</p>}\n          {phaseOrder.map((phaseId, phaseIdx) => {\n            const phaseStrategies = get(unitPhases, `[${phaseId}]`, []).map(\n              (strat) => ({ ...strat, sourceLength: strat.source.length })\n            );\n            const sortedStrategies = sortBy(phaseStrategies, [\n              \"sourceLength\",\n              \"source\",\n              \"charge\",\n            ]);\n            const phaseData = data.getPowerCategory(phaseId, faction);\n            return (\n              <>\n                <div key={phaseIdx}>\n                  <Typography\n                    sx={{ my: 2 }}\n                    variant=\"h4\"\n                    component=\"div\"\n                    align=\"center\"\n                  >\n                    {phaseData.name || \"Any Specialty\"}\n                  </Typography>\n                </div>\n                <div className=\"two-columns\">\n                  {sortedStrategies.map((power, index) => (\n                    <div key={index} className=\"no-break\">\n                      <Box sx={{ mb: 2 }}>\n                        <PowerCard faction={faction} power={power} />\n                      </Box>\n                    </div>\n                  ))}\n                </div>\n              </>\n            );\n          })}\n        </>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={hideModal}>\n          Done\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport const ViewUnit = (props) => {\n  const { hideModal, data, unit, faction } = props;\n  const models = [\n    ...get(unit, \"models\", []),\n    ...data.getModelList(unit.selectedModels, faction),\n  ];\n  const weapons = data.getWeaponList(unit.selectedWeapons, faction);\n  const rules = data.getRulesList(unit.selectedRules, faction);\n  const allWeaponRules = data.getAllWeaponRules(weapons, faction);\n  const weaponsRules = uniqBy(allWeaponRules, (rule) => rule.id || rule);\n  const unitSetbacks = get(unit, \"selectedSetbacks\", []).map((setback) =>\n    data.getSetback(faction, setback)\n  );\n  const unitPerks = get(unit, \"selectedPerks\", []).map((perk) =>\n    data.getPerk(faction, perk)\n  );\n  const unitLevel = Math.floor((unit.experience || 0) / 5);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const unitPowerSpecialty = unit?.powerSpecialty ? data.getPowerCategory(unit?.powerSpecialty, faction)?.name : undefined;\n  return (\n    <>\n      <Dialog open maxWidth=\"lg\" fullScreen={fullScreen} onClose={hideModal}>\n        <DialogTitle>\n          View Unit\n        </DialogTitle>\n        <DialogContent sx={{ p: 1, backgroundColor: 'background.paper' }}>\n          <Box sx={{ mt: 1 }}>\n            <UnitCard\n              toggler={false}\n              points={unit.points}\n              models={models}\n              weapons={weapons}\n              faction={faction}\n              data={data}\n              unit={unit}\n              rules={rules}\n              setbacks={unitSetbacks}\n              powerSpecialty={unitPowerSpecialty}\n              perks={unitPerks}\n              level={unitLevel}\n              weaponRules={weaponsRules}\n              showOptions={false}\n              embeddedOptions={true}\n              unitOptions={unit.selectedOptionsList}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={hideModal}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst injuryText = `\n# Injuries\nWhen this model would be killed, roll a D10 adding the amount it failed the save by plus the number of critical damage tokens it has and refer to the following:\n\n* Shaken(5+): Take one additional shock.\n* Panic(8+): Take 2 additional shock and immediately take a Courage test. If failed the unit is destroyed.\n* Destroyed(10+): It is instantly destroyed.\n\nMark each time the unit rolls on the chart with a critical damage token. While a unit has one or more damage tokens, it may not remove that amount of Shock.\n`;\n\nexport const ViewInjuryTable = (props) => {\n  const { hideModal } = props;\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return (\n    <>\n      <Dialog open maxWidth=\"lg\" fullScreen={fullScreen} onClose={hideModal}>\n        <DialogTitle closeButton>\n          <DialogTitle>Injury Chart</DialogTitle>\n        </DialogTitle>\n        <DialogContent>\n          <ReactMarkdown className=\"rule-text\" children={injuryText} />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={hideModal}>\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst actionReference = `\n# Actions\nThe following actions are available to all units.\n\n### Focus\nThe unit focuses and gains +1 Accuracy and Strength with its next attack.\n### Shoot\nThe unit attacks with all equipped Ranged weapons. Units may only shoot once per round.\n### Fight\nThe unit fights will all equipped melee weapons in close combat. A unit may only fight once per round. If a unit has no Melee weapons, it may not perform Fight actions.\n### Move\nAll models in the unit move up to their movement characteristic.\n#### Rushing\nWhen performing a move action, a unit may attempt to rush. The unit takes an Initiative skill check. If passed, the unit may move an additional number of inches equal to half its movement characteristic rounded down with that Move action. If failed, the unit takes a Shock at the end of the Move and does not gain any benefit. Units may never rush across obstacles or through difficult terrain.\n### Charge\nThe unit declares a target and makes a move action into base contact with it and may make a free fight action. A unit may not charge if already in close combat. A unit may only use a Charge action if it is in range of an enemy unit it can reach with its move action.\n### Hold\nThe unit prepares itself and may perform a reaction later in the round. It may automatically perform an Overwatch or Counter Attack reaction without having to test. All other reactions will require the unit to test.\n### Evade\nThe unit attemps to evade incoming attacks. Mark that the unit has Evaded with a token. When the unit is targeted by a Shooting or Fighting attack, that unit may spend the token to gain +1 Save against that attack.\n### Rally\nThe unit attempts to regroup and prepare to fight on. Roll a Courage check for each Shock on the unit and any successes remove one Shock.\n\n# Reactions\nUnits may make any of the following reactions.\n\n### Dodge\nWhen a unit is targeted by an attack it may attempt a Dodge reaction. With a Dodge reaction, a unit attempts to dodge out of the way of the attack and avoid being hit. If successful, immediately make an Evade action.\n\n### Overwatch\nUnits may react when a Charge action is declared against them or a Move action is performed in their line of sight by attempting an Overwatch reaction. If successful, the unit may make a full shooting attack against the Charging or Moving unit measured from any point in the unit's Move. A unit that is on Hold may automatically perform an Overwatch reaction. No test is required for this reaction as a Hold action has already been performed.\n\n### Counter Attack\nWhen a Fight or Shoot action is declared against a unit, it may attempt a Counter Attack reaction. If successful, the unit may simultaneously make a Fight or Shoot action against the attacking unit. A unit that is on Hold may automatically perform a Counter Attack reaction against an enemy unit that Fights or Shoots it. No test is required for this reaction as a Hold action has already been performed.\n\n### Escape\nWhen a Fight, Shoot, or Charge action is declared against a unit, it may attempt an Escape reaction. If successful, the target unit may make a full move action before the Shoot, Fight or Charge action is performed.\n`;\nconst ReferenceRules = styled.div`\n  h1 {\n    font-size: 18pt;\n    font-weight: bold;\n    padding-bottom: 0.25rem;\n  }\n  h2 {\n    font-size: 16pt;\n    margin-top: 0.5em;\n    padding-bottom: 0.25rem;\n  }\n  h3 {\n    font-size: 14pt;\n  }\n  h4 {\n    font-weight: bold;\n    font-size: 12pt;\n  }\n  h5 {\n    font-weight: bold;\n    font-size: 12pt;\n  }\n  p {\n    break-inside: \"avoid-column\";\n    page-break-inside: avoid; /* For Firefox. */\n    -webkit-column-break-inside: avoid; /* For Chrome & friends. */\n    break-inside: avoid; /* For standard browsers like IE. :-) */\n  }\n`;\n\nexport const ViewActionReference = (props) => {\n  const { hideModal, isSkirmish } = props;\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const rules = isSkirmish ? injuryText + actionReference : actionReference;\n  return (\n    <>\n      <Dialog open maxWidth=\"lg\" fullScreen={fullScreen} onClose={hideModal}>\n        <DialogTitle>Rules Reference</DialogTitle>\n        <DialogContent sx={{ p: 0 }}>\n          <Paper sx={{ px: 3 }} style={{ height: '100%', borderRadius: 0, overflowY: 'auto' }}>\n            <ReferenceRules>\n              <ReactMarkdown\n                className=\"reference-text\"\n                children={rules}\n              />\n            </ReferenceRules>\n          </Paper>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={hideModal}>\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\nconst StyledRules = styled.div`\n  h1 {\n    font-size: 20pt;\n    font-weight: bold;\n    border-bottom: 4px solid rgb(57, 110, 158);\n    padding-bottom: 0.25rem;\n  }\n  h2 {\n    font-size: 18pt;\n    border-bottom: 2px solid rgb(57, 110, 158);\n    padding-bottom: 0.25rem;\n  }\n  h3 {\n    font-size: 16pt;\n  }\n  h4 {\n    font-weight: bold;\n    font-size: 12pt;\n  }\n  h5 {\n    font-weight: bold;\n    font-size: 12pt;\n  }\n  p {\n    break-inside: \"avoid-column\";\n    page-break-inside: avoid; /* For Firefox. */\n    -webkit-column-break-inside: avoid; /* For Chrome & friends. */\n    break-inside: avoid; /* For standard browsers like IE. :-) */\n  }\n`;\n\nexport const ViewFullRules = (props) => {\n  const { rawData, game, hideModal } = props;\n  const { gameRules, skirmishRules } = rawData;\n  const gameType = get(game, \"gameType\", \"battle\");\n  const gameTypeData = get(rawData, `gameData.gameTypes[${gameType}]`, {});\n  const gameTypeName = get(gameTypeData, \"name\", \"Unknown Game\");\n  const isSkirmish = isEqual(gameType, \"battle\");\n  const rules = isSkirmish ? gameRules : skirmishRules;\n  const mdRenderer = React.useMemo(() => MarkdownRenderer(), []);\n  return (\n    <>\n      <Dialog open onClose={hideModal}>\n        <DialogTitle closeButton>\n          <DialogTitle>{`${gameTypeName} Rules`}</DialogTitle>\n        </DialogTitle>\n        <DialogContent>\n          <StyledRules>\n            <ReactMarkdown renderers={mdRenderer} children={rules} />\n          </StyledRules>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={hideModal}>\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const ViewLegend = (props) => {\n  const { hideModal, data, faction, legend: relic } = props;\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return (\n    <Dialog open maxWidth=\"lg\" onClose={hideModal} fullScreen={fullScreen}>\n      <DialogTitle>\n        View Legend\n      </DialogTitle>\n      <DialogContent sx={{ p: 1, backgroundColor: \"background.paper\" }}>\n        <Box sx={{ mt: 1 }} height=\"100%\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <RelicCard faction={faction} relic={relic} data={data} />\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={hideModal}>\n          Done\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport const EditUnit = (props) => {\n  const {\n    hideModal,\n    data,\n    getUnit,\n    faction,\n    setUnitOptions,\n    setUnitPowerSpecialty,\n    setUnitName,\n    forceId,\n    unitId\n  } = props;\n  const unit = getUnit(forceId, unitId);\n  const options = get(unit, \"optionList\", []);\n  const selectedOptions = get(unit, \"selectedOptions\", []);\n  const unitModels = sum(Object.values(get(unit, \"modelCounts\", {})));\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const hasPowerRule = find(get(unit, 'selectedRules', []), (rule) => rule.id === 'power' || rule === 'power');\n  if (!unit) {\n    return <div></div>;\n  }\n  const renderOption = (option, index) => {\n    if (option.list) {\n      return (\n        <>\n          {option.list.length !== 1 && <div>{`${option.option}: `}</div>}\n          {option.list.map((opt, optIndex) => {\n            const limit = opt.limit;\n            const choiceLimit = opt.choiceLimit;\n            // Get total selected choices minus the current context\n            const selectedChoices = sum(\n              selectedOptions[index].filter((option, idx) => idx !== optIndex)\n            );\n            const changeFuncCheck = () => {\n              const val = selectedOptions[index][optIndex];\n              const newVal = val === 0 ? 1 : 0;\n              if (selectedChoices + newVal > choiceLimit) {\n                return;\n              }\n              selectedOptions[index][optIndex] = newVal;\n              setUnitOptions(forceId, unitId, selectedOptions);\n            };\n            const changeFunc = (newValue) => {\n              const value = toNumber(newValue);\n              if (selectedChoices + value > choiceLimit) {\n                return;\n              }\n              selectedOptions[index][optIndex] = value;\n              setUnitOptions(forceId, unitId, selectedOptions);\n            };\n            const value = selectedOptions[index][optIndex];\n            const shouldDisable = selectedChoices >= choiceLimit && value === 0;\n            return (\n              <>\n                {!choiceLimit && limit === 0 && (\n                  <FormGroup\n                    controlId={`${index}${optIndex}`}\n                  >\n                    <FormControlLabel control={\n                      <Checkbox\n                        type=\"checkbox\"\n                        color=\"primary\"\n                        checked={value}\n                        disabled={shouldDisable}\n                        onChange={changeFuncCheck}\n                      />\n                    } label={`${option.list.length === 1 ? option.option : \"\"\n                      } ${opt.text}`} />\n                  </FormGroup>\n                )}\n                {limit > 1 && choiceLimit > 1 && (\n                  <FormGroup\n                    controlId={`${index}${optIndex}`}\n                    sx={{ mb: 1 }}\n                  >\n                    <label style={{ marginBottom: 0 }}>\n                      {option.list.length === 1 && <>{option.option}</>}{\" \"}\n                      {opt.text}\n                    </label>\n                    <InputNumber\n                      fullWidth\n                      min={0}\n                      max={limit}\n                      type=\"number\"\n                      color=\"primary\"\n                      disabled={shouldDisable}\n                      value={value}\n                      onChange={changeFunc}\n                    />\n                  </FormGroup>\n                )}\n                {(choiceLimit === 1 || limit === 1) && (\n                  <FormGroup\n                    controlId={`${index}${optIndex}`}\n                  >\n                    <FormControlLabel control={\n                      <Checkbox\n                        type=\"checkbox\"\n                        color=\"primary\"\n\n                        checked={value}\n                        disabled={shouldDisable}\n                        onChange={changeFuncCheck}\n                      />}\n                      label={`${option.list.length === 1 ? option.option : \"\"\n                        } ${opt.text}`} />\n                  </FormGroup>\n                )}\n              </>\n            );\n          })}\n        </>\n      );\n    }\n    return <></>;\n  };\n  return (\n    <>\n      <Dialog open onClose={hideModal} fullScreen={fullScreen} maxWidth=\"lg\" fullWidth>\n        <DialogTitle>\n          {`${unit.customName || unit.name} `}{\" \"}\n          <small>\n            {`(${unitModels} ${unitModels > 1 ? \"models\" : \"model\"})`}{\" \"}\n            {`(${unit.points} pts)`}\n          </small>\n        </DialogTitle>\n        <DialogContent sx={{ p: 0 }}>\n          <Paper style={{ height: '100%', borderRadius: 0, overflow: 'auto' }} sx={{ px: 2 }}>\n            <FormControl fullWidth sx={{ mt: 2 }}>\n              <TextField\n                fullWidth\n                size=\"small\"\n                label=\"Custom Name\"\n                value={unit.customName}\n                onChange={(event) =>\n                  setUnitName(forceId, unitId, event.target.value)\n                }\n              />\n              <Divider />\n            </FormControl>\n            <FormGroup>\n              <div>\n                {!!hasPowerRule && <div>\n                  <div className=\"d-flex justify-content-center flex-column\">\n                    <PowerSpecialtySelector value={unit?.powerSpecialty} onChange={(event) => setUnitPowerSpecialty(forceId, unitId, event.target.value)} data={data} faction={faction} />\n                  </div>\n                  <Divider />\n                </div>}\n                {options.map((option, index) => {\n                  return (\n                    <div>\n                      <div className=\"d-flex justify-content-center flex-column\">\n                        {renderOption(option, index)}\n                      </div>\n                      <Divider />\n                    </div>\n                  );\n                })}\n              </div>\n            </FormGroup>\n          </Paper>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              hideModal();\n            }}\n          >\n            Done\n          </Button>{\" \"}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const EditUnitCampaign = (props) => {\n  const {\n    hideModal,\n    data,\n    getUnit,\n    faction,\n    setUnitPerks,\n    setUnitSetbacks,\n    forceId,\n    unitId,\n    updateUnit,\n  } = props;\n  const [showPerkLevel, setShowPerkLevel] = useState({});\n  const unit = getUnit(forceId, unitId);\n  const unitPerks = get(unit, \"selectedPerks\", []);\n  const unitSetbacks = get(unit, \"selectedSetbacks\", []);\n  const unitPerksData = unitPerks.map((perk) => {\n    return { id: perk, ...data.getPerk(faction, perk) };\n  });\n  const unitSetbacksData = unitSetbacks.map((setback) => {\n    return { id: setback, ...data.getSetback(faction, setback) };\n  });\n  const selectedSetbacks = new Set(unitSetbacks);\n  const selectedPerks = new Set(unitPerks);\n  const setbacks = data.getSetbacks(faction);\n  const filteredSetbacks = setbacks.filter(\n    (setback) => !selectedSetbacks.has(setback.id)\n  );\n  const getRandomSetback = () => {\n    return get(getRandomItem(filteredSetbacks), \"id\");\n  };\n  const perks = data.getPerks(faction);\n  const perksByLevel = groupBy(perks, \"level\");\n  const perkOrder = Object.keys(perksByLevel);\n  const unitExperience = unit.experience || 0;\n  const levelProgress = unitExperience % 5;\n  const unitLevel = Math.floor((unit.experience || 0) / 5);\n  const formattedLevel = formatLevel(unitLevel);\n  const perksLeft =\n    unitLevel - (sum(unitPerksData.map((perk) => perk.level)) || 0);\n  const canGetPerk = (level) => {\n    return perksLeft - level >= 0;\n  };\n  if (!unit) {\n    return <div></div>;\n  }\n  return (\n    <>\n      <Dialog open onClose={hideModal}>\n        <DialogTitle closeButton>\n          <DialogTitle>\n            {`${unit.customName || unit.name}`}{\" \"}\n            <small>\n              {`(${unit.points} pts)`}\n              {unitLevel > 0 ? ` (${formattedLevel})` : \"\"}\n            </small>\n          </DialogTitle>\n        </DialogTitle>\n        <DialogContent>\n          <div>\n            <h4 className=\"text-left\">\n              <b>{\"Level Progress\"}</b>\n            </h4>\n            <ProgressBar\n              style={{ height: \"2em\" }}\n              now={levelProgress}\n              min={0}\n              max={5}\n              label={`${levelProgress} xp`}\n            />\n            <Divider />\n            <div>\n              <Button\n                size=\"sm\"\n                style={{ marginRight: \"5px\" }}\n                color=\"primary\"\n                onClick={() =>\n                  updateUnit(forceId, unitId, {\n                    experience: Math.max((unit.experience || 0) - 5, 0),\n                  })\n                }\n              >\n                {\"-5 xp\"}\n              </Button>\n              <Button\n                size=\"sm\"\n                style={{ marginRight: \"5px\" }}\n                color=\"primary\"\n                onClick={() =>\n                  updateUnit(forceId, unitId, {\n                    experience: Math.max((unit.experience || 0) - 1, 0),\n                  })\n                }\n              >\n                {\"-1 xp\"}\n              </Button>\n              <Button\n                size=\"sm\"\n                style={{ marginRight: \"5px\" }}\n                color=\"primary\"\n                onClick={() =>\n                  updateUnit(forceId, unitId, {\n                    experience: Math.max((unit.experience || 0) + 1, 0),\n                  })\n                }\n              >\n                {\"+1 xp\"}\n              </Button>\n              <Button\n                size=\"sm\"\n                style={{ marginRight: \"5px\" }}\n                color=\"primary\"\n                onClick={() =>\n                  updateUnit(forceId, unitId, {\n                    experience: Math.max((unit.experience || 0) + 5, 0),\n                  })\n                }\n              >\n                {\"+5 xp\"}\n              </Button>\n              <hr />\n            </div>\n          </div>\n          <div>\n            <h4 className=\"text-left\">\n              <b>{\"Injuries\"}</b>\n            </h4>\n            {unitSetbacksData.map((setback) => {\n              const setbackCost = data.resolvePoints(setback.points, { unit });\n              return (\n                <div>\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    <span className=\"text-left\">\n                      <b>{`${setback.name} (${setbackCost} pts)`}</b>\n                      <p\n                        style={{ marginBottom: 0, marginRight: \"5px\" }}\n                        className=\"text-left\"\n                      >{`${setback.description}`}</p>\n                    </span>\n                    <div className=\"d-flex justify-content-end\">\n                      <Button\n                        style={{}}\n                        color=\"primary\"\n                        onClick={() => {\n                          selectedSetbacks.delete(setback.id);\n                          updateUnit(forceId, unitId, {\n                            experience: Math.max((unit.experience || 0) - 5, 0),\n                            selectedSetbacks: Array.from(selectedSetbacks),\n                          });\n                        }}\n                      >\n                        {\"-5 xp\"}\n                      </Button>\n                    </div>\n                  </div>\n                  <hr />\n                </div>\n              );\n            })}\n            {!!filteredSetbacks.length && (\n              <Button\n                color=\"primary\"\n                onClick={() => {\n                  selectedSetbacks.add(getRandomSetback());\n                  setUnitSetbacks(\n                    forceId,\n                    unitId,\n                    Array.from(selectedSetbacks)\n                  );\n                }}\n              >\n                Generate <FontAwesomeIcon icon={faDice} />\n              </Button>\n            )}\n          </div>\n          <hr />\n          <div>\n            {perkOrder.map((level) => {\n              const thePerks = sortBy(\n                get(perksByLevel, `[${level}]`, []),\n                \"name\"\n              );\n              const availablePerks = Math.floor(perksLeft / level);\n              return (\n                <>\n                  <div>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <span className=\"text-left\">\n                        <h4 className=\"text-left\" style={{ marginBottom: 0 }}>\n                          <b>{`${formatLevel(level)} Perks`}</b>{\" \"}\n                          <small className=\"badge badge-secondary\">\n                            {\" \"}\n                            {`${availablePerks} Available`}\n                          </small>\n                        </h4>\n                      </span>\n                      <div className=\"d-flex justify-content-end\">\n                        {!showPerkLevel[level] && (\n                          <Button\n                            style={{ width: \"40px\" }}\n                            variant=\"outline-secondary\"\n                            color=\"primary\"\n                            onClick={() => {\n                              setShowPerkLevel({\n                                ...showPerkLevel,\n                                [level]: true,\n                              });\n                            }}\n                          >\n                            <FontAwesomeIcon icon={faChevronDown} />\n                          </Button>\n                        )}\n                        {!!showPerkLevel[level] && (\n                          <Button\n                            style={{ width: \"40px\" }}\n                            variant=\"outline-secondary\"\n                            color=\"primary\"\n                            onClick={() => {\n                              setShowPerkLevel({\n                                ...showPerkLevel,\n                                [level]: false,\n                              });\n                            }}\n                          >\n                            <FontAwesomeIcon icon={faChevronUp} />\n                          </Button>\n                        )}\n                      </div>\n                    </div>\n                    <hr />\n                  </div>\n                  <Collapse in={showPerkLevel[level]}>\n                    <div>\n                      {thePerks.map((perk) => {\n                        const perkCost = data.resolvePoints(perk.points, {\n                          unit,\n                        });\n                        return (\n                          <div>\n                            <div className=\"d-flex justify-content-between align-items-center\">\n                              <span className=\"text-left\">\n                                <b>{`${perk.name} (${perkCost} pts)`}</b>\n                                <p\n                                  style={{\n                                    marginBottom: 0,\n                                    marginRight: \"5px\",\n                                  }}\n                                  className=\"text-left\"\n                                >{`${perk.description}`}</p>\n                              </span>\n                              <div className=\"d-flex justify-content-end\">\n                                {!selectedPerks.has(perk.id) && (\n                                  <Button\n                                    style={{ width: \"40px\" }}\n                                    disabled={!canGetPerk(level)}\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      selectedPerks.add(perk.id);\n                                      setUnitPerks(\n                                        forceId,\n                                        unitId,\n                                        Array.from(selectedPerks)\n                                      );\n                                    }}\n                                  >\n                                    <FontAwesomeIcon icon={faCheck} />\n                                  </Button>\n                                )}\n                                {!!selectedPerks.has(perk.id) && (\n                                  <Button\n                                    style={{ width: \"40px\" }}\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      selectedPerks.delete(perk.id);\n                                      setUnitPerks(\n                                        forceId,\n                                        unitId,\n                                        Array.from(selectedPerks)\n                                      );\n                                    }}\n                                  >\n                                    <FontAwesomeIcon icon={faTimes} />\n                                  </Button>\n                                )}\n                              </div>\n                            </div>\n                            <hr />\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </Collapse>\n                </>\n              );\n            })}\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              hideModal();\n            }}\n          >\n            Done\n          </Button>{\" \"}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n","import {\n  faArrowLeft, faArrowRight, faBook, faUser\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Add as AddIcon, MoreVert as MoreVertIcon } from \"@mui/icons-material\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FlashOnIcon from '@mui/icons-material/FlashOn';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport PrintIcon from '@mui/icons-material/Print';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport {\n  Alert, Box, Card,\n  CardContent,\n  CardHeader, FormGroup, IconButton, ListItem, ListItemButton, ListItemIcon, ListItemText, ListSubheader, Menu,\n  MenuItem, ScopedCssBaseline, Stack, Typography\n} from \"@mui/material\";\nimport Container from \"@mui/material/Container\";\nimport Link from '@mui/material/Link';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { InputNumber } from \"components/bootstrap\";\nimport CustomCircularProgress from \"components/CustomCircularProgress\";\nimport { Dropdown } from 'components/dropdown';\nimport { PrintView } from \"components/print\";\nimport { DataContext, useModal } from \"hooks\";\nimport {\n  every, find, get, isEqual, isNil, sum, toNumber, uniqBy\n} from \"lodash\";\nimport ChessPawnIcon from \"mdi-material-ui/ChessPawn\";\nimport { useSnackbar } from \"notistack\";\nimport React, {\n  useContext, useEffect, useRef, useState\n} from \"react\";\nimport { useParams } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useReactToPrint } from \"react-to-print\";\nimport { UpdateList } from 'routes/factions/modals';\nimport styled from \"styled-components\";\nimport { getTextColor, hexToRgb } from \"utils/colors\";\nimport { BASE_THEME } from 'utils/constants';\nimport { DataAPI, mergeGlobalData } from \"utils/data\";\nimport { downloadFile, readFileContent } from \"utils/files\";\nimport { formatLevel } from \"utils/format\";\nimport { insert } from \"utils/misc\";\nimport {\n  AddForce, AddLegend, AddUnit,\n  ChooseSubFaction,\n  EditUnit, EditUnitCampaign, ViewActionReference, ViewLegend, ViewPowers, ViewStrategies, ViewUnit\n} from \"./modals\";\n\nconst PrintStyles = styled.div`\n\n`;\n\nconst pageStyle = `\n`;\n\nexport default React.memo((props) => {\n  const { listId } = useParams();\n  const [\n    {\n      data: someData,\n      coreData,\n      fetchFaction,\n      setData,\n      isLoading,\n      fetchGame,\n      userPrefs,\n      setAppState\n    },\n  ] = useContext(DataContext);\n  const list = get(someData, `lists[${listId}]`, {});\n  const gameName = get(list, 'gameId');\n  const game = get(someData, `gameData.games[${gameName}]`, {});\n  const gameType = get(game, \"gameType\", \"battle\");\n  const isSkirmish = gameType === \"skirmish\";\n  const globalData = mergeGlobalData(game, someData);\n  const data = DataAPI(game, globalData);\n  const lists = get(someData, `lists[${gameName}]`, {});\n  const fileDialog = React.useRef();\n  const orgs = data.getRawOrganizations();\n  const { enqueueSnackbar } = useSnackbar();\n  const shouldStartEditMode = gameName && !get(list, \"forces\", []).length;\n  const [editMode, setEditMode] = useState(shouldStartEditMode);\n  const [showReserves, setShowReserves] = useState({});\n  // const theme = useTheme();\n  const componentRef = useRef();\n  const doPrint = useReactToPrint({\n    pageStyle: pageStyle,\n    content: () => componentRef.current,\n  });\n  const handlePrint = () => {\n    doPrint();\n  };\n  const LIST_TYPES = [\n    { label: \"Competitive\", value: \"competitive\" },\n    { label: \"Narrative\", value: \"narrative\" },\n    { label: \"Campaign\", value: \"campaign\" },\n  ];\n  const calculateUnitPoints = (\n    unit,\n    faction,\n    options,\n    selectedOptions,\n    selectedPerks,\n    selectedSetbacks\n  ) => {\n    let cost = data.getUnitPoints(unit, faction);\n    let unitModels = sum(\n      get(unit, \"models\", []).map((model) => toNumber(get(model, \"min\", 0)))\n    );\n    // First scan for any new models in the unit\n    options.forEach((option, idx) => {\n      option.list.forEach((item, itemIdx) => {\n        const selected = toNumber(\n          get(selectedOptions, `[${idx}][${itemIdx}]`, 0)\n        );\n        if (item.models && selected) {\n          unitModels += selected;\n        }\n      });\n    });\n    options.forEach((option, idx) => {\n      option.list.forEach((item, itemIdx) => {\n        const selected = get(selectedOptions, `[${idx}][${itemIdx}]`);\n        if (item.all && selected) {\n          cost += item.points * unitModels;\n        } else if (selected) {\n          cost += item.points * selected;\n        }\n      });\n    });\n    selectedPerks.forEach((perk) => {\n      cost += data.resolvePoints(\n        get(data.getPerk(faction, perk), \"points\", 0),\n        { unit }\n      );\n    });\n    selectedSetbacks.forEach((setback) => {\n      cost += data.resolvePoints(\n        get(data.getSetback(faction, setback), \"points\", 0),\n        { unit }\n      );\n    });\n    return cost;\n  };\n  const forces = get(list, \"forces\", [])\n    .filter(\n      (force) =>\n        !!data.getFactionWithSubfaction(\n          force.factionId,\n          force.subFactionId || \"none\"\n        )\n    )\n    .map((force, forceId) => {\n      const forceFaction = data.getFactionWithSubfaction(\n        force.factionId,\n        force.subFactionId || \"none\"\n      );\n      if (!get(forceFaction, \"units\")) {\n        return force;\n      }\n      const forceReserves = get(list, `reserves[${force.factionId}]`, []);\n      const availablePerks = new Set(\n        data.getPerks(forceFaction).map((perk) => perk.id)\n      );\n      const availableSetbacks = new Set(\n        data.getSetbacks(forceFaction).map((setback) => setback.id)\n      );\n      const forceUnits = get(force, \"units\", []);\n      const processUnits = (daUnits) => {\n        return daUnits\n          .filter((theUnit) => !!data.getUnit(forceFaction, theUnit.id))\n          .map((theUnit, unitId) => {\n            const unitKey = theUnit.id;\n            const unit = data.getUnit(forceFaction, unitKey);\n            const selectedOptions = get(theUnit, `selectedOptions`, []);\n            // Get raw option list\n            let optionList = data.getOptionsList(unit, forceFaction);\n            const modelCounts = {};\n            get(unit, \"models\", []).forEach((model, index) => {\n              const count = model.min || 0;\n              if (!isNil(modelCounts[index])) {\n                modelCounts[index] += count;\n              } else {\n                modelCounts[index] = count;\n              }\n            });\n            optionList.forEach((option, idx) => {\n              option.list.forEach((optItem, optIdx) => {\n                const selections = get(\n                  selectedOptions,\n                  `[${idx}][${optIdx}]`,\n                  0\n                );\n                const optModels = get(optItem, \"modelIds\", [])\n                  .flat()\n                  .map((model) => model.id || model);\n                optModels.forEach((model) => {\n                  if (!isNil(modelCounts[model])) {\n                    modelCounts[model] += selections;\n                  } else {\n                    modelCounts[model] = selections;\n                  }\n                });\n              });\n            });\n            const oldModelCounts = { ...modelCounts };\n            optionList.forEach((option, idx) => {\n              option.list.forEach((optItem, optIdx) => {\n                const selections = get(\n                  selectedOptions,\n                  `[${idx}][${optIdx}]`,\n                  0\n                );\n                const optReplacedModels = get(optItem, \"replacedModel\", [])\n                  .flat()\n                  .map((model) => model.id || model);\n                optReplacedModels.forEach((model) => {\n                  if (!isNil(modelCounts[model])) {\n                    modelCounts[model] -= selections;\n                  } else {\n                    modelCounts[model] = -selections;\n                  }\n                });\n              });\n            });\n            // Adjust for model counts\n            optionList = data.getOptionsList(unit, forceFaction, {\n              selectedModels: modelCounts,\n              selectedModelsRaw: oldModelCounts,\n            });\n            const selectedModels = uniqBy(\n              [\n                ...optionList.map((option, idx) => {\n                  return [\n                    ...option.list\n                      .filter((optItem, optIdx) => {\n                        const selections = get(\n                          selectedOptions,\n                          `[${idx}][${optIdx}]`,\n                          0\n                        );\n                        return selections > 0;\n                      })\n                      .map((opt) => get(opt, \"model\", []).flat())\n                      .flat(),\n                  ];\n                }, []),\n              ].flat(),\n              (item) => item.id || item\n            );\n            const unitModels = [\n              ...get(unit, \"models\", []),\n              ...data.getModelList(selectedModels, forceFaction),\n            ];\n            const selectedPerks = get(theUnit, \"selectedPerks\", []).filter(\n              (perk) => availablePerks.has(perk)\n            );\n            const selectedSetbacks = get(\n              theUnit,\n              \"selectedSetbacks\",\n              []\n            ).filter((setback) => availableSetbacks.has(setback));\n            const thing = {\n              ...unit,\n              customName: theUnit.customName,\n              experience: theUnit.experience,\n              modelCounts,\n              selectedOptionsList: optionList\n                .map((option, idx) => {\n                  return {\n                    ...option,\n                    list: option.list\n                      .map((optItem, optIdx) => {\n                        const selections = get(\n                          selectedOptions,\n                          `[${idx}][${optIdx}]`,\n                          0\n                        );\n                        return {\n                          ...optItem,\n                          text:\n                            optItem.text +\n                            ` (${selections} ${selections > 1 ? \"selections\" : \"selection\"\n                            })`,\n                        };\n                      })\n                      .filter((optItem, optIdx) => {\n                        const selections = get(\n                          selectedOptions,\n                          `[${idx}][${optIdx}]`,\n                          0\n                        );\n                        return selections > 0;\n                      }),\n                  };\n                })\n                .filter((option) => option.list.length),\n              selectedModels,\n              selectedWeapons: uniqBy(\n                [\n                  ...unitModels\n                    .map((model) => get(model, \"weapons\", []))\n                    .flat(),\n                  ...optionList.map((option, idx) => {\n                    return [\n                      ...option.list\n                        .filter((optItem, optIdx) => {\n                          const selections = get(\n                            selectedOptions,\n                            `[${idx}][${optIdx}]`,\n                            0\n                          );\n                          return selections > 0;\n                        })\n                        .map((opt) => get(opt, \"weapons\", []).flat())\n                        .flat(),\n                    ];\n                  }, []),\n                ].flat(),\n                (item) => item.id || item\n              ),\n              selectedRules: uniqBy(\n                [\n                  ...get(unit, \"rules\", []),\n                  ...unitModels.map((model) => get(model, \"rules\", [])).flat(),\n                  ...optionList.map((option, idx) => {\n                    return [\n                      ...option.list\n                        .filter((optItem, optIdx) => {\n                          const selections = get(\n                            selectedOptions,\n                            `[${idx}][${optIdx}]`,\n                            0\n                          );\n                          return selections > 0;\n                        })\n                        .map((opt) => get(opt, \"rules\", []).flat())\n                        .flat(),\n                    ];\n                  }, []),\n                ].flat(),\n                (item) => item.id || item\n              ),\n              id: unitId,\n              optionList,\n              selectedPerks,\n              selectedSetbacks,\n              totalModels: sum(Object.values(modelCounts)),\n              selectedOptions: optionList.map((option, idx) => {\n                if (option.list) {\n                  const indValue = get(selectedOptions, `[${idx}]`, []);\n                  return option.list.map((opt, optIdx) =>\n                    !isNil(indValue[optIdx]) ? indValue[optIdx] : 0\n                  );\n                }\n                return !isNil(selectedOptions[idx]) ? selectedOptions[idx] : [];\n              }),\n              powerSpecialty: theUnit?.powerSpecialty\n            };\n            thing.points = calculateUnitPoints(\n              thing,\n              forceFaction,\n              optionList,\n              selectedOptions,\n              selectedPerks,\n              selectedSetbacks\n            );\n            return thing;\n          });\n      };\n      return {\n        ...force,\n        ...get(orgs, `[${force.id}]`, {}),\n        faction: forceFaction,\n        legends: get(force, \"legends\", []).map((theLegend, relicId) => {\n          const legendKey = theLegend.id;\n          const relic = data.getRelic(forceFaction, legendKey);\n          return {\n            ...relic,\n            id: relicId,\n            points: data.getRelicCost(relic, forceFaction),\n          };\n        }),\n        units: processUnits(forceUnits),\n        reserves: processUnits(forceReserves),\n      };\n    });\n  const forceFactionIds = get(list, \"forces\", [])\n    .map((force) => force.factionId)\n    .join(\",\");\n  useEffect(() => {\n    if (!get(someData, `gameData.games[${gameName}].factions`)) {\n      fetchGame(gameName);\n    }\n    // Use a trick to only fetch the first missing faction at a time\n    forces\n      .filter((force) => {\n        const factionName = force.factionId;\n        const faction = get(\n          someData,\n          `gameData.games[${gameName}].factions[${factionName}]`\n        );\n        return !get(faction, \"units\");\n      })\n      .slice(0, 1)\n      .forEach((force) => {\n        const factionName = force.factionId;\n        const faction = get(\n          someData,\n          `gameData.games[${gameName}].factions[${factionName}]`\n        );\n        if (!get(faction, \"units\") && !isLoading) {\n          fetchFaction(gameName, factionName);\n        }\n      });\n  }, [coreData, forces.length, forceFactionIds, someData, gameName, forces, fetchGame, isLoading, fetchFaction]);\n  const [showAddForce, hideAddForce] = useModal(\n    ({ extraProps }) => (\n      <AddForce\n        list={list}\n        hideModal={hideAddForce}\n        data={data}\n        userPrefs={userPrefs}\n        addForce={addForce}\n        forces={forces}\n      />\n    ),\n    [forces, list]\n  );\n  useEffect(() => {\n    setShowReserves({});\n  }, [forces.length]);\n  useEffect(() => {\n    if (shouldStartEditMode) {\n      showAddForce();\n    }\n  }, [shouldStartEditMode, showAddForce]);\n  const allFactionsLoaded = every(forces, (force) => {\n    const factionName = force.factionId;\n    const faction = get(\n      someData,\n      `gameData.games[${gameName}].factions[${factionName}]`\n    );\n    const factionUnits = get(faction, \"units\");\n    const factionUrl = get(faction, \"url\");\n    return !!factionUnits || !factionUrl;\n  });\n  const downloadList = () => {\n    downloadFile(\n      JSON.stringify(\n        {\n          ...list,\n        },\n        null,\n        2\n      ),\n      \"data:text/json\",\n      `${list.name}.json`\n    );\n  };\n  const uploadList = (event) => {\n    event.preventDefault();\n    const file = get(event, \"target.files[0]\");\n    if (file) {\n      readFileContent(file)\n        .then((content) => {\n          let listObject = {};\n          try {\n            listObject = JSON.parse(content);\n          } catch (e) {\n            return Promise.reject(e);\n          }\n          if (listObject.forces) {\n            const newArmyData = {\n              ...listObject,\n            };\n            updateList(newArmyData);\n            enqueueSnackbar(`List successfully imported.`, {\n              appearance: \"success\",\n            });\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(`List failed to import. ${error.message}`, {\n            appearance: \"error\",\n          });\n        });\n    }\n    fileDialog.current.value = null;\n  };\n  const setLists = (listData) => {\n    const newGameData = {\n      ...someData,\n      lists: {\n        ...get(someData, \"lists\", {}),\n        ...listData\n      },\n    };\n    setData(newGameData);\n  };\n  const updateList = (newData) => {\n    setLists({\n      ...lists,\n      [listId]: {\n        ...list,\n        ...newData,\n      },\n    });\n  };\n  const renderPrintMode = () => {\n    const theme = createTheme(BASE_THEME);\n    return (\n      <ThemeProvider theme={theme}>\n        <ScopedCssBaseline>\n          <PrintView list={list} data={data} forces={forces} />\n        </ScopedCssBaseline>\n      </ThemeProvider>\n    )\n  };\n  const updateForce = (forceId, newData) => {\n    const mappedForces = get(list, \"forces\", []).map((force, index) =>\n      index === forceId ? { ...force, ...newData } : force\n    );\n    updateList({\n      forces: mappedForces,\n    });\n  };\n  // const setFaction = (forceId, factionId) => {\n  //   updateForce(forceId, {\n  //     factionId,\n  //   });\n  // };\n  const setSubFaction = (forceId, subFactionId) => {\n    const factionId = get(list, `forces[${forceId}].factionId`, []);\n    const forceFaction = data.getFactionWithSubfaction(\n      factionId,\n      subFactionId || \"none\"\n    );\n    const forceUnits = get(list, `forces[${forceId}].units`, []);\n    const forceLegends = get(list, `forces[${forceId}].legends`, []);\n    updateForce(forceId, {\n      subFactionId,\n      legends: forceLegends.filter(\n        (relic) => !!data.getRelic(forceFaction, relic.id)\n      ),\n      units: forceUnits.filter((unit) => !!data.getUnit(forceFaction, unit.id)),\n    });\n  };\n  const addLegend = (forceId, legend) => {\n    let newArr = [];\n    newArr = [...get(list, `forces[${forceId}].legends`, []), legend];\n    updateForce(forceId, {\n      legends: newArr,\n    });\n  };\n  const addUnitToForce = (forceId, unit, index) => {\n    const showingReserves = !!showReserves[forceId];\n    const theForce = get(list, `forces[${forceId}]`, []);\n    const factionId = get(theForce, \"factionId\");\n    if (showingReserves) {\n      let newArr = [];\n      if (index) {\n        newArr = insert(get(list, `reserves[${factionId}]`, []), index, unit);\n      } else {\n        newArr = [...get(list, `reserves[${factionId}]`, []), unit];\n      }\n      updateList({\n        reserves: {\n          ...get(list, `reserves`, []),\n          [factionId]: newArr,\n        },\n      });\n    } else {\n      let newArr = [];\n      if (index) {\n        newArr = insert(get(list, `forces[${forceId}].units`, []), index, unit);\n      } else {\n        newArr = [...get(list, `forces[${forceId}].units`, []), unit];\n      }\n      updateForce(forceId, {\n        units: newArr,\n      });\n    }\n  };\n  const updateUnit = (forceId, unitId, newData) => {\n    const showingReserves = !!showReserves[forceId];\n    const theForce = get(list, `forces[${forceId}]`, []);\n    const factionId = get(theForce, \"factionId\");\n    const forceReserves = get(list, `reserves[${factionId}]`, []);\n    if (showingReserves) {\n      updateList({\n        reserves: {\n          ...get(list, `reserves`, []),\n          [factionId]: forceReserves.map((unit, index) =>\n            index === unitId ? { ...unit, ...newData } : unit\n          ),\n        },\n      });\n    } else {\n      updateForce(forceId, {\n        units: get(list, `forces[${forceId}].units`, []).map((unit, index) =>\n          index === unitId ? { ...unit, ...newData } : unit\n        ),\n      });\n    }\n  };\n  const getUnit = (forceId, unitId) => {\n    const showingReserves = !!showReserves[forceId];\n    if (showingReserves) {\n      return get(forces, `[${forceId}].reserves[${unitId}]`, {});\n    } else {\n      return get(forces, `[${forceId}].units[${unitId}]`, {});\n    }\n  };\n  const deleteUnit = (forceId, unitId) => {\n    const showingReserves = !!showReserves[forceId];\n    const theForce = get(list, `forces[${forceId}]`, []);\n    const factionId = get(theForce, \"factionId\");\n    const forceReserves = get(list, `reserves[${factionId}]`, []);\n    if (showingReserves) {\n      updateList({\n        reserves: {\n          ...get(list, `reserves`, []),\n          [factionId]: forceReserves.filter((unit, idx) => idx !== unitId),\n        },\n      });\n    } else {\n      updateForce(forceId, {\n        units: get(list, `forces[${forceId}].units`, []).filter(\n          (unit, idx) => idx !== unitId\n        ),\n      });\n    }\n  };\n  const moveUnitReserves = (forceId, unitId) => {\n    const theForce = get(list, `forces[${forceId}]`, []);\n    const theUnit = get(list, `forces[${forceId}].units[${unitId}]`, []);\n    const factionId = get(theForce, \"factionId\");\n    const forceReserves = get(list, `reserves[${factionId}]`, []);\n    updateList({\n      reserves: {\n        ...get(list, `reserves`, []),\n        [factionId]: [...forceReserves, theUnit],\n      },\n      forces: get(list, \"forces\", []).map((force, index) =>\n        index === forceId\n          ? {\n            ...force,\n            units: get(list, `forces[${forceId}].units`, []).filter(\n              (unit, idx) => idx !== unitId\n            ),\n          }\n          : force\n      ),\n    });\n  };\n  const moveUnitForce = (forceId, unitId) => {\n    const theForce = get(list, `forces[${forceId}]`, []);\n    const factionId = get(theForce, \"factionId\");\n    const theUnit = get(list, `reserves[${factionId}][${unitId}]`, []);\n    const forceReserves = get(list, `reserves[${factionId}]`, []);\n    updateList({\n      forces: get(list, \"forces\", []).map((force, index) =>\n        index === forceId\n          ? {\n            ...force,\n            units: [...get(list, `forces[${forceId}].units`, []), theUnit],\n          }\n          : force\n      ),\n      reserves: {\n        ...get(list, `reserves`, []),\n        [factionId]: forceReserves.filter((unit, idx) => idx !== unitId),\n      },\n    });\n  };\n  const deleteLegend = (forceId, legendId) => {\n    updateForce(forceId, {\n      legends: get(list, `forces[${forceId}].legends`, []).filter(\n        (unit, idx) => idx !== legendId\n      ),\n    });\n  };\n  const setUnitOptions = (forceId, unitId, data) => {\n    updateUnit(forceId, unitId, {\n      selectedOptions: data,\n    });\n  };\n  const setUnitPowerSpecialty = (forceId, unitId, data) => {\n    updateUnit(forceId, unitId, {\n      powerSpecialty: data,\n    });\n  };\n  const setUnitPerks = (forceId, unitId, data) => {\n    updateUnit(forceId, unitId, {\n      selectedPerks: data,\n    });\n  };\n  const setUnitSetbacks = (forceId, unitId, data) => {\n    updateUnit(forceId, unitId, {\n      selectedSetbacks: data,\n    });\n  };\n  const setUnitName = (forceId, unitId, data) => {\n    updateUnit(forceId, unitId, {\n      customName: data,\n    });\n  };\n  const addForce = (force) => {\n    updateList({\n      forces: [...get(list, \"forces\", []), force],\n    });\n  };\n  const deleteForce = (id) => {\n    updateList({\n      forces: get(list, \"forces\", []).filter((force, index) => index !== id),\n    });\n  };\n  const [showChooseSubfaction, hideChooseSubfaction] = useModal(\n    ({ extraProps }) => (\n      <ChooseSubFaction\n        hideModal={hideChooseSubfaction}\n        data={data}\n        setSubFaction={setSubFaction}\n        {...extraProps}\n      />\n    ),\n    [forces, list]\n  );\n  const [showAddUnit, hideAddUnit] = useModal(\n    ({ extraProps }) => (\n      <AddUnit\n        hideModal={hideAddUnit}\n        data={data}\n        addUnit={addUnitToForce}\n        {...extraProps}\n      />\n    ),\n    [forces, list]\n  );\n  const [showAddLegend, hideAddLegend] = useModal(\n    ({ extraProps }) => (\n      <AddLegend\n        hideModal={hideAddLegend}\n        list={list}\n        data={data}\n        addLegend={addLegend}\n        {...extraProps}\n      />\n    ),\n    [forces, list]\n  );\n  const [showEditUnit, hideEditUnit] = useModal(\n    ({ extraProps }) => (\n      <EditUnit\n        hideModal={hideEditUnit}\n        data={data}\n        list={list}\n        forces={forces}\n        setUnitName={setUnitName}\n        setUnitPowerSpecialty={setUnitPowerSpecialty}\n        setUnitOptions={setUnitOptions}\n        getUnit={getUnit}\n        {...extraProps}\n      />\n    ),\n    [list, forces]\n  );\n  const [showEditUnitCampaign, hideEditUnitCampaign] = useModal(\n    ({ extraProps }) => (\n      <EditUnitCampaign\n        editMode={editMode}\n        hideModal={hideEditUnitCampaign}\n        data={data}\n        list={list}\n        forces={forces}\n        getUnit={getUnit}\n        updateUnit={updateUnit}\n        setUnitPerks={setUnitPerks}\n        setUnitSetbacks={setUnitSetbacks}\n        {...extraProps}\n      />\n    ),\n    [list, forces]\n  );\n  const [showViewUnit, hideViewUnit] = useModal(\n    ({ extraProps }) => (\n      <ViewUnit\n        hideModal={hideViewUnit}\n        data={data}\n        getUnit={getUnit}\n        {...extraProps}\n      />\n    ),\n    [forces, list]\n  );\n  const [showViewLegend, hideViewLegend] = useModal(\n    ({ extraProps }) => (\n      <ViewLegend hideModal={hideViewLegend} data={data} {...extraProps} />\n    ),\n    [forces, list]\n  );\n  const [showViewStrategies, hideViewStrategies] = useModal(\n    ({ extraProps }) => (\n      <ViewStrategies\n        hideModal={hideViewStrategies}\n        data={data}\n        {...extraProps}\n      />\n    ),\n    [forces, list]\n  );\n  const [showViewPowers, hideViewPowers] = useModal(\n    ({ extraProps }) => (\n      <ViewPowers hideModal={hideViewPowers} data={data} {...extraProps} />\n    ),\n    [forces, list]\n  );\n  const [showViewActionReference, hideViewActionReference] = useModal(\n    ({ extraProps }) => (\n      <ViewActionReference\n        hideModal={hideViewActionReference}\n        data={data}\n        isSkirmish={isSkirmish}\n        {...extraProps}\n      />\n    ),\n    [forces, list, isSkirmish]\n  );\n  const [showUpdateList, hideUpdateList] = useModal(\n    ({ extraProps }) => (\n      <UpdateList\n        hideModal={hideUpdateList}\n        lists={lists}\n        listId={listId}\n        data={data}\n        updateList={(listId, data) => {\n          updateList(data);\n        }}\n        {...extraProps}\n      />\n    ),\n    [forces, lists]\n  );\n  React.useEffect(() => {\n    setAppState({\n      contextActions: [\n        ...(!editMode ? [\n          {\n            name: 'Edit',\n            icon: <EditIcon />,\n            onClick: () => setEditMode(true)\n          }\n        ] : []),\n        ...(!!editMode ? [\n          {\n            name: 'View',\n            icon: <VisibilityIcon />,\n            onClick: () => setEditMode(false)\n          }\n        ] : []),\n        ...(!!editMode ? [\n          {\n            name: 'Add',\n            icon: <AddIcon />,\n            onClick: () => showAddForce()\n          }\n        ] : []),\n        ...(!editMode ? [\n          {\n            name: 'Reference',\n            icon: <MenuBookIcon />,\n            onClick: () => showViewActionReference()\n          }\n        ] : []),\n        {\n          name: 'Download',\n          icon: <DownloadIcon />,\n          onClick: () => downloadList()\n        },\n        {\n          name: 'Print',\n          icon: <PrintIcon />,\n          onClick: () => handlePrint()\n        },\n        {\n          name: 'Settings',\n          icon: <SettingsIcon />,\n          onClick: () => showUpdateList()\n        }\n      ]\n    })\n    return () => {\n      setAppState({\n        contextActions: []\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ editMode ]);\n  // const [dialOpen, setDialOpen] = React.useState(false);\n  if (!someData || !allFactionsLoaded) {\n    return (\n      <Box sx={{ textAlign: \"center\" }}>\n        <CustomCircularProgress />\n      </Box>\n    );\n  }\n  const listType = list.type || \"competitive\";\n  const listTypeName =\n    (find(LIST_TYPES, (myType) => myType.value === list.type) || {}).label ||\n    \"Competitive\";\n  const totalForcePoints = sum(\n    forces.map((force) => {\n      const unitPoints = sum(\n        get(force, \"units\", []).map((unit) => unit.points)\n      );\n      const legendPoints = sum(\n        get(force, \"legends\", []).map((legend) => legend.points)\n      );\n      return unitPoints + legendPoints;\n    })\n  );\n  const totalForceReservePoints = sum(\n    forces.map((force) => {\n      const unitPoints = sum(\n        get(force, \"reserves\", []).map((unit) => unit.points)\n      );\n      return unitPoints;\n    })\n  );\n  const SPMult = isSkirmish ? 50 : 500;\n  const LegendMult = isSkirmish ? 150 : 500;\n  const totalSP =\n    2 +\n    Math.round(totalForcePoints / SPMult) -\n    sum(forces.map((force) => force.cost));\n  const legendLimit = Math.round(totalForcePoints / LegendMult);\n  const validationErrors = [];\n  if (listType !== \"narrative\") {\n    const totalLegends = sum(\n      forces.map((force) => {\n        return get(force, \"legends\", []).length;\n      })\n    );\n    if (totalLegends > legendLimit) {\n      const exceededLegends = totalLegends - legendLimit;\n      validationErrors.push({\n        type: \"error\",\n        text: `List has ${exceededLegends} too many legends`,\n      });\n    }\n    forces.forEach((force) => {\n      const forceFaction = get(force, \"faction\", {});\n      const forceFactionId = get(force, \"faction.id\");\n      const forceSubFactionId = get(force, \"subFactionId\");\n      const forceSubfaction = data.getSubfaction(\n        forceFactionId,\n        forceSubFactionId\n      );\n      const name = `${forceFaction.name} ${!forceSubFactionId || forceSubFactionId === \"none\"\n        ? \"\"\n        : `(${forceSubfaction.name})`\n        } - ${force.name}`;\n      const forceCategories = Object.keys(get(force, \"categories\", {}));\n      forceCategories.forEach((catKey) => {\n        const forceUnits = get(force, \"units\", []);\n        const category = data.getCategory(catKey);\n        const categoryData = data.getOrganizationCategory(force, catKey);\n        const unitCatCount =\n          forceUnits.filter((myUnit) => myUnit.category === catKey).length || 0;\n        if (unitCatCount < categoryData.min) {\n          const unitDiff = categoryData.min - unitCatCount;\n          validationErrors.push({\n            type: \"error\",\n            text: `${name} requires ${unitDiff} more ${category.name} unit${unitDiff > 1 ? \"s\" : \"\"\n              }`,\n          });\n        }\n        if (unitCatCount > categoryData.max) {\n          const unitDiff = unitCatCount - categoryData.max;\n          validationErrors.push({\n            type: \"error\",\n            text: `${name} has ${unitDiff} too many ${category.name} units`,\n          });\n        }\n      });\n    });\n  }\n  const allPowerSpecialties = [];\n  forces.forEach((force) => {\n    force?.units.forEach((unit) => {\n      const powerSp = unit?.powerSpecialty;\n      if (powerSp) {\n        allPowerSpecialties.push(powerSp);\n      }\n    })\n  });\n  if (!gameName) {\n    return (\n      <Container>\n        <Typography align=\"center\">\n          This list does not exist. Click <Link component={RouterLink}\n            to={'/lists'}\n          >here</Link> to return to the rosters screen.\n        </Typography>\n      </Container>\n    );\n  }\n  return (\n    <>\n      <div style={{ display: \"none\" }}>\n        <PrintStyles ref={componentRef}>{renderPrintMode()}</PrintStyles>\n      </div>\n      <Container>\n        <Typography\n          style={{ wordBreak: 'break-all' }}\n          variant=\"h4\"\n          align=\"center\"\n          sx={{ mb: 1 }}\n        >{`${list.name}`}</Typography>\n        <Typography align=\"center\" sx={{ mb: 2 }}>\n          {`${listTypeName}, ${totalForcePoints} pts`},\n          {listType === \"campaign\"\n            ? ` ${totalForceReservePoints} pts of reserves,`\n            : \"\"}\n          {` ${totalSP} SP`},{\" \"}\n          {`${legendLimit} Legend${legendLimit > 1 ? \"s\" : \"\"}`}\n        </Typography>\n        {validationErrors.map((error, idx) => (\n          <Alert\n            key={idx}\n            severity={error.type || \"info\"}\n            variant=\"filled\"\n            sx={{ mb: 2 }}\n          >\n            {error.text}\n          </Alert>\n        ))}\n        <Card\n          className=\"no-break\"\n          sx={{\n            border: `2px solid rgb(57, 110, 158)`,\n            mb: 2,\n          }}\n        >\n          <CardHeader\n            sx={{ backgroundColor: \"rgb(57, 110, 158)\", color: \"white\", py: 1 }}\n            title={\n              <Typography variant=\"h5\" component=\"div\">\n                Game Trackers\n              </Typography>\n            }\n          />\n          <CardContent>\n            <Stack direction=\"column\" spacing={2}>\n              <FormGroup>\n                <InputNumber\n                  fullWidth\n                  label={\"Strategy Points\"}\n                  min={0}\n                  type=\"number\"\n                  color=\"primary\"\n                  value={list.strategyPoints || 0}\n                  onChange={(value) => updateList({ strategyPoints: value })}\n                  allowReset\n                />\n              </FormGroup>\n              <FormGroup>\n                <InputNumber\n                  fullWidth\n                  label={\"Victory Points\"}\n                  min={0}\n                  type=\"number\"\n                  color=\"primary\"\n                  value={list.victoryPoints || 0}\n                  onChange={(value) => updateList({ victoryPoints: value })}\n                  allowReset\n                />\n              </FormGroup>\n            </Stack>\n          </CardContent>\n        </Card>\n\n        {forces.map((force, index) => {\n          const forceFactionId = get(force, \"faction.id\");\n          const forceSubFactionId = get(force, \"subFactionId\");\n          const forceFaction = data.getFactionWithSubfaction(\n            forceFactionId,\n            forceSubFactionId || \"none\"\n          );\n          const rawForceFaction = data.getRawFaction(forceFactionId);\n          const forceSubfaction = data.getSubfaction(\n            forceFactionId,\n            forceSubFactionId || \"none\"\n          );\n          const {\n            color: factionColor,\n          } = forceFaction;\n          const textColor = factionColor\n            ? getTextColor(hexToRgb(factionColor))\n            : \"white\";\n          const forceCategories = Object.keys(get(force, \"categories\", {}));\n          const showingReserves = !!showReserves[index];\n          const forceUnits = showingReserves\n            ? get(force, \"reserves\", [])\n            : get(force, \"units\", []);\n          const factionRelics = data.getRelics(forceFaction);\n          const factionPowers = data.getPowers(forceFaction);\n          const hasPowers =\n            !isNil(rawForceFaction.powers) &&\n            !isEqual(rawForceFaction.powers, {});\n          const rawSubfactions = Object.values(forceFaction.subfactions || []);\n          const hasSubfactions = !!rawSubfactions.length;\n          const factionStrategies = data.getStrategies(forceFaction);\n          const units = data.getUnits(forceFaction);\n          const forceLegends = get(force, \"legends\", []);\n          const listLegendSet = new Set(\n            get(list, \"forces\", [])\n              .map((force) => get(force, \"legends\", []).map((legend) => legend.id))\n              .flat()\n          );\n          const filteredLegends =\n            listType === \"narrative\"\n              ? factionRelics\n              : factionRelics.filter((legend) => !listLegendSet.has(legend.id));\n          const filteredCategories = forceCategories\n            .filter(\n              (catKey) =>\n                editMode ||\n                forceUnits.filter((myUnit) => myUnit.category === catKey).length\n            )\n            .filter((catKey) => {\n              const categoryData = data.getOrganizationCategory(force, catKey);\n              return categoryData.max > 0 || listType === \"narrative\";\n            });\n          return (\n            <Card\n              className=\"no-break\"\n              sx={{\n                border: `2px solid ${factionColor}`,\n                mb: 2,\n              }}\n            >\n              <CardHeader\n                sx={{ backgroundColor: factionColor, color: textColor, py: 1 }}\n                title={\n                  <>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {`${forceFaction.name} ${!forceSubFactionId || forceSubFactionId === \"none\"\n                        ? \"\"\n                        : `(${forceSubfaction.name})`\n                        } - ${showingReserves ? \"Reserves\" : force.name}`}\n                    </Typography>\n                  </>\n                }\n                action={\n                  <Dropdown>\n                    {({ handleClose, open, handleOpen, anchorElement }) => (\n                      <>\n                        <IconButton sx={{ color: 'inherit', mr: 1 }} onClick={handleOpen}>\n                          <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                          anchorOrigin={{\n                            vertical: \"bottom\",\n                            horizontal: \"right\",\n                          }}\n                          transformOrigin={{\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                          }}\n                          anchorEl={anchorElement}\n                          id=\"basic-menu\"\n                          open={open}\n                          onClose={handleClose}\n                          MenuListProps={{\n                            dense: true,\n                            onClick: handleClose,\n                            \"aria-labelledby\": \"basic-button\",\n                          }}\n                        >\n\n                          {!!factionStrategies.length && (\n                            <MenuItem onClick={() =>\n                              showViewStrategies({\n                                forceId: index,\n                                faction: forceFaction,\n                              })}>\n                              <ListItemIcon>\n                                <ChessPawnIcon />\n                              </ListItemIcon>\n                              <ListItemText>View Strategies</ListItemText>\n                            </MenuItem>\n                          )}\n                          {!!factionPowers.length && hasPowers && (\n                            <MenuItem onClick={() =>\n                              showViewPowers({\n                                forceId: index,\n                                faction: forceFaction,\n                                powerSpecialties: allPowerSpecialties\n                              })\n                            }>\n                              <ListItemIcon>\n                                <FlashOnIcon />\n                              </ListItemIcon>\n                              <ListItemText>View Powers</ListItemText>\n                            </MenuItem>\n                          )}\n\n                          {listType === \"campaign\" && (\n                            <>\n                              <MenuItem onClick={() =>\n                                setShowReserves({\n                                  ...showReserves,\n                                  [index]: !showReserves[index],\n                                })\n                              }>\n                                <ListItemIcon>\n                                  <FontAwesomeIcon icon={faUser} />\n                                </ListItemIcon>\n                                <ListItemText>{showingReserves ? \"Force\" : \"Reserves\"}</ListItemText>\n                              </MenuItem>\n                            </>\n                          )}\n                          {!!editMode && hasSubfactions && (\n                            <MenuItem onClick={() =>\n                              showChooseSubfaction({\n                                forceId: index,\n                                faction: forceFaction,\n                              })\n                            }>\n                              <ListItemIcon>\n                                <EditIcon />\n                              </ListItemIcon>\n                              <ListItemText>Change Focus</ListItemText>\n                            </MenuItem>\n                          )}\n\n                          {!!editMode && (\n                            <MenuItem onClick={() => deleteForce(index)\n                            }>\n                              <ListItemIcon>\n                                <DeleteIcon />\n                              </ListItemIcon>\n                              <ListItemText>Delete</ListItemText>\n                            </MenuItem>\n                          )}\n                        </Menu>\n                      </>\n                    )}\n                  </Dropdown>\n\n                }\n              />\n              <CardContent\n                style={{ padding: (filteredCategories.length || forceLegends.length) ? 0 : undefined }}\n              >\n                <>\n                  {!!factionRelics.length &&\n                    !showingReserves &&\n                    (!!editMode || !!forceLegends.length) && (\n                      <>\n                        <ListItem\n                          key={index}\n                          secondaryAction={\n                            <>\n                              {!!editMode && (\n                                <IconButton\n                                  disabled={filteredLegends?.length === 0}\n                                  sx={{ }}\n                                  onClick={() =>\n                                    showAddLegend({\n                                      forceId: index,\n                                      faction: forceFaction,\n                                    })\n                                  }\n                                >\n                                  <AddIcon />\n                                </IconButton>\n                              )}\n                            </>\n                          }\n                          disablePadding\n                        >\n                          <ListSubheader sx={{ flex: 1, zIndex: 0, color: 'inherit' }}>\n                            <Typography\n                              sx={{ py: 1 }}\n                              fontWeight=\"bold\"\n                              variant=\"h6\"\n                            >\n                              Legends\n                            </Typography>\n                          </ListSubheader>\n                        </ListItem>\n                        {forceLegends.map((legend, unitIdx) => {\n                          return (\n                            <>\n                              <ListItem\n                                key={index}\n                                secondaryAction={\n                                  <Dropdown>\n                                    {({ handleClose, open, handleOpen, anchorElement }) => (\n                                      <>\n                                        <IconButton sx={{ }} onClick={handleOpen}>\n                                          <MoreVertIcon />\n                                        </IconButton>\n                                        <Menu\n                                          anchorOrigin={{\n                                            vertical: \"bottom\",\n                                            horizontal: \"right\",\n                                          }}\n                                          transformOrigin={{\n                                            vertical: \"top\",\n                                            horizontal: \"right\",\n                                          }}\n                                          anchorEl={anchorElement}\n                                          id=\"basic-menu\"\n                                          open={open}\n                                          onClose={handleClose}\n                                          MenuListProps={{\n                                            dense: true,\n                                            onClick: handleClose,\n                                            \"aria-labelledby\": \"basic-button\",\n                                          }}\n                                        >\n                                          <MenuItem onClick={() =>\n                                            showViewLegend({\n                                              faction: forceFaction,\n                                              legend,\n                                            })}>\n                                            <ListItemIcon>\n                                              <VisibilityIcon />\n                                            </ListItemIcon>\n                                            <ListItemText>View</ListItemText>\n                                          </MenuItem>\n                                          {!!editMode && (\n                                            <MenuItem onClick={() =>\n                                              deleteLegend(index, legend.id)\n                                            }>\n                                              <ListItemIcon>\n                                                <DeleteIcon />\n                                              </ListItemIcon>\n                                              <ListItemText>Delete</ListItemText>\n                                            </MenuItem>\n                                          )}\n                                        </Menu>\n                                      </>\n                                    )}\n                                  </Dropdown>\n                                }\n                                disablePadding\n                              >\n                                <ListItemButton\n                                  onClick={(event) => {\n                                    event.preventDefault();\n                                    showViewLegend({\n                                      faction: forceFaction,\n                                      legend,\n                                    });\n                                  }}\n                                >\n                                  <ListItemText\n                                    primary={\n                                      <>\n                                        {legend.name} {`(${legend.points} pts)`}\n                                      </>\n                                    }\n                                  />\n                                </ListItemButton>\n                              </ListItem>\n                            </>\n                          );\n                        })}\n                      </>\n                    )}\n                  {filteredCategories.map((catKey, catIndex) => {\n                    const category = data.getCategory(catKey);\n                    const categoryData = data.getOrganizationCategory(\n                      force,\n                      catKey\n                    );\n                    const unitCatCount = units.filter(\n                      (unit) => unit.category === catKey\n                    ).length;\n                    return (\n                      <>\n                        <ListItem\n                          key={index}\n                          secondaryAction={\n                            <>\n                              {!!editMode && (\n                                <IconButton\n                                  sx={{ }}\n                                  disabled={unitCatCount === 0}\n                                  onClick={() =>\n                                    showAddUnit({\n                                      forceId: index,\n                                      faction: forceFaction,\n                                      units: units.filter(\n                                        (unit) => unit.category === catKey\n                                      ),\n                                    })\n                                  }\n                                >\n                                  <AddIcon />\n                                </IconButton>\n                              )}\n                            </>\n                          }\n                          disablePadding\n                        >\n                          <ListSubheader sx={{ flex: 1, zIndex: 0, backgroundColor: 'background.paper', color: 'inherit' }}>\n                            <Typography\n                              sx={{ py: 1 }}\n                              fontWeight=\"bold\"\n                              variant=\"h6\"\n                            >\n                              {category.name}{\" \"}\n                              {listType !== \"narrative\"\n                                ? `${`(${categoryData.min || 0}-${categoryData.max\n                                })`}`\n                                : \"\"}\n                            </Typography>\n                          </ListSubheader>\n                        </ListItem>\n                        {forceUnits\n                          .filter((unit) => unit.category === catKey)\n                          .map((unit, unitIdx) => {\n                            const unitCopy = showingReserves\n                              ? get(\n                                list,\n                                `reserves[${forceFactionId}][${unit.id}]`\n                              )\n                              : get(list, `forces[${index}].units[${unit.id}]`);\n                            const unitSetbacksCount = get(\n                              unit,\n                              \"selectedSetbacks\",\n                              []\n                            ).length;\n                            const unitLevel = Math.floor(\n                              get(unit, \"experience\", 0) / 5\n                            );\n                            return (\n                              <>\n                                <ListItem\n                                  key={index}\n                                  secondaryAction={\n                                    <Dropdown>\n                                      {({ handleClose, open, handleOpen, anchorElement }) => (\n                                        <>\n                                          <IconButton sx={{ }} onClick={handleOpen}>\n                                            <MoreVertIcon />\n                                          </IconButton>\n                                          <Menu\n                                            anchorOrigin={{\n                                              vertical: \"bottom\",\n                                              horizontal: \"right\",\n                                            }}\n                                            transformOrigin={{\n                                              vertical: \"top\",\n                                              horizontal: \"right\",\n                                            }}\n                                            anchorEl={anchorElement}\n                                            id=\"basic-menu\"\n                                            open={open}\n                                            onClose={handleClose}\n                                            MenuListProps={{\n                                              dense: true,\n                                              onClick: handleClose,\n                                              \"aria-labelledby\": \"basic-button\",\n                                            }}\n                                          >\n                                            <MenuItem onClick={() =>\n                                              showViewUnit({\n                                                unit,\n                                                faction: forceFaction,\n                                              })}>\n                                              <ListItemIcon>\n                                                <VisibilityIcon />\n                                              </ListItemIcon>\n                                              <ListItemText>View</ListItemText>\n                                            </MenuItem>\n                                            {!!editMode && (\n                                              <MenuItem\n                                                onClick={() =>\n                                                  addUnitToForce(\n                                                    index,\n                                                    unitCopy,\n                                                    unit.id + 1\n                                                  )}\n                                              >\n                                                <ListItemIcon>\n                                                  <ContentCopyIcon />\n                                                </ListItemIcon>\n                                                <ListItemText>Copy</ListItemText>\n                                              </MenuItem>\n                                            )}\n                                            {!!editMode && (\n                                              <MenuItem onClick={() => {\n                                                showEditUnit({\n                                                  faction: forceFaction,\n                                                  unitId: unit.id,\n                                                  forceId: index,\n                                                });\n                                              }}>\n                                                <ListItemIcon>\n                                                  <EditIcon />\n                                                </ListItemIcon>\n                                                <ListItemText>Edit</ListItemText>\n                                              </MenuItem>\n                                            )}\n                                            {listType === \"campaign\" && (\n                                              <MenuItem onClick={() => {\n                                                showEditUnitCampaign({\n                                                  faction: forceFaction,\n                                                  unitId: unit.id,\n                                                  forceId: index,\n                                                });\n                                              }}>\n                                                <ListItemIcon>\n                                                  <FontAwesomeIcon icon={faBook} />\n                                                </ListItemIcon>\n                                                <ListItemText>Campaign</ListItemText>\n                                              </MenuItem>\n                                            )}\n                                            {!!editMode &&\n                                              listType === \"campaign\" &&\n                                              !showingReserves && (\n                                                <MenuItem onClick={() =>\n                                                  moveUnitReserves(index, unit.id)\n                                                }>\n                                                  <ListItemIcon>\n                                                    <FontAwesomeIcon\n                                                      icon={faArrowRight}\n                                                    />\n                                                  </ListItemIcon>\n                                                  <ListItemText>To Reserves</ListItemText>\n                                                </MenuItem>\n                                              )}\n                                            {!!editMode &&\n                                              listType === \"campaign\" &&\n                                              showingReserves && (\n                                                <MenuItem onClick={() =>\n                                                  moveUnitForce(index, unit.id)\n                                                }>\n                                                  <ListItemIcon>\n                                                    <FontAwesomeIcon\n                                                      icon={faArrowLeft}\n                                                    />\n                                                  </ListItemIcon>\n                                                  <ListItemText>To Force</ListItemText>\n                                                </MenuItem>\n                                              )}\n                                            {!!editMode && (\n                                              <MenuItem onClick={() =>\n                                                deleteUnit(index, unit.id)\n                                              }>\n                                                <ListItemIcon>\n                                                  <DeleteIcon />\n                                                </ListItemIcon>\n                                                <ListItemText>Delete</ListItemText>\n                                              </MenuItem>\n                                            )}\n                                          </Menu>\n                                        </>\n                                      )}\n                                    </Dropdown>\n                                  }\n                                  disablePadding\n                                >\n                                  <ListItemButton\n                                    onClick={(event) => {\n                                      event.preventDefault();\n                                      showViewUnit({\n                                        unit,\n                                        faction: forceFaction,\n                                      });\n                                    }}\n                                  >\n                                    <ListItemText\n                                      primary={\n                                        <>\n                                          <span style={{ marginRight: '5px' }}>{unit.customName || unit.name}\n                                          </span>{`(${unit.points} pts)`}\n                                          <span className=\"badge badge-success\">\n                                            {listType === \"campaign\" &&\n                                              unitLevel > 0\n                                              ? ` ${formatLevel(unitLevel)}`\n                                              : \"\"}\n                                          </span>\n                                          <span className=\"badge badge-danger\">\n                                            {listType === \"campaign\" &&\n                                              unitSetbacksCount > 0\n                                              ? `${unitSetbacksCount} ${unitSetbacksCount > 1\n                                                ? \"Injuries\"\n                                                : \"Injury\"\n                                              }`\n                                              : \"\"}\n                                          </span>\n                                        </>\n                                      }\n                                    />\n                                  </ListItemButton>\n                                </ListItem>\n                              </>\n                            );\n                          })}\n                      </>\n                    );\n                  })}\n                  {(!filteredCategories.length && !forceLegends.length) && (\n                    <>\n                      Force is empty...\n                    </>\n                  )}\n                </>\n              </CardContent>\n            </Card>\n          );\n        })}\n        <input\n          id=\"file-input\"\n          type=\"file\"\n          name=\"name\"\n          multiple\n          ref={fileDialog}\n          onChange={uploadList}\n          style={{ height: \"0\", overflow: \"hidden\", display: \"none\" }}\n        />\n      </Container>\n    </>\n  );\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst link = {\n  normal: {\n    borderBottom: '1px dotted rgb(0, 168, 0)',\n  },\n  hover: {\n    borderBottom: '1px solid rgb(0, 168, 0)',\n    color: 'black',\n  },\n  active: 'hover'\n};\n\nconst childLink = {};\nObject.keys(link).forEach((key) => {\n  if (key !== 'touchActiveTapOnly') {\n    childLink[`onParent${key.slice(0, 1).toUpperCase()}${key.slice(1)}`] = link[key];\n  }\n});\n\nexport const Code = ({ children }) => (\n  <code\n    style={{\n      fontFamily: 'monospace',\n      fontSize: '15px',\n      paddingLeft: '2px',\n    }}\n  >{children}</code>\n);\n\nCode.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport const Li = ({ children, ...rest }) => (\n  <li\n    style={{\n      paddingLeft: '18px',\n      textIndent: '-15px',\n      margin: '0.5vh 0',\n      listStyle: 'none',\n    }}\n    {...rest}\n  >\n    <span style={{ paddingRight: '7px' }}>&ndash;</span>\n    {children}\n  </li>\n);\n\nLi.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nconst thingy = {\n  link,\n  childLink,\n  p: {\n    margin: '3vh 0',\n    lineHeight: '1.4',\n  },\n};\n\nexport default thingy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Code } from '../styles/style';\nimport Container from '@mui/material/Container';\n\nconst propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default function PageNotFound({ location }) {\n  return (\n    <Container>\n      <p className=\"text-center\">\n        Page not found - the path, <Code>{location.pathname}</Code>,\n        did not match any React Router routes.\n      </p>\n    </Container>\n  );\n}\n\nPageNotFound.propTypes = propTypes;\n","import Container from '@mui/material/Container';\nimport React from \"react\";\n\n\nconst renderPolicy = (props) => (\n  <>\n    <h1>Privacy Policy</h1>\n    <p>Last updated: September 06, 2021</p>\n    <p>\n      This Privacy Policy describes Our policies and procedures on the\n      collection, use and disclosure of Your information when You use the\n      Service and tells You about Your privacy rights and how the law protects\n      You.\n    </p>\n    <p>\n      We use Your Personal data to provide and improve the Service. By using the\n      Service, You agree to the collection and use of information in accordance\n      with this Privacy Policy.\n      .\n    </p>\n    <h1>Interpretation and Definitions</h1>\n    <h2>Interpretation</h2>\n    <p>\n      The words of which the initial letter is capitalized have meanings defined\n      under the following conditions. The following definitions shall have the\n      same meaning regardless of whether they appear in singular or in plural.\n    </p>\n    <h2>Definitions</h2>\n    <p>For the purposes of this Privacy Policy:</p>\n    <ul>\n      <li>\n        <p>\n          <strong>Account</strong> means a unique account created for You to\n          access our Service or parts of our Service.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Company</strong> (referred to as either &quot;the\n          Company&quot;, &quot;We&quot;, &quot;Us&quot; or &quot;Our&quot; in\n          this Agreement) refers to Battle Forge.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Cookies</strong> are small files that are placed on Your\n          computer, mobile device or any other device by a website, containing\n          the details of Your browsing history on that website among its many\n          uses.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Country</strong> refers to: New Jersey, United States\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Device</strong> means any device that can access the Service\n          such as a computer, a cellphone or a digital tablet.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Personal Data</strong> is any information that relates to an\n          identified or identifiable individual.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Service</strong> refers to the Website.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Service Provider</strong> means any natural or legal person\n          who processes the data on behalf of the Company. It refers to\n          third-party companies or individuals employed by the Company to\n          facilitate the Service, to provide the Service on behalf of the\n          Company, to perform services related to the Service or to assist the\n          Company in analyzing how the Service is used.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Third-party Social Media Service</strong> refers to any\n          website or any social network website through which a User can log in\n          or create an account to use the Service.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Usage Data</strong> refers to data collected automatically,\n          either generated by the use of the Service or from the Service\n          infrastructure itself (for example, the duration of a page visit).\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Website</strong> refers to Battle Forge, accessible from{\" \"}\n          <a\n            href=\"https://www.battleforgedgame.com\"\n            rel=\"noreferrer external nofollow noopener\"\n            target=\"_blank\"\n          >\n            https://www.battleforgedgame.com\n          </a>\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>You</strong> means the individual accessing or using the\n          Service, or the company, or other legal entity on behalf of which such\n          individual is accessing or using the Service, as applicable.\n        </p>\n      </li>\n    </ul>\n    <h1>Collecting and Using Your Personal Data</h1>\n    <h2>Types of Data Collected</h2>\n    <h3>Personal Data</h3>\n    <p>\n      While using Our Service, We may ask You to provide Us with certain\n      personally identifiable information that can be used to contact or\n      identify You. Personally identifiable information may include, but is not\n      limited to:\n    </p>\n    <ul>\n      <li>\n        <p>Email address</p>\n      </li>\n      <li>\n        <p>First name and last name</p>\n      </li>\n      <li>\n        <p>Usage Data</p>\n      </li>\n    </ul>\n    <h3>Usage Data</h3>\n    <p>Usage Data is collected automatically when using the Service.</p>\n    <p>\n      Usage Data may include information such as Your Device's Internet Protocol\n      address (e.g. IP address), browser type, browser version, the pages of our\n      Service that You visit, the time and date of Your visit, the time spent on\n      those pages, unique device identifiers and other diagnostic data.\n    </p>\n    <p>\n      When You access the Service by or through a mobile device, We may collect\n      certain information automatically, including, but not limited to, the type\n      of mobile device You use, Your mobile device unique ID, the IP address of\n      Your mobile device, Your mobile operating system, the type of mobile\n      Internet browser You use, unique device identifiers and other diagnostic\n      data.\n    </p>\n    <p>\n      We may also collect information that Your browser sends whenever You visit\n      our Service or when You access the Service by or through a mobile device.\n    </p>\n    <h3>Information from Third-Party Social Media Services</h3>\n    <p>\n      The Company allows You to create an account and log in to use the Service\n      through the following Third-party Social Media Services:\n    </p>\n    <ul>\n      <li>Google</li>\n      <li>Facebook</li>\n      <li>Twitter</li>\n    </ul>\n    <p>\n      If You decide to register through or otherwise grant us access to a\n      Third-Party Social Media Service, We may collect Personal data that is\n      already associated with Your Third-Party Social Media Service's account,\n      such as Your name, Your email address, Your activities or Your contact\n      list associated with that account.\n    </p>\n    <p>\n      You may also have the option of sharing additional information with the\n      Company through Your Third-Party Social Media Service's account. If You\n      choose to provide such information and Personal Data, during registration\n      or otherwise, You are giving the Company permission to use, share, and\n      store it in a manner consistent with this Privacy Policy.\n    </p>\n    <h3>Tracking Technologies and Cookies</h3>\n    <p>\n      We use Cookies and similar tracking technologies to track the activity on\n      Our Service and store certain information. Tracking technologies used are\n      beacons, tags, and scripts to collect and track information and to improve\n      and analyze Our Service. The technologies We use may include:\n    </p>\n    <ul>\n      <li>\n        <strong>Cookies or Browser Cookies.</strong> A cookie is a small file\n        placed on Your Device. You can instruct Your browser to refuse all\n        Cookies or to indicate when a Cookie is being sent. However, if You do\n        not accept Cookies, You may not be able to use some parts of our\n        Service. Unless you have adjusted Your browser setting so that it will\n        refuse Cookies, our Service may use Cookies.\n      </li>\n      <li>\n        <strong>Flash Cookies.</strong> Certain features of our Service may use\n        local stored objects (or Flash Cookies) to collect and store information\n        about Your preferences or Your activity on our Service. Flash Cookies\n        are not managed by the same browser settings as those used for Browser\n        Cookies. For more information on how You can delete Flash Cookies,\n        please read &quot;Where can I change the settings for disabling, or\n        deleting local shared objects?&quot; available at{\" \"}\n        <a\n          href=\"https://helpx.adobe.com/flash-player/kb/disable-local-shared-objects-flash.html#main_Where_can_I_change_the_settings_for_disabling__or_deleting_local_shared_objects_\"\n          rel=\"noreferrer external nofollow noopener\"\n          target=\"_blank\"\n        >\n          https://helpx.adobe.com/flash-player/kb/disable-local-shared-objects-flash.html#main_Where_can_I_change_the_settings_for_disabling__or_deleting_local_shared_objects_\n        </a>\n      </li>\n      <li>\n        <strong>Web Beacons.</strong> Certain sections of our Service and our\n        emails may contain small electronic files known as web beacons (also\n        referred to as clear gifs, pixel tags, and single-pixel gifs) that\n        permit the Company, for example, to count users who have visited those\n        pages or opened an email and for other related website statistics (for\n        example, recording the popularity of a certain section and verifying\n        system and server integrity).\n      </li>\n    </ul>\n    <p>\n      Cookies can be &quot;Persistent&quot; or &quot;Session&quot; Cookies.\n      Persistent Cookies remain on Your personal computer or mobile device when\n      You go offline, while Session Cookies are deleted as soon as You close\n      Your web browser. You can learn more about cookies here:{\" \"}\n      <a href=\"https://www.termsfeed.com/blog/cookies/\" target=\"_blank\" rel=\"noreferrer\">\n        All About Cookies by TermsFeed\n      </a>\n      .\n    </p>\n    <p>\n      We use both Session and Persistent Cookies for the purposes set out below:\n    </p>\n    <ul>\n      <li>\n        <p>\n          <strong>Necessary / Essential Cookies</strong>\n        </p>\n        <p>Type: Session Cookies</p>\n        <p>Administered by: Us</p>\n        <p>\n          Purpose: These Cookies are essential to provide You with services\n          available through the Website and to enable You to use some of its\n          features. They help to authenticate users and prevent fraudulent use\n          of user accounts. Without these Cookies, the services that You have\n          asked for cannot be provided, and We only use these Cookies to provide\n          You with those services.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Cookies Policy / Notice Acceptance Cookies</strong>\n        </p>\n        <p>Type: Persistent Cookies</p>\n        <p>Administered by: Us</p>\n        <p>\n          Purpose: These Cookies identify if users have accepted the use of\n          cookies on the Website.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>Functionality Cookies</strong>\n        </p>\n        <p>Type: Persistent Cookies</p>\n        <p>Administered by: Us</p>\n        <p>\n          Purpose: These Cookies allow us to remember choices You make when You\n          use the Website, such as remembering your login details or language\n          preference. The purpose of these Cookies is to provide You with a more\n          personal experience and to avoid You having to re-enter your\n          preferences every time You use the Website.\n        </p>\n      </li>\n    </ul>\n    <p>\n      For more information about the cookies we use and your choices regarding\n      cookies, please visit our Cookies Policy or the Cookies section of our\n      Privacy Policy.\n    </p>\n    <h2>Use of Your Personal Data</h2>\n    <p>The Company may use Personal Data for the following purposes:</p>\n    <ul>\n      <li>\n        <p>\n          <strong>To provide and maintain our Service</strong>, including to\n          monitor the usage of our Service.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>To manage Your Account:</strong> to manage Your registration\n          as a user of the Service. The Personal Data You provide can give You\n          access to different functionalities of the Service that are available\n          to You as a registered user.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>For the performance of a contract:</strong> the development,\n          compliance and undertaking of the purchase contract for the products,\n          items or services You have purchased or of any other contract with Us\n          through the Service.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>To contact You:</strong> To contact You by email, telephone\n          calls, SMS, or other equivalent forms of electronic communication,\n          such as a mobile application's push notifications regarding updates or\n          informative communications related to the functionalities, products or\n          contracted services, including the security updates, when necessary or\n          reasonable for their implementation.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>To provide You</strong> with news, special offers and general\n          information about other goods, services and events which we offer that\n          are similar to those that you have already purchased or enquired about\n          unless You have opted not to receive such information.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>To manage Your requests:</strong> To attend and manage Your\n          requests to Us.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>For business transfers:</strong> We may use Your information\n          to evaluate or conduct a merger, divestiture, restructuring,\n          reorganization, dissolution, or other sale or transfer of some or all\n          of Our assets, whether as a going concern or as part of bankruptcy,\n          liquidation, or similar proceeding, in which Personal Data held by Us\n          about our Service users is among the assets transferred.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>For other purposes</strong>: We may use Your information for\n          other purposes, such as data analysis, identifying usage trends,\n          determining the effectiveness of our promotional campaigns and to\n          evaluate and improve our Service, products, services, marketing and\n          your experience.\n        </p>\n      </li>\n    </ul>\n    <p>We may share Your personal information in the following situations:</p>\n    <ul>\n      <li>\n        <strong>With Service Providers:</strong> We may share Your personal\n        information with Service Providers to monitor and analyze the use of our\n        Service, to contact You.\n      </li>\n      <li>\n        <strong>For business transfers:</strong> We may share or transfer Your\n        personal information in connection with, or during negotiations of, any\n        merger, sale of Company assets, financing, or acquisition of all or a\n        portion of Our business to another company.\n      </li>\n      <li>\n        <strong>With Affiliates:</strong> We may share Your information with Our\n        affiliates, in which case we will require those affiliates to honor this\n        Privacy Policy. Affiliates include Our parent company and any other\n        subsidiaries, joint venture partners or other companies that We control\n        or that are under common control with Us.\n      </li>\n      <li>\n        <strong>With business partners:</strong> We may share Your information\n        with Our business partners to offer You certain products, services or\n        promotions.\n      </li>\n      <li>\n        <strong>With other users:</strong> when You share personal information\n        or otherwise interact in the public areas with other users, such\n        information may be viewed by all users and may be publicly distributed\n        outside. If You interact with other users or register through a\n        Third-Party Social Media Service, Your contacts on the Third-Party\n        Social Media Service may see Your name, profile, pictures and\n        description of Your activity. Similarly, other users will be able to\n        view descriptions of Your activity, communicate with You and view Your\n        profile.\n      </li>\n      <li>\n        <strong>With Your consent</strong>: We may disclose Your personal\n        information for any other purpose with Your consent.\n      </li>\n    </ul>\n    <h2>Retention of Your Personal Data</h2>\n    <p>\n      The Company will retain Your Personal Data only for as long as is\n      necessary for the purposes set out in this Privacy Policy. We will retain\n      and use Your Personal Data to the extent necessary to comply with our\n      legal obligations (for example, if we are required to retain your data to\n      comply with applicable laws), resolve disputes, and enforce our legal\n      agreements and policies.\n    </p>\n    <p>\n      The Company will also retain Usage Data for internal analysis purposes.\n      Usage Data is generally retained for a shorter period of time, except when\n      this data is used to strengthen the security or to improve the\n      functionality of Our Service, or We are legally obligated to retain this\n      data for longer time periods.\n    </p>\n    <h2>Transfer of Your Personal Data</h2>\n    <p>\n      Your information, including Personal Data, is processed at the Company's\n      operating offices and in any other places where the parties involved in\n      the processing are located. It means that this information may be\n      transferred to — and maintained on — computers located outside of Your\n      state, province, country or other governmental jurisdiction where the data\n      protection laws may differ than those from Your jurisdiction.\n    </p>\n    <p>\n      Your consent to this Privacy Policy followed by Your submission of such\n      information represents Your agreement to that transfer.\n    </p>\n    <p>\n      The Company will take all steps reasonably necessary to ensure that Your\n      data is treated securely and in accordance with this Privacy Policy and no\n      transfer of Your Personal Data will take place to an organization or a\n      country unless there are adequate controls in place including the security\n      of Your data and other personal information.\n    </p>\n    <h2>Disclosure of Your Personal Data</h2>\n    <h3>Business Transactions</h3>\n    <p>\n      If the Company is involved in a merger, acquisition or asset sale, Your\n      Personal Data may be transferred. We will provide notice before Your\n      Personal Data is transferred and becomes subject to a different Privacy\n      Policy.\n    </p>\n    <h3>Law enforcement</h3>\n    <p>\n      Under certain circumstances, the Company may be required to disclose Your\n      Personal Data if required to do so by law or in response to valid requests\n      by public authorities (e.g. a court or a government agency).\n    </p>\n    <h3>Other legal requirements</h3>\n    <p>\n      The Company may disclose Your Personal Data in the good faith belief that\n      such action is necessary to:\n    </p>\n    <ul>\n      <li>Comply with a legal obligation</li>\n      <li>Protect and defend the rights or property of the Company</li>\n      <li>\n        Prevent or investigate possible wrongdoing in connection with the\n        Service\n      </li>\n      <li>Protect the personal safety of Users of the Service or the public</li>\n      <li>Protect against legal liability</li>\n    </ul>\n    <h2>Security of Your Personal Data</h2>\n    <p>\n      The security of Your Personal Data is important to Us, but remember that\n      no method of transmission over the Internet, or method of electronic\n      storage is 100% secure. While We strive to use commercially acceptable\n      means to protect Your Personal Data, We cannot guarantee its absolute\n      security.\n    </p>\n    <h1>Children's Privacy</h1>\n    <p>\n      Our Service does not address anyone under the age of 13. We do not\n      knowingly collect personally identifiable information from anyone under\n      the age of 13. If You are a parent or guardian and You are aware that Your\n      child has provided Us with Personal Data, please contact Us. If We become\n      aware that We have collected Personal Data from anyone under the age of 13\n      without verification of parental consent, We take steps to remove that\n      information from Our servers.\n    </p>\n    <p>\n      If We need to rely on consent as a legal basis for processing Your\n      information and Your country requires consent from a parent, We may\n      require Your parent's consent before We collect and use that information.\n    </p>\n    <h1>Links to Other Websites</h1>\n    <p>\n      Our Service may contain links to other websites that are not operated by\n      Us. If You click on a third party link, You will be directed to that third\n      party's site. We strongly advise You to review the Privacy Policy of every\n      site You visit.\n    </p>\n    <p>\n      We have no control over and assume no responsibility for the content,\n      privacy policies or practices of any third party sites or services.\n    </p>\n    <h1>Changes to this Privacy Policy</h1>\n    <p>\n      We may update Our Privacy Policy from time to time. We will notify You of\n      any changes by posting the new Privacy Policy on this page.\n    </p>\n    <p>\n      We will let You know via email and/or a prominent notice on Our Service,\n      prior to the change becoming effective and update the &quot;Last\n      updated&quot; date at the top of this Privacy Policy.\n    </p>\n    <p>\n      You are advised to review this Privacy Policy periodically for any\n      changes. Changes to this Privacy Policy are effective when they are posted\n      on this page.\n    </p>\n    <h1>Contact Us</h1>\n    <p>\n      If you have any questions about this Privacy Policy, You can contact us:\n    </p>\n    <ul>\n      <li>By email: indiegamerules@gmail.com</li>\n    </ul>\n  </>\n);\n\nconst Privacy = (props) => {\n  return (\n    <>\n      <Container>\n        {renderPolicy()}\n      </Container>\n    </>\n  );\n};\n\nexport default Privacy;\n","import {\n  Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormControlLabel, FormLabel, ListItem, ListItemButton, ListItemText, ListSubheader, Paper, Radio, RadioGroup, Stack, TextField, Typography\n} from \"@mui/material\";\nimport useTheme from \"@mui/material/styles/useTheme\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport {\n  get, groupBy, sortBy\n} from \"lodash\";\nimport React, {\n  useState\n} from \"react\";\n\nconst LIST_TYPES = [\n  { label: \"Competitive\", value: \"competitive\" },\n  { label: \"Narrative\", value: \"narrative\" },\n  // { label: \"Campaign\", value: \"campaign\" },\n];\nexport const AddListOld = (props) => {\n  const { hideModal, addList } = props;\n  const [listName, setListName] = useState(\"\");\n  const [listType, setListType] = useState(\"competitive\");\n  return (\n    <>\n      <Dialog open maxWidth=\"md\" fullWidth onClose={hideModal}>\n        <DialogTitle closeButton>Create Roster</DialogTitle>\n        <DialogContent>\n          <Stack spacing={2} sx={{ mt: 1 }}>\n            <FormControl>\n              <TextField\n                size=\"small\"\n                id=\"standard-basic\"\n                label=\"Force Name\"\n                variant=\"outlined\"\n                onChange={(value) => setListName(value.target.value)}\n                value={listName}\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel component=\"legend\">List Type</FormLabel>\n              <RadioGroup\n                row\n                aria-label=\"gender\"\n                name=\"row-radio-buttons-group\"\n                onChange={(event) => setListType(event.target.value)}\n                value={listType}\n              >\n                {LIST_TYPES.map((type, index) => (\n                  <FormControlLabel\n                    key={index}\n                    value={type.value}\n                    control={<Radio />}\n                    label={type.label}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\" onClick={hideModal}>\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              if (listName) {\n                addList(listName, { type: listType });\n                hideModal();\n              }\n            }}\n          >\n            Create\n          </Button>{\" \"}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const UpdateList = (props) => {\n  const { hideModal, updateList, listId, lists } = props;\n  const oldListName = get(lists, `[${listId}].name`, \"\");\n  const oldListType = get(lists, `[${listId}].type`, \"\");\n  const [listName, setListName] = useState(oldListName);\n  const [listType, setListType] = useState(oldListType || \"competitive\");\n  return (\n    <>\n      <Dialog open maxWidth=\"md\" fullWidth onClose={hideModal}>\n        <DialogTitle>\n          Edit Roster\n        </DialogTitle>\n        <DialogContent>\n          <Stack spacing={2} sx={{ mt: 1 }}>\n            <FormControl>\n              <TextField\n                size=\"small\"\n                id=\"standard-basic\"\n                label=\"Force Name\"\n                variant=\"outlined\"\n                onChange={(value) => setListName(value.target.value)}\n                value={listName}\n              />\n            </FormControl>\n            <FormControl>\n              <FormLabel component=\"legend\">List Type</FormLabel>\n              <RadioGroup\n                row\n                aria-label=\"gender\"\n                name=\"row-radio-buttons-group\"\n                onChange={(event) => setListType(event.target.value)}\n                value={listType}\n              >\n                {LIST_TYPES.map((type, index) => (\n                  <FormControlLabel\n                    key={index}\n                    value={type.value}\n                    control={<Radio />}\n                    label={type.label}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\" onClick={hideModal}>\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              if (listName) {\n                updateList(listId, {\n                  name: listName,\n                  type: listType,\n                });\n                hideModal();\n              }\n            }}\n          >\n            Save\n          </Button>{\" \"}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const ShareList = (props) => {\n  const { hideModal, listData, copyToClipboard } = props;\n  const url = `${window?.location?.origin?.toString()}/lists?listShare=${listData}`;\n  return (\n    <>\n      <Dialog open maxWidth=\"md\" fullWidth onClose={hideModal}>\n        <DialogTitle>\n          Share Roster\n        </DialogTitle>\n        <DialogContent>\n          <Stack direction=\"row\" spacing={2} sx={{ mt: 1 }}>\n            <FormControl style={{ flexGrow: 1 }}>\n              <TextField\n                fullWidth\n                id=\"standard-basic\"\n                label=\"Share Url\"\n                variant=\"outlined\"\n                value={url}\n                \n              />\n            </FormControl>\n            <Button onClick={() => copyToClipboard('Successfully copied url to clipboard.', url)}>Copy</Button>\n            {/* <FormControl>\n              <FormLabel component=\"legend\">List Type</FormLabel>\n              <RadioGroup\n                row\n                aria-label=\"gender\"\n                name=\"row-radio-buttons-group\"\n                onChange={(event) => setListType(event.target.value)}\n                value={listType}\n              >\n                {LIST_TYPES.map((type, index) => (\n                  <FormControlLabel\n                    key={index}\n                    value={type.value}\n                    control={<Radio />}\n                    label={type.label}\n                  />\n                ))}\n              </RadioGroup>\n            </FormControl> */}\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={hideModal}>\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport const AddList = (props) => {\n  const { hideModal, userPrefs, addList, rawData } = props;\n  const [listName, setListName] = useState(\"\");\n  const [listType, setListType] = useState(\"competitive\");\n  const [gameId, setGameId] = useState();\n  const showBeta = userPrefs.showBeta;\n  const gameTypesRaw = {\n    ...get(rawData, \"gameData.gameTypes\", {}),\n  };\n  const gamesUnsorted = Object.values(get(rawData, `gameData.games`, {})).filter(\n    (game) => (showBeta ? true : game.version && Number(game.version) >= 1)\n  );\n  const gameTypes = [\n    ...Object.keys(gameTypesRaw).filter(\n      (gameType) =>\n        gamesUnsorted.filter((game) => game.gameType === gameType).length\n    ),\n  ];\n  const unitCategories = groupBy(gamesUnsorted, \"gameType\");\n  const categoryOrder = [...gameTypes, undefined].filter(\n    (cat) => unitCategories[cat] && unitCategories[cat].length\n  );\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return (\n    <>\n      <Dialog\n        open\n        fullScreen={fullScreen}\n        fullWidth\n        onClose={hideModal}\n        maxWidth=\"lg\"\n      >\n        {!gameId && (\n          <>\n            <DialogTitle closeButton>Choose Game</DialogTitle>\n            <DialogContent style={{ padding: 0 }} sx={{ backgroundColor: 'background.paper' }}>\n              <Paper style={{  height: '100%', borderRadius: 0, overflowY: 'auto' }}>\n                {categoryOrder.map((allianceKey) => {\n                  const theFactions = sortBy(\n                    get(unitCategories, `[${allianceKey}]`, []),\n                    \"name\"\n                  );\n                  const allianceData = gameTypesRaw[allianceKey];\n                  return (\n                    <>\n                      <ListSubheader sx={{ flex: 1, color: 'inherit' }}>\n                        <Typography\n                          sx={{ py: 1 }}\n                          fontWeight=\"bold\"\n                          variant=\"h5\"\n                        >\n                          {allianceData.name || \"Unaligned\"}\n                        </Typography>\n                      </ListSubheader>\n                      {Object.keys(theFactions).map((orgKey) => {\n                        const org = theFactions[orgKey];\n                        return (\n                          <ListItem\n                            disablePadding\n                            // secondaryAction={\n                            //   <IconButton\n                            //     sx={{ color: \"primary.main\" }}\n                            //     onClick={() => {\n                            //       setGameId(org.id);\n                            //     }}\n                            //   >\n                            //     <AddIcon />\n                            //   </IconButton>\n                            // }\n                          >\n                            <ListItemButton\n                              onClick={() => {\n                                setGameId(org.id);\n                              }}\n                            >\n                              <ListItemText\n                                primary={\n                                  <Typography fontWeight=\"bold\" fontSize=\"1.25em\">\n                                    {`${org.name}`}\n                                    <small>\n                                      {org.version ? ` (${org.version})` : \"\"}\n                                    </small>\n                                  </Typography>\n                                }\n                                secondary={<Typography variant=\"body2\">{`${org.description || \"\"}`}</Typography>}\n                              />\n                            </ListItemButton>\n                          </ListItem>\n                        );\n                      })}\n                    </>\n                  );\n                })}\n              </Paper>\n            </DialogContent>\n            <DialogActions>\n              <Button color=\"primary\" onClick={hideModal}>\n                Cancel\n              </Button>\n            </DialogActions>\n          </>\n        )}\n        {!!gameId && <><DialogTitle closeButton>Create Roster</DialogTitle>\n          <DialogContent>\n            <Stack spacing={2} sx={{ mt: 1 }}>\n              <FormControl>\n                <TextField\n                  size=\"small\"\n                  id=\"standard-basic\"\n                  label=\"Force Name\"\n                  variant=\"outlined\"\n                  onChange={(value) => setListName(value.target.value)}\n                  value={listName}\n                />\n              </FormControl>\n              <FormControl>\n                <FormLabel component=\"legend\">List Type</FormLabel>\n                <RadioGroup\n                  row\n                  aria-label=\"gender\"\n                  name=\"row-radio-buttons-group\"\n                  onChange={(event) => setListType(event.target.value)}\n                  value={listType}\n                >\n                  {LIST_TYPES.map((type, index) => (\n                    <FormControlLabel\n                      key={index}\n                      value={type.value}\n                      control={<Radio />}\n                      label={type.label}\n                    />\n                  ))}\n                </RadioGroup>\n              </FormControl>\n            </Stack>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"secondary\" onClick={hideModal}>\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                if (listName) {\n                  addList(listName, { type: listType, gameId });\n                  hideModal();\n                }\n              }}\n            >\n              Create\n            </Button>{\" \"}\n          </DialogActions>\n        </>}\n      </Dialog>\n    </>\n  );\n};\n","import AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport EditIcon from '@mui/icons-material/Edit';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport UploadIcon from '@mui/icons-material/Upload';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Container, IconButton, ListItem, ListItemButton, ListItemIcon, ListItemText, ListSubheader, Menu,\n  MenuItem\n} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport CustomCircularProgress from \"components/CustomCircularProgress\";\nimport { Dropdown } from \"components/dropdown\";\nimport { DataContext, useModal } from \"hooks\";\nimport { get, groupBy, omit, sortBy } from \"lodash\";\nimport { useSnackbar } from \"notistack\";\nimport React from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { useLocation } from \"react-router-dom\";\nimport Tour from \"reactour\";\nimport { AddList, UpdateList } from 'routes/rosters/modals';\nimport { DataAPI, mergeGlobalData } from \"utils/data\";\nimport { downloadFile, readFileContent } from \"utils/files\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst allSteps = [];\nconst steps = [\n  [\n    {\n      selector: \"#tab-0\",\n      content:\n        \"This is the module overview. This gives you background information and an overview of the game module.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-1\",\n      content:\n        \"These are the game rules. This gives you the core rules of the game module.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".terrain-card:first-of-type\",\n      content:\n        \"This is a piece of terrain. It contains a brief description of what it might look like and any assocaited rules.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".mission-card:first-of-type\",\n      content:\n        \"This is a scenario. Each scenario has its own way to score victory points and deployment conditions.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".secondary-card:first-of-type\",\n      content:\n        \"This is a secondary objective. Player can select one of these to be the secondary objective for the mission.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".twist-card:first-of-type\",\n      content:\n        \"This is a twist. Player can select one of these to add an interesting twist to the mission.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-4\",\n      content:\n        \"This is the factions list. This gives you a list of all factions in the module. Factions can sometimes be grouped into alliances.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \".faction-card:first-of-type\",\n      content:\n        \"This is a faction. It contains a brief description of the faction and clicking on it will bring you to the roster for that faction.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-3\",\n      content:\n        \"This is the scenarios tab. It can give you a random scenario to play with optional parameters.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \"#generateScenario\",\n      content:\n        \"Pressing this button will generate a new scenario for you to play with a random mission, secondary and optional twist.\",\n      stepInteraction: false,\n    },\n  ],\n  [\n    {\n      selector: \"#tab-4\",\n      content:\n        \"This is the rosters tab. It allows you to create rosters to play this game module.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \"#createList\",\n      content:\n        \"Pressing this button will open the force creator and allow you to give the force a name and choose a type.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \"#importList\",\n      content:\n        \"Pressing this button will allow you to import a force from a file into the force manager.\",\n      stepInteraction: false,\n    },\n    {\n      selector: \"#list-manager\",\n      content:\n        \"This is the force manager. It contains all your previously created lists. You can click on the name of a list to go to it or click the ellipses to edit or delete the list properties.\",\n      stepInteraction: false,\n    },\n  ],\n];\n\nexport default React.memo((props) => {\n  const { gameName } = useParams();\n  const [\n    {\n      data: nope,\n      coreData,\n      fetchGame,\n      setData,\n      refreshData,\n      isLoading,\n      appState,\n      userPrefs,\n      setAppState\n    },\n  ] = React.useContext(DataContext);\n  const nameFilter = appState?.searchText;\n  const [isTourOpen, setIsTourOpen] = React.useState(false);\n  const fileDialog = React.useRef();\n  const navigate = useNavigate();\n  // const theme = useTheme();\n  const location = useLocation();\n  const queryParams = React.useMemo(() => new URLSearchParams(location.search), [location.search]);\n  const shareData = queryParams?.get(\"listShare\");\n    // Default active tab!!!\n    const [activeTab] = React.useState(get(appState, \"factionTab\", 2));\n    const game = get(nope, `gameData.games[${gameName}]`, {});\n    const coreGame = get(coreData, `gameData.games[${gameName}]`, {});\n    React.useEffect(() => {\n      if (!game.factions || (!coreGame.factions && !isLoading)) {\n        fetchGame(gameName);\n      }\n    }, [coreData, coreGame.factions, fetchGame, game.factions, gameName, isLoading]);\n    const globalData = mergeGlobalData(game, nope);\n    const data = DataAPI(game, globalData);\n    const gamesRaw = get(nope, `gameData.games`, {});\n    const rawLists = get(nope, `lists`, []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const lists = {};\n    Object.keys(rawLists).forEach((listId) => {\n      const list = rawLists[listId];\n      const gameId = list?.gameId;\n      if (gameId && gamesRaw[gameId]) {\n        lists[listId] = { ...list, id: listId };\n      }\n    });\n    const listsByGame = groupBy(Object.values(lists), 'gameId');\n  const { enqueueSnackbar } = useSnackbar();\n  const setLists = React.useCallback((listData) => {\n    const newGameData = {\n      ...coreData,\n      lists: {\n        ...listData\n      }\n    };\n    setData(newGameData);\n  }, [coreData, setData]);\n  const importList = React.useCallback((listObject) => {\n    if (listObject.forces) {\n      const newArmyData = {\n        ...listObject,\n      };\n      const listName = listObject.name;\n      const listId = uuidv4();\n      setLists({\n        ...lists,\n        [listId]: {\n          name: listName,\n          ...newArmyData,\n        },\n      });\n      enqueueSnackbar(`List '${listName}' successfully imported.`, {\n        appearance: \"success\",\n      });\n    }\n  }, [enqueueSnackbar, lists, setLists])\n  React.useEffect(() => {\n    if (!shareData) {\n      return;\n    }\n    let listObject = {};\n    try {\n      listObject = JSON.parse(atob(shareData));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n    importList(listObject);\n    queryParams.set('share', '');\n    navigate({\n      search: queryParams?.toString(),\n    }, { replace: true });\n  }, [navigate, importList, queryParams, shareData]);\n  const addList = (listName, data) => {\n    const listId = uuidv4();\n    setLists({\n      ...lists,\n      [listId]: {\n        name: listName,\n        ...data,\n      },\n    });\n    goToList(listId);\n  };\n  const updateList = (listId, newData) => {\n    setLists({\n      ...lists,\n      [listId]: {\n        ...get(lists, `[${listId}]`, {}),\n        ...newData,\n      },\n    });\n  };\n  const goToList = (listId) =>\n    navigate(`/lists/${listId}`);\n  const handleClick = () => {\n    fileDialog.current.click();\n  };\n\n  // const copyToClipboard = (message, text) => {\n  //   navigator.clipboard.writeText(text).then(function() {\n  //     enqueueSnackbar(message, {\n  //       appearance: \"success\",\n  //     });\n  //   }, function(err) {\n  //     enqueueSnackbar(`Failed to write to clipboard.`, {\n  //       appearance: \"error\",\n  //     });\n  //   });\n  // }\n  const uploadFile = (event) => {\n    uploadList(event);\n  };\n  const uploadList = (event) => {\n    event.preventDefault();\n    const file = get(event, \"target.files[0]\");\n    if (file) {\n      readFileContent(file)\n        .then((content) => {\n          let listObject = {};\n          try {\n            listObject = JSON.parse(content);\n          } catch (e) {\n            return Promise.reject(e);\n          }\n          importList(listObject);\n        })\n        .catch((error) => {\n          enqueueSnackbar(`List failed to import. ${error.message}`, {\n            appearance: \"error\",\n          });\n        });\n    }\n    fileDialog.current.value = null;\n  };\n  const refreshFactions = () => {\n    refreshData(gameName)\n      .then(() => {\n        enqueueSnackbar(`Game data successfully updated.`, {\n          appearance: \"success\",\n        });\n      })\n      .catch((error) => {\n        enqueueSnackbar(`Game failed to fetch factions. ${error.message}`, {\n          appearance: \"error\",\n        });\n      });\n  };\n  const [showAddList, hideAddList] = useModal(\n    ({ extraProps }) => (\n      <AddList\n        {...props}\n        rawData={nope}\n        userPrefs={userPrefs}\n        hideModal={hideAddList}\n        lists={lists}\n        data={data}\n        addList={addList}\n        {...extraProps}\n      />\n    ),\n    [lists]\n  );\n  // const [showShareList, hideShareList] = useModal(\n  //   ({ extraProps }) => (\n  //     <ShareList\n  //       {...props}\n  //       hideModal={hideShareList}\n  //       copyToClipboard={copyToClipboard}\n  //       {...extraProps}\n  //     />\n  //   ),\n  //   [lists]\n  // );\n  const [showEditList, hideEditList] = useModal(\n    ({ extraProps }) => (\n      <UpdateList\n        {...props}\n        hideModal={hideEditList}\n        lists={lists}\n        data={data}\n        updateList={updateList}\n        {...extraProps}\n      />\n    ),\n    [lists]\n  );\n\n  const deleteList = (id) => {\n    setLists(omit(lists, [id]));\n  };\n  const downloadList = (id) => {\n    downloadFile(\n      JSON.stringify(\n        {\n          ...get(lists, `[${id}]`),\n        },\n        null,\n        2\n      ),\n      \"data:text/json\",\n      `${get(lists, `[${id}].name`, id)}.json`\n    );\n  };\n  // const shareList = (id) => {\n  //   const list = get(lists, `[${id}]`);\n  //   const listData = btoa(JSON.stringify(list));\n  //   showShareList({ listData, listName: list?.name });\n  // };\n  React.useEffect(() => {\n    setAppState({\n      enableSearch: true,\n      contextActions: [\n        {\n          name: 'Create',\n          icon: <AddIcon />,\n          onClick: () => {\n            showAddList()\n          }\n        },\n        {\n          name: 'Import',\n          icon: <UploadIcon />,\n          onClick: () => {\n            handleClick()\n          }\n        },\n        {\n          name: 'Refresh',\n          icon: <RefreshIcon />,\n          onClick: () => {\n            refreshFactions()\n          }\n        }\n      ]\n    })\n    return () => {\n      setAppState({\n        contextActions: []\n      })\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  // const [dialOpen, setDialOpen] = React.useState(false);\n  if (!data) {\n    return (\n      <Box sx={{ textAlign: \"center\" }}>\n        <CustomCircularProgress />\n      </Box>\n    );\n  }\n  const factionColor = ' rgb(57, 110, 158)';\n  const textColor = 'white';\n  const filteredCategories = Object.keys(listsByGame);\n\n  return (\n    <Container>\n      <>\n        <Typography variant=\"h3\" align=\"center\" sx={{ mb: 2 }}>\n          Rosters\n        </Typography>\n        <Card\n          className=\"no-break\"\n          sx={{\n            border: `2px solid ${factionColor}`,\n            mb: 2,\n          }}\n        >\n          <CardHeader\n            sx={{ backgroundColor: factionColor, color: textColor, py: 1 }}\n            title={\n              <>\n                <Typography variant=\"h5\" component=\"div\">\n                  Manage Rosters\n                </Typography>\n              </>\n            }\n          />\n          <CardContent\n            style={{ padding: (filteredCategories.length) ? 0 : undefined }}\n          >\n            {!! filteredCategories.length && <>\n              {filteredCategories.map((catKey, catIndex) => {\n                const category = gamesRaw[catKey];\n                const categoryLists = listsByGame[catKey];\n                const filteredLists = sortBy(\n                  categoryLists.filter((list) =>\n                    nameFilter\n                      ? list.name.toLowerCase().includes(nameFilter.toLowerCase())\n                      : true\n                  ),\n                  \"name\"\n                );\n                if (!category) {\n                  return <></>;\n                }\n                return (\n                  <>\n                    <ListItem\n                      key={catIndex}\n                      disablePadding\n                    >\n                      <ListSubheader sx={{ flex: 1, backgroundColor: 'background.paper', color: 'inherit' }}>\n                        <Typography\n                          sx={{ py: 1 }}\n                          fontWeight=\"bold\"\n                          variant=\"h6\"\n                        >\n                          {category.name}\n                        </Typography>\n                      </ListSubheader>\n                    </ListItem>\n                    {filteredLists\n                      .map((list, unitIdx) => {\n                        return (\n                          <>\n                            <ListItem\n                              key={unitIdx}\n                              secondaryAction={\n                                <Dropdown>\n                                  {({ handleClose, open, handleOpen, anchorElement }) => (\n                                    <>\n                                      <IconButton sx={{ }} onClick={handleOpen}>\n                                        <MoreVertIcon />\n                                      </IconButton>\n                                      <Menu\n                                        anchorOrigin={{\n                                          vertical: \"bottom\",\n                                          horizontal: \"right\",\n                                        }}\n                                        transformOrigin={{\n                                          vertical: \"top\",\n                                          horizontal: \"right\",\n                                        }}\n                                        anchorEl={anchorElement}\n                                        id=\"basic-menu\"\n                                        open={open}\n                                        onClose={handleClose}\n                                        MenuListProps={{\n                                          dense: true,\n                                          onClick: handleClose,\n                                          \"aria-labelledby\": \"basic-button\",\n                                        }}\n                                      >\n                                        <MenuItem onClick={() => showEditList({ listId: list.id })}>\n                                          <ListItemIcon>\n                                            <EditIcon />\n                                          </ListItemIcon>\n                                          <ListItemText>Edit</ListItemText>\n                                        </MenuItem>\n                                        <MenuItem onClick={() => downloadList(list.id)}>\n                                          <ListItemIcon>\n                                            <DownloadIcon />\n                                          </ListItemIcon>\n                                          <ListItemText>Download</ListItemText>\n                                        </MenuItem>\n                                        {/* <MenuItem onClick={() => shareList(list.id)}>\n                                          <ListItemIcon>\n                                            <ShareIcon />\n                                          </ListItemIcon>\n                                          <ListItemText>Share</ListItemText>\n                                        </MenuItem> */}\n                                        <MenuItem onClick={() => deleteList(list.id)}>\n                                          <ListItemIcon>\n                                            <DeleteIcon />\n                                          </ListItemIcon>\n                                          <ListItemText>Delete</ListItemText>\n                                        </MenuItem>\n                                      </Menu>\n                                    </>\n                                  )}\n                                </Dropdown>\n                              }\n                              disablePadding\n                            >\n                              <ListItemButton\n                                onClick={() => goToList(list.id)}\n                              >\n                                <ListItemText\n                                  primary={list.name}\n                                />\n                              </ListItemButton>\n                            </ListItem>\n                          </>\n                        );\n                      })}\n                  </>\n                );\n              })}\n            </>}\n            {!filteredCategories.length && <>\n              <Typography>No created lists. Click the <AddIcon /> Button in the top right to get started.</Typography>\n            </>}\n          </CardContent>\n        </Card>\n      </>\n      <Tour\n        accentColor={`rgb(57, 110, 158)`}\n        className=\"tour\"\n        key={activeTab}\n        steps={[...allSteps, ...(steps[activeTab] || [])]}\n        isOpen={isTourOpen}\n        onRequestClose={() => {\n          setIsTourOpen(false);\n        }}\n        rounded={5}\n        onAfterOpen={(target) => (document.body.style.overflowY = \"hidden\")}\n        onBeforeClose={(target) => (document.body.style.overflowY = \"auto\")}\n      />\n      <input\n        id=\"file-Form.Control\"\n        type=\"file\"\n        name=\"name\"\n        multiple\n        ref={fileDialog}\n        onChange={uploadFile}\n        style={{ height: \"0px\", overflow: \"hidden\" }}\n      />\n    </Container>\n  );\n});\n","import RehypeToc from '@jsdevtools/rehype-toc';\nimport { useMediaQuery, useTheme } from '@mui/material';\nimport Box from \"@mui/material/Box\";\nimport Container from '@mui/material/Container';\nimport Tab from \"@mui/material/Tab\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Typography from \"@mui/material/Typography\";\nimport { DataContext } from 'hooks';\nimport useQueryParams from 'hooks/use-query-params';\nimport { get } from 'lodash';\nimport React, { useContext } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport styled from 'styled-components';\nimport { MarkdownRenderer } from 'utils/markdown';\n\nconst StyledRules = styled.div`\nh1 {\n  font-size: 20pt;\n  font-weight: bold;\n  border-bottom: 4px solid rgb(57, 110, 158);\n  padding-bottom: 0.25rem;\n}\nh2 {\n  font-size: 18pt;\n  border-bottom: 2px solid rgb(57, 110, 158);\n  padding-bottom: 0.25rem;\n}\nh3 {\n  font-size: 16pt;\n}\nh4 {\n  font-weight: bold;\n  font-size: 12pt;\n}\nh5 {\n  font-weight: bold;\n  font-size: 12pt;\n}\np {\n  break-inside: \"avoid-column\";\n  page-break-inside: avoid; /* For Firefox. */\n  -webkit-column-break-inside: avoid; /* For Chrome & friends. */\n  break-inside: avoid; /* For standard browsers like IE. :-) */\n}\n`;\n\nexport default function QuickRules(props) {\n  const [{ data: nope, userPrefs }] = useContext(DataContext);\n  const { gameRules, skirmishRules } = nope;\n  const showBeta = userPrefs.showBeta;\n  const gameTypesRaw = { all: { name: \"All\" }, ...get(nope, 'gameData.gameTypes', {}) };\n  const gamesUnsorted = Object.values(get(nope, `gameData.games`, {})).filter((game) => game.version && Number(game.version)).filter((game) => showBeta ? true : game.version && Number(game.version) >= 1);\n  const gameTypes = [...Object.keys(gameTypesRaw).filter((gameType) => gamesUnsorted.filter((game) => game.gameType === gameType).length)];\n  let [activeTab, setActiveTab] = useQueryParams(\"tab\", 0);\n  const mdRenderer = React.useMemo(() => MarkdownRenderer(), []);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const toggle = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  }\n  const handleChange = (event, newValue) => {\n    toggle(newValue);\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n  const activeTabNumber = parseInt(activeTab) || 0;\n  const activeGameTypeData = gameTypesRaw[gameTypes[activeTabNumber]];\n  const activeGameName = get(activeGameTypeData, 'name', 'Battle');\n  const activeRules = activeGameName === 'Battle' ? gameRules : skirmishRules;\n  return (\n    <Container>\n      <Typography variant=\"h3\" align=\"center\">{`Core Rules`}</Typography>\n      <Box sx={{ width: \"100%\", bgcolor: \"background.paper\", top: isMobile ? \"56px\" : \"64px\", }} className=\"sticky\">\n        {!!gameTypes && !!gameTypes.length && (\n          <>\n            <Box sx={{ width: \"100%\", bgcolor: \"background.paper\", pb: 1 }}>\n              <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n                <Tabs\n                  value={activeTabNumber}\n                  onChange={handleChange}\n                  aria-label=\"basic tabs example\"\n                >\n                  {gameTypes.map((tab, index) => {\n                    const gameTypeData = gameTypesRaw[tab];\n                    return (\n                      <Tab\n                        key={index}\n                        sx={{ textTransform: \"none\" }}\n                        label={gameTypeData?.name}\n                        {...a11yProps(0)}\n                      />\n                    );\n                  })}\n                </Tabs>\n              </Box>\n            </Box>\n          </>\n        )}\n      </Box>\n      {/* <Typography variant=\"h4\" align=\"center\" sx={{ mb: 2 }}>{`${activeGameTypeData?.name}`}</Typography> */}\n      <div\n        style={{ marginBottom: \"15px\", borderColor: \"rgb(57, 110, 158)\" }}\n      >\n        <div>\n          <StyledRules>\n            <ReactMarkdown components={mdRenderer} children={activeRules} rehypePlugins={[[RehypeToc, { headings: [\"h1\", \"h2\"] }]]} />\n          </StyledRules>\n        </div>\n      </div>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/battle_forged_wide.b1be5222.png\";","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MobileStepper from '@mui/material/MobileStepper';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport { CardMedia } from '@mui/material';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst imgs = [\n  {\n    label: 'San Francisco – Oakland Bay Bridge, United States',\n    imgPath:\n      'https://images.unsplash.com/photo-1537944434965-cf4679d1a598?auto=format&fit=crop&w=400&h=250&q=60',\n  },\n  {\n    label: 'Bird',\n    imgPath:\n      'https://images.unsplash.com/photo-1538032746644-0212e812a9e7?auto=format&fit=crop&w=400&h=250&q=60',\n  },\n  {\n    label: 'Bali, Indonesia',\n    imgPath:\n      'https://images.unsplash.com/photo-1537996194471-e657df975ab4?auto=format&fit=crop&w=400&h=250&q=80',\n  },\n  {\n    label: 'Goč, Serbia',\n    imgPath:\n      'https://images.unsplash.com/photo-1512341689857-198e7e2f3ca8?auto=format&fit=crop&w=400&h=250&q=60',\n  },\n];\n\nfunction SwipeableTextMobileStepper(props) {\n  const { images = imgs, maxHeight } = props;\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const maxSteps = images.length;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => (prevActiveStep + 1) % maxSteps);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => (prevActiveStep - 1) % maxSteps);\n  };\n\n  const handleStepChange = (step) => {\n    setActiveStep(step);\n  };\n\n  if (!images) {\n    return <></>\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Paper\n        square\n        elevation={0}\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          height: 50,\n          pl: 2,\n          bgcolor: 'background.default',\n        }}\n      >\n        <Typography>{images[activeStep].label}</Typography>\n      </Paper>\n      <AutoPlaySwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {images.map((step, index) => (\n          <div key={index}>\n            {Math.abs(activeStep - index) <= 2 ? (\n              <CardMedia component=\"img\" alt={step.label} image={step.imgPath}\n                style={{ maxHeight }} />\n            ) : null}\n          </div>\n        ))}\n      </AutoPlaySwipeableViews>\n      <MobileStepper\n        steps={maxSteps}\n        position=\"static\"\n        activeStep={activeStep}\n        nextButton={\n          <Button\n            size=\"small\"\n            onClick={handleNext}\n            // disabled={activeStep === maxSteps - 1}\n          >\n            Next\n            {theme.direction === 'rtl' ? (\n              <KeyboardArrowLeft />\n            ) : (\n              <KeyboardArrowRight />\n            )}\n          </Button>\n        }\n        backButton={\n          <Button\n            size=\"small\"\n            onClick={handleBack}\n            // disabled={activeStep === 0}\n          >\n            {theme.direction === 'rtl' ? (\n              <KeyboardArrowRight />\n            ) : (\n              <KeyboardArrowLeft />\n            )}\n            Back\n          </Button>\n        }\n      />\n    </Box>\n  );\n}\n\nexport default SwipeableTextMobileStepper;","import BuildIcon from '@mui/icons-material/Build';\nimport FeaturedPlayListIcon from '@mui/icons-material/FeaturedPlayList';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroid';\nimport {\n  Box, Card, CardActionArea, CardContent, Grid, Stack, Typography\n} from \"@mui/material\";\nimport Container from \"@mui/material/Container\";\nimport logo from \"assets/battle_forged_wide.png\";\nimport Gallery from 'components/gallery';\nimport { shuffle } from \"lodash\";\nimport ChessPawn from 'mdi-material-ui/ChessPawn';\nimport Dice6 from 'mdi-material-ui/Dice6';\nimport Discord from 'mdi-material-ui/Discord';\nimport Github from 'mdi-material-ui/Github';\nimport Newspaper from 'mdi-material-ui/Newspaper';\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useNavigate } from 'react-router-dom';\nimport { colors } from 'utils/colors';\nimport { getHeaders, getRandomHeader } from \"utils/images\";\nimport { MaterialRenderer } from \"utils/markdown\";\n\nexport default function Home() {\n  const navigate = useNavigate();\n  const images = React.useMemo(() => shuffle(getHeaders()), []);\n  const iconSize = '70px';\n  const mrender = MaterialRenderer();\n  const randomImage = React.useMemo(() => getRandomHeader(), []);\n  const CARDS = [\n    {\n      name: \"Rules\",\n      icon: <MenuBookIcon style={{ fontSize: iconSize }} />,\n      text: \"Read any of the core rules in their digital format here.\",\n      to: \"/rules\",\n      color: colors.red.import[800],\n    },\n    {\n      name: \"Games\",\n      icon: <Dice6 style={{ fontSize: iconSize }} />,\n      text: \"Browse all of the available game modules to experience.\",\n      to: \"/games\",\n      color: colors.green.import[900],\n    },\n    {\n      name: \"Rosters\",\n      icon: <FeaturedPlayListIcon style={{ fontSize: iconSize }} />,\n      text: \"Create and browse rosters to use during your games.\",\n      to: \"/lists\",\n      color: colors.brown.import[500],\n    },\n    {\n      name: \"Updates\",\n      icon: <Newspaper style={{ fontSize: iconSize }} />,\n      text: \"View any recent game updates and important announcements.\",\n      to: \"/updates\",\n      color: colors.purple.import[600],\n    },\n    {\n      name: \"Discuss\",\n      icon: <Discord style={{ fontSize: iconSize }} />,\n      text: \"Discuss the game and provide feedback here on our Discord.\",\n      toAbs: \"https://discord.gg/M9sets4\",\n      color: colors.blue.import[800],\n    },\n    {\n      name: \"Contribute\",\n      icon: <Github style={{ fontSize: iconSize }} />,\n      text: \"Contribute to the game modules on Github.\",\n      toAbs: \"https://github.com/wargame-engine\",\n      color: colors.blueGray.import[600],\n    },\n  ];\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundImage: `url(${`/images/headers/${randomImage.img}`})`,\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <Box sx={{ display: \"flex\", flexDirection: 'column' }} style={{ width: \"100%\", background: \"rgba(0,0,0,0.7)\" }}>\n          <img\n            flex={1}\n            // className={\"d-block text-center logo clickable\"}\n            className={\"d-block text-center logo\"}\n            src={logo}\n            // onClick={() => navigate(`/games`)}\n            alt=\"logo\"\n          />\n          <Box style={{ color: \"white\", textAlign: 'right' }}>\n            <Container>\n              <ReactMarkdown\n                className=\"banner-text\"\n                components={mrender}\n                style={{ breakInside: \"avoid-column\" }}\n                children={randomImage.credit}\n              />\n            </Container>\n          </Box>\n        </Box>\n      </div>\n      <Container>\n\n        <Grid\n          container\n          rowSpacing={2}\n          sx={{ mt: 2 }}\n          columnSpacing={2}\n        >\n          {CARDS.map((card) => (\n            <Grid item sm={6} md={4}>\n              <Card\n                sx={{\n                  backgroundColor: card.color,\n                  color: \"white\",\n                }}\n              >\n                <CardActionArea\n                  onClick={() =>\n                    card.toAbs\n                      ? window.open(card.toAbs, \"_blank\")\n                      : navigate(card.to)\n                  }\n                >\n                  <CardContent>\n                    <Box\n                      display=\"flex\"\n                      flexDirection=\"row\"\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                    >\n                      <Box sx={{ mr: 2 }}>{card.icon}</Box>\n                      <Stack>\n                        <Typography variant=\"h4\" component=\"div\">\n                          {card.name}\n                        </Typography>\n                        <Typography align=\"left\">{card.text}</Typography>\n                      </Stack>\n                    </Box>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n        <Box sx={{ mt: 4 }}>\n          <Typography variant=\"body1\" paragraph>\n            Battle Forge is a modular miniature wargame designed for either\n            small skirmish engagements or large all out battles. It allows you\n            to experience your favorite settings and miniatures in a common and\n            balanced set of rules with awesome tools to help you create your own\n            modules and share them easily.\n          </Typography>\n          <Typography variant=\"body1\" paragraph>\n            We aim to bring you a ruleset that works well in both a tournament\n            setting and casual fun environments. With regular balance updates\n            and direct player-driven feedback we can respond to issues with the\n            system in a timely manner and continue to improve to benefit all\n            types of players. We invite you to come give the rules a try for\n            free and see what you think. Any feedback can be directed to our\n            Discord server linked above. We hope you enjoy it. From all of us at\n            Indie Game Rules, thanks for stopping by!\n          </Typography>\n        </Box>\n      </Container>\n      <Container>\n        <Gallery\n          images={images.map((img) => ({ imgPath: `/images/headers/${img.img}`, label: <ReactMarkdown components={mrender} className=\"rule-text\" children={img.credit} /> }))}\n          maxHeight={400}\n        />\n      </Container>\n      <Container>\n        <Grid\n          container\n          rowSpacing={1}\n          sx={{ mt: 2 }}\n          columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n        >\n          <Grid item md={4}>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              flexDirection=\"column\"\n            >\n              <div style={{ padding: \"5px\" }}>\n                <ChessPawn style={{ fontSize: '100px', color: colors.blue.import[800] }} />\n              </div>\n              <Typography variant=\"h5\" gutterBottom>Strategic Gameplay</Typography>\n              <Typography paragraph>\n                The rules employ alternating activation with a twist, in that\n                both players risk a certain amount of \"Shock\", pushing their\n                units to their limit each round to attempt to seize the\n                initiative. Additionally, units may be deployed in hidden\n                positions to attempt to outsmart or outbluff your opponent.\n              </Typography>\n              <Typography paragraph>\n                The Shock system introduces a Command and Control element to\n                ensure that you will have to adapt to the changing battlefield\n                and use your Leaders to their full effect to keep your units\n                fighting at full efficiency. Crucially, these mechanics will\n                rarely cause you to lose a unit's entire activation, only weaken\n                them to avoid frustration.\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item md={4}>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              flexDirection=\"column\"\n            >\n              <div style={{ padding: \"5px\" }}>\n                <PhoneAndroidIcon\n                  style={{ fontSize: '100px', color: colors.green.import[800] }}\n                />\n              </div>\n              <Typography variant=\"h5\" gutterBottom>Living Rules</Typography>\n              <Typography paragraph>\n                The project lives here on its digital hub and is quickly and\n                easily updated to ensure the latest rules and updates are\n                available in one place without having to download additional FAQ\n                and Errata documents.\n              </Typography>\n              <Typography paragraph>\n                The digital hub is also designed to be used as a reference while\n                playing and is mobile-friendly with all features available on\n                both desktop and mobile devices.\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item md={4}>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              flexDirection=\"column\"\n            >\n              <div style={{ padding: \"10px\" }}>\n                <BuildIcon\n                  style={{ fontSize: '100px', color: colors.gray.import[800] }}\n                />\n              </div>\n              <Typography variant=\"h5\" gutterBottom>Fully Mod-able</Typography>\n              <Typography paragraph>\n                All of our released game settings configuration files are fully\n                downloadable and editable with our developed tools to allow you\n                to create your own units, factions or even entirely new game\n                settings.\n              </Typography>\n              <Typography paragraph>\n                The games are all about community-driven content and regular\n                balance feedback. The tools we've created allow us to very\n                rapidly make balance changes that will apply to all settings and\n                datasheets as well as your custom ones so you get the latest\n                adjustments quickly.\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n        {/* <Stack\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          flexDirection=\"row\"\n          direction=\"row\"\n          spacing={2}\n        >\n          <Button\n            variant=\"contained\"\n            startIcon={<FontAwesomeIcon icon={faPencilAlt} />}\n            onClick={() => {\n              window.open(\"https://github.com/wargame-engine\");\n            }}\n          >\n            {\"Contribute\"}\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<FontAwesomeIcon icon={faMoneyBillWave} />}\n            onClick={() => {\n              window.open(\"https://www.patreon.com/bePatron?u=36845786\");\n            }}\n          >\n            {\"Support\"}\n          </Button>\n        </Stack> */}\n      </Container>\n    </>\n  );\n}\n","import { getRandomItem } from 'utils/math';\nimport banners from 'assets/data/banners.json';\nexport function getRandomHeader() {\n    return getRandomItem(banners);\n}\nexport function getHeaders() {\n    return banners;\n}\n\n","import { Container } from '@mui/material';\nimport { DataContext } from 'hooks';\nimport React, { useContext } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport styled from 'styled-components';\nimport { MarkdownRenderer } from 'utils/markdown';\nimport Typography from '@mui/material/Typography';\n\nconst StyledRules = styled.div`\n  h1:not(:first-child) {\n    margin-top: 1.5em;\n  }\n  h1 {\n    font-size: 20pt;\n    font-weight: bold;\n    border-bottom: 4px solid rgb(57, 110, 158);\n    padding-bottom: 0.25rem;\n  }\n  h2 {\n    font-size: 18pt;\n    border-bottom: 2px solid rgb(57, 110, 158);\n    margin-top: 0.5em;\n    padding-bottom: 0.25rem;\n  }\n  h3 {\n    font-size: 16pt;\n  }\n  h4 {\n    font-weight: bold;\n    font-size: 12pt;\n  }\n  h5 {\n    font-weight: bold;\n    font-size: 12pt;\n  }\n  p {\n    break-inside: \"avoid-column\";\n    page-break-inside: avoid; /* For Firefox. */\n    -webkit-column-break-inside: avoid; /* For Chrome & friends. */\n    break-inside: avoid; /* For standard browsers like IE. :-) */\n  }\n`;\n\nexport default function QuickRules(props) {\n  const [{ data: nope }] = useContext(DataContext);\n  const { updates } = nope;\n  const mdRenderer = React.useMemo(() => (MarkdownRenderer({useToc: false})), []);\n  return (\n    <Container>\n      <>\n      <Typography variant=\"h3\" align=\"center\" sx={{ mb: 4 }}>{`Game Updates`}</Typography>\n        <div style={{ marginBottom: '15px', borderColor: 'rgb(57, 110, 158)' }}>\n          <div>\n            <StyledRules className=\"rule-text\">\n              <ReactMarkdown components={mdRenderer} children={updates} />\n            </StyledRules>\n          </div>\n        </div>\n      </>\n    </Container>\n  );\n}\n","// @ts-nocheck\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Box, Container, IconButton } from '@mui/material';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport 'App.css';\nimport { Footer } from 'components/footer';\nimport { MainNav } from 'components/MainNav';\nimport { useDataFetcher, usePageTitle } from 'hooks';\nimport { get } from \"lodash\";\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport { useLocation } from 'react-router';\nimport { Route, Routes } from 'react-router-dom';\nimport Faction from \"routes/faction\";\nimport Factions from \"routes/factions\";\nimport Games from \"routes/games\";\nimport Lists from \"routes/Lists\";\nimport PageNotFound from \"routes/PageNotFound\";\nimport Privacy from \"routes/Privacy\";\nimport Rosters from \"routes/rosters\";\nimport Rules from \"routes/Rules\";\nimport Splash from \"routes/Splash\";\nimport Updates from \"routes/Updates\";\nimport { getColor } from 'utils/colors';\nimport { BASE_THEME } from 'utils/constants';\nimport { DataContext, ModalProvider } from './hooks';\n\nconst App = () => {\n  const dataFetcher = useDataFetcher();\n  const [{ userPrefs, data }] = dataFetcher;\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const browserTheme = prefersDarkMode ? 'dark' : 'light';\n  const userTheme = userPrefs?.theme;\n  const themeId = (!userTheme || userTheme === 'system') ? browserTheme : userTheme;\n  const userPrimaryColor = getColor(userPrefs?.primaryColor)?.import || getColor('blue')?.import;\n  const location = useLocation();\n  const path = get(location, \"pathname\", \"/\");\n  const theme = createTheme({\n    ...BASE_THEME,\n    palette: {\n      mode: themeId,\n      primary: userPrimaryColor\n    }\n  });\n  const fullScreen = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const title = usePageTitle({ optData: data });\n  React.useEffect(() => {\n    document.title = `Battle Forge - ${title}`\n  }, [title]);\n  const notistackRef = React.createRef();\n  const onClickDismiss = key => () => {\n    notistackRef.current.closeSnackbar(key);\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ModalProvider>\n        <SnackbarProvider\n          ref={notistackRef}\n          maxSnack={3}\n          action={(key) => (\n            <IconButton sx={{ color: 'inherit' }} onClick={onClickDismiss(key)}>\n              <CloseIcon />\n            </IconButton>\n          )}\n        >\n          <DataContext.Provider value={dataFetcher}>\n            <CssBaseline />\n            <>\n              <MainNav />\n              <div className=\"main\">\n                {path !== \"/\" && (\n                  <Container>\n                    <Box sx={{ pt: 1, pb: 1 }}>\n                      {/* <Breadcrumbs /> */}\n                    </Box>\n                  </Container>\n                )}\n                <Box sx={{ ml: fullScreen ? '250px' : '0', mb: 2 }}>\n                  <Routes>\n                    <Route path=\"/\" element={<Splash />} />\n                    <Route path=\"/privacy\" element={<Privacy />} />\n                    <Route path=\"/rules\" element={<Rules />} />\n                    <Route path=\"/updates\" element={<Updates />} />\n                    <Route\n                      path=\"/games/:gameName/:factionName\"\n                      element={<Faction />}\n                    />\n                    <Route path=\"/games/:gameName\" element={<Factions />} />\n                    <Route path=\"/games\" element={<Games />} />\n                    <Route path=\"/lists\" element={<Rosters />} />\n                    <Route\n                      path=\"/lists/:listId\"\n                      element={<Lists />}\n                    />\n                    <Route element={<PageNotFound />} />\n                  </Routes>\n                  <Footer className=\"footer\" />\n                </Box>\n              </div>\n            </>\n          </DataContext.Provider>\n        </SnackbarProvider>\n      </ModalProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;","import { get, omitBy } from \"lodash\";\nimport { mergeWith, set } from \"lodash/fp\";\nimport React, { useEffect, useState } from \"react\";\nimport { isUrl } from \"utils/files\";\nimport { customMerge } from \"utils/misc\";\n\nexport const useDataFetcher = (myUrl) => {\n  const localData = JSON.parse(localStorage.getItem(\"data\") || \"{}\");\n  const localPrefs = JSON.parse(localStorage.getItem(\"userPrefs\") || \"{}\");\n  const [data, setData] = useState(localData);\n  const [userPrefs, setUserPrefs] = useState(localPrefs);\n  const [appState, setAppState] = useState({});\n  const [url, setUrl] = useState(\n    myUrl || \"https://raw.githubusercontent.com/wargame-engine/root/master/\"\n  );\n  // Directly overwrite faction related stuff\n  const overwrite = new Set([\n    \"powerCategories\",\n    \"weather\",\n    \"secondaries\",\n    \"missions\",\n    \"buyLinks\",\n    \"units\",\n    \"powers\",\n    \"terrain\",\n    \"strategies\",\n    \"weapons\",\n    \"rules\",\n    \"perks\",\n    \"models\",\n    \"subfactions\",\n    \"setbacks\",\n    \"relics\",\n    \"categories\",\n    \"organizations\",\n    \"alliances\",\n  ]);\n  // const missionUrl = \"/data/missions/index.json\";\n  const ruleUrl = \"/data/rules.md\";\n  const skirmishRuleUrl = \"/data/rules_skirmish.md\";\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const updateUserPrefs = (myData) => {\n    const newData = {\n      ...userPrefs,\n      ...myData,\n    };\n    localStorage.setItem(\"userPrefs\", JSON.stringify(newData));\n    setUserPrefs(newData);\n  };\n  const updateData = (myData) => {\n    localStorage.setItem(\"data\", JSON.stringify(myData));\n    setData(myData);\n  };\n  const fetchGameSystems = React.useCallback(async (factionsUrl) => {\n    return fetchData(`${factionsUrl || url}index.json`)\n      .then((resultData) => {\n        return resultData;\n      })\n      .catch((e) => { });\n  }, [url]);\n  const fetchFactions = async (factionsUrl) => {\n    return fetchData(`${factionsUrl}index.json`)\n      .then((resultData) => {\n        return resultData;\n      })\n      .catch((e) => { });\n  };\n  // const fetchMissions = async (missionsUrl) => {\n  //   return fetchData(missionsUrl || missionUrl)\n  //     .then((resultData) => {\n  //       return resultData;\n  //     })\n  //     .catch((e) => Promise.reject(e));\n  // };\n  const fetchNameLists = React.useCallback(async (namelistsUrl) => {\n    return fetchData(`${namelistsUrl || url}namelists.json`)\n      .then((resultData) => {\n        return resultData;\n      })\n      .catch((e) => Promise.reject(e));\n  }, [url]);\n  const fetchGameUpdates = React.useCallback(async (updatesUrl) => {\n    return fetchTextData(`${updatesUrl || url}updates.md`)\n      .then((resultData) => {\n        return resultData;\n      })\n      .catch((e) => Promise.reject(e));\n  }, [url]);\n  const fetchRules = React.useCallback(async (rulesUrl) => {\n    return fetchTextData(rulesUrl || ruleUrl)\n      .then((resultData) => {\n        return resultData;\n      })\n      .catch((e) => Promise.reject(e));\n  }, []);\n  const fetchSkirmishRules = React.useCallback(async (rulesUrl) => {\n    return fetchTextData(rulesUrl || skirmishRuleUrl)\n      .then((resultData) => {\n        return resultData;\n      })\n      .catch((e) => Promise.reject(e));\n  }, []);\n  const fetchAllData = React.useCallback(async (reset = false) => {\n    const resultData = await fetchGameSystems();\n    // const resultDataMissions = await fetchMissions();\n    const resultDataNameLists = await fetchNameLists();\n    const resultDataUpdates = await fetchGameUpdates();\n    const resultDataRules = await fetchRules();\n    const resultSkirmishRules = await fetchSkirmishRules();\n    const allData = {\n      lastFetch: Date.now(),\n      gameData: {\n        ...get(data, \"gameData\", {}),\n        ...resultData,\n        globalData: {\n          ...get(data, \"gameData.globalData\", {}),\n          ...get(resultData, \"globalData\", {}),\n          all: {\n            ...get(data, \"gameData.globalData.all\", {}),\n            ...get(resultData, \"globalData.all\", {}),\n            nameLists: resultDataNameLists,\n          },\n        },\n      },\n      customData: reset\n        ? {}\n        : {\n          ...get(data, \"customData\", {}),\n        },\n      updates: resultDataUpdates,\n      gameRules: resultDataRules,\n      skirmishRules: resultSkirmishRules,\n      lists: get(data, \"lists\", {}),\n    };\n    updateData(allData);\n    return allData;\n  }, [data, fetchGameSystems, fetchGameUpdates, fetchNameLists, fetchRules, fetchSkirmishRules]);\n  useEffect(() => {\n    const hasGameData = !Object.keys(get(data, `gameData.games`, {})).length;\n    const MAX_CACHE_AGE = 2 * 60 * 60 * 1000; // 2 hours\n    if (hasGameData || Date.now() - get(data, `lastFetch`, 0) > MAX_CACHE_AGE) {\n      fetchAllData();\n    }\n  }, [data, fetchAllData, url]);\n\n  const refreshData = (gameid) => {\n    const gameUrl = get(data, `gameData.games[${gameid}].url`);\n    if (!gameUrl) {\n      return Promise.resolve({});\n    }\n    return fetchFactions(`${gameUrl}`)\n      .then((gameData) => {\n        let newData = {\n          ...data,\n          gameData: {\n            ...get(data, \"gameData\", {}),\n            games: {\n              ...get(data, \"gameData.games\", {}),\n              [gameid]: {\n                ...get(data, `gameData.games[${gameid}]`),\n                ...gameData,\n              },\n            },\n          },\n          customData: {\n            games: {\n              ...get(data, \"customData.games\", {}),\n              [gameid]: {},\n            },\n          },\n        };\n        updateData(newData);\n        return gameData;\n      })\n      .catch((error) => {\n        return Promise.resolve({});\n      });\n  };\n\n  const refreshFaction = (gameid, factionName) => {\n    return fetchFaction(gameid, factionName)\n      .then((gameData) => {\n        let newData = {\n          ...data,\n          customData: {\n            games: {\n              ...get(data, \"customData.games\", {}),\n            },\n          },\n        };\n        if (get(data, `customData.games[${gameid}]`)) {\n          newData.customData.games[gameid] = {\n            ...get(data, `customData.games[${gameid}]`, {}),\n            factions: {\n              ...get(data, `customData.games[${gameid}].factions`, {}),\n              [factionName]: {},\n            },\n          };\n        }\n        updateData(newData);\n        return gameData;\n      })\n      .catch((error) => {\n        return Promise.resolve({});\n      });\n  };\n\n  const fetchTextData = async (someUrl) => {\n    setIsError(false);\n    setIsLoading(true);\n    try {\n      const result = await fetch(someUrl);\n      const resultData = await result.text();\n      setIsLoading(false);\n      return resultData;\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n      return Promise.reject(error);\n    }\n  };\n\n  const fetchData = async (someUrl) => {\n    setIsError(false);\n    setIsLoading(true);\n    try {\n      const result = await fetch(someUrl);\n      const resultData = await result.json();\n      setIsLoading(false);\n      return resultData;\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n      return Promise.reject(error);\n    }\n  };\n\n  const updateGameData = (gameName, updatedData) => {\n    const newData = {\n      ...data,\n      games: {\n        ...get(data, \"games\", {}),\n        [gameName]: {\n          ...[get(data, `games[${gameName}]`, {}), updatedData].reduce(\n            customMerge\n          ),\n        },\n      },\n    };\n    updateData(newData);\n  };\n\n  const fetchFaction = (gameName, factionName) => {\n    const fetch = async () => {\n      const gameUrl =\n        get(data, `gameData.games[${gameName}].url`) ||\n        get(data, `customData.games[${gameName}].url`);\n      if (!gameUrl) {\n        return Promise.resolve({});\n      }\n      const gameData = await fetchFactions(`${gameUrl}`);\n      const newData = set(\n        `gameData.games.${gameName}`,\n        { ...gameData, ...get(data, `gameData.games.${gameName}`, {}) },\n        data\n      );\n      const factionUrl =\n        get(\n          newData,\n          `gameData.games[${gameName}].factions[${factionName}].url`\n        ) ||\n        get(\n          newData,\n          `customData.games[${gameName}].factions[${factionName}].url`\n        );\n      if (!factionUrl) {\n        return Promise.resolve({});\n      }\n      const fullFactionUrl = isUrl(factionUrl)\n        ? factionUrl\n        : `${gameUrl}${factionUrl}`;\n      const factionData = await fetchData(fullFactionUrl);\n      const newDataWithFaction = set(\n        `gameData.games.${gameName}.factions.${factionName}`,\n        {\n          ...get(gameData, `factions[${factionName}]`, {}),\n          ...get(\n            data,\n            `gameData.games[${gameName}].factions[${factionName}]`,\n            {}\n          ),\n          ...factionData,\n        },\n        newData\n      );\n      updateData(newDataWithFaction);\n      return factionData;\n    };\n    return fetch();\n  };\n\n  const fetchGame = (gameid) => {\n    const fetch = async () => {\n      const gameUrl = get(data, `gameData.games[${gameid}].url`);\n      if (!gameUrl) {\n        return Promise.resolve({});\n      }\n      return fetchFactions(`${gameUrl}`)\n        .then((gameData) => {\n          let newData = {\n            ...data,\n            gameData: {\n              ...get(data, \"gameData\", {}),\n              games: {\n                ...get(data, \"gameData.games\", {}),\n                [gameid]: {\n                  ...gameData,\n                  ...omitBy(\n                    get(data, `gameData.games[${gameid}]`, {}),\n                    (game) => game.url\n                  ),\n                },\n              },\n            },\n          };\n          updateData(newData);\n          return gameData;\n        })\n        .catch((error) => {\n          return Promise.resolve({});\n        });\n    };\n    fetch();\n  };\n\n  const deep = mergeWith(\n    (objValue, srcValue, key, object, source, stack) => {\n      if (overwrite.has(key)) {\n        return srcValue;\n      }\n    },\n    get(data, \"gameData\", {}),\n    get(data, \"customData\", {})\n  );\n  const mergedData = {\n    ...data,\n    gameData: deep,\n  };\n  return [\n    {\n      data: mergedData,\n      coreData: data,\n      isLoading,\n      isError,\n      refreshFaction,\n      setUrl,\n      fetchFaction,\n      fetchGame,\n      setData: updateData,\n      updateGameData,\n      refreshData,\n      refreshAllData: fetchAllData,\n      appState,\n      setAppState,\n      userPrefs,\n      setUserPrefs: updateUserPrefs,\n    },\n  ];\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n//import './theme.css';\nimport './index.css';\n//import './theming.css';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}